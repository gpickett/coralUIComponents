{
  "version": 3,
  "sources": ["../../prismjs/prism.js", "../../boolbase/index.js", "../../rehype-prism/dist/esm/src/index.js", "../../rehype-prism/dist/esm/src/constant.js", "../../rehype-prism/dist/esm/src/create-parse-code-vistor.js", "../../hast-util-parse-selector/lib/index.js", "../../hast-util-from-parse5/node_modules/hastscript/lib/create-h.js", "../../hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js", "../../hast-util-from-parse5/node_modules/hastscript/lib/index.js", "../../vfile-location/lib/index.js", "../../web-namespaces/index.js", "../../hast-util-from-parse5/lib/index.js", "../../parse5/dist/common/unicode.js", "../../parse5/dist/common/error-codes.js", "../../parse5/dist/tokenizer/preprocessor.js", "../../parse5/dist/common/token.js", "../../entities/lib/esm/generated/generated/decode-data-html.ts", "../../entities/lib/esm/generated/generated/decode-data-xml.ts", "../../entities/lib/esm/decode_codepoint.ts", "../../entities/lib/esm/decode.ts", "../../parse5/dist/common/html.js", "../../parse5/dist/tokenizer/index.js", "../../parse5/dist/parser/open-element-stack.js", "../../parse5/dist/parser/formatting-element-list.js", "../../parse5/dist/tree-adapters/default.js", "../../parse5/dist/common/doctype.js", "../../parse5/dist/common/foreign-content.js", "../../parse5/dist/parser/index.js", "../../entities/lib/esm/escape.ts", "../../parse5/dist/serializer/index.js", "../../parse5/dist/index.js", "../../hast-util-from-html/lib/errors.js", "../../hast-util-from-html/lib/index.js", "../../rehype-parse/lib/index.js", "../../css-selector-parser/dist/mjs/indexes.js", "../../css-selector-parser/dist/mjs/pseudo-signatures.js", "../../css-selector-parser/dist/mjs/syntax-definitions.js", "../../css-selector-parser/dist/mjs/utils.js", "../../css-selector-parser/dist/mjs/parser.js", "../../css-selector-parser/dist/mjs/ast.js", "../../unist-util-select/lib/parse.js", "../../unist-util-select/lib/util.js", "../../unist-util-select/lib/attribute.js", "../../nth-check/lib/esm/parse.ts", "../../nth-check/lib/esm/compile.ts", "../../nth-check/lib/esm/index.ts", "../../unist-util-select/lib/pseudo.js", "../../unist-util-select/lib/test.js", "../../unist-util-select/lib/walk.js", "../../unist-util-select/index.js", "../../rehype-prism/dist/esm/src/utils/append-class-name.js", "../../rehype-prism/dist/esm/src/utils/get-lang.js", "../../hastscript/node_modules/property-information/lib/util/schema.js", "../../hastscript/node_modules/property-information/lib/util/merge.js", "../../hastscript/node_modules/property-information/lib/normalize.js", "../../hastscript/node_modules/property-information/lib/util/info.js", "../../hastscript/node_modules/property-information/lib/util/types.js", "../../hastscript/node_modules/property-information/lib/util/defined-info.js", "../../hastscript/node_modules/property-information/lib/util/create.js", "../../hastscript/node_modules/property-information/lib/xlink.js", "../../hastscript/node_modules/property-information/lib/xml.js", "../../hastscript/node_modules/property-information/lib/util/case-sensitive-transform.js", "../../hastscript/node_modules/property-information/lib/util/case-insensitive-transform.js", "../../hastscript/node_modules/property-information/lib/xmlns.js", "../../hastscript/node_modules/property-information/lib/aria.js", "../../hastscript/node_modules/property-information/lib/html.js", "../../hastscript/node_modules/property-information/lib/svg.js", "../../hastscript/node_modules/property-information/lib/find.js", "../../hastscript/node_modules/property-information/index.js", "../../hastscript/lib/create-h.js", "../../hastscript/lib/svg-case-sensitive-tag-names.js", "../../hastscript/lib/index.js", "../../rehype-prism/dist/esm/src/plugins/copy-to-clipboard.js", "../../rehype-prism/dist/esm/src/utils/is-element-node.js", "../../rehype-prism/dist/esm/src/utils/select-code-element.js", "../../rehype-prism/dist/esm/src/plugins/line-numbers.js", "../../rehype-prism/dist/esm/src/plugins/toolbar.js", "../../rehype-prism/dist/esm/src/create-plugin-applier.js", "../../rehype-prism/dist/esm/src/utils/is-text-node.js", "../../rehype-prism/dist/esm/src/create-pre-element-selector.js"],
  "sourcesContent": ["\r\n/* **********************************************\r\n     Begin prism-core.js\r\n********************************************** */\r\n\r\n/// <reference lib=\"WebWorker\"/>\r\n\r\nvar _self = (typeof window !== 'undefined')\r\n\t? window   // if in browser\r\n\t: (\r\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\r\n\t\t\t? self // if in worker\r\n\t\t\t: {}   // if in node js\r\n\t);\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n *\r\n * @license MIT <https://opensource.org/licenses/MIT>\r\n * @author Lea Verou <https://lea.verou.me>\r\n * @namespace\r\n * @public\r\n */\r\nvar Prism = (function (_self) {\r\n\r\n\t// Private helper vars\r\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\r\n\tvar uniqueId = 0;\r\n\r\n\t// The grammar object for plaintext\r\n\tvar plainTextGrammar = {};\r\n\r\n\r\n\tvar _ = {\r\n\t\t/**\r\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\r\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\r\n\t\t * additional languages or plugins yourself.\r\n\t\t *\r\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\r\n\t\t *\r\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\r\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * window.Prism = window.Prism || {};\r\n\t\t * Prism.manual = true;\r\n\t\t * // add a new <script> to load Prism's script\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @default false\r\n\t\t * @type {boolean}\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\tmanual: _self.Prism && _self.Prism.manual,\r\n\t\t/**\r\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\r\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\r\n\t\t * own worker, you don't want it to do this.\r\n\t\t *\r\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\r\n\t\t *\r\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\r\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\r\n\t\t *\r\n\t\t * ```js\r\n\t\t * window.Prism = window.Prism || {};\r\n\t\t * Prism.disableWorkerMessageHandler = true;\r\n\t\t * // Load Prism's script\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @default false\r\n\t\t * @type {boolean}\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\r\n\r\n\t\t/**\r\n\t\t * A namespace for utility methods.\r\n\t\t *\r\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\r\n\t\t * change or disappear at any time.\r\n\t\t *\r\n\t\t * @namespace\r\n\t\t * @memberof Prism\r\n\t\t */\r\n\t\tutil: {\r\n\t\t\tencode: function encode(tokens) {\r\n\t\t\t\tif (tokens instanceof Token) {\r\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\r\n\t\t\t\t} else if (Array.isArray(tokens)) {\r\n\t\t\t\t\treturn tokens.map(encode);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns the name of the type of the given value.\r\n\t\t\t *\r\n\t\t\t * @param {any} o\r\n\t\t\t * @returns {string}\r\n\t\t\t * @example\r\n\t\t\t * type(null)      === 'Null'\r\n\t\t\t * type(undefined) === 'Undefined'\r\n\t\t\t * type(123)       === 'Number'\r\n\t\t\t * type('foo')     === 'String'\r\n\t\t\t * type(true)      === 'Boolean'\r\n\t\t\t * type([1, 2])    === 'Array'\r\n\t\t\t * type({})        === 'Object'\r\n\t\t\t * type(String)    === 'Function'\r\n\t\t\t * type(/abc+/)    === 'RegExp'\r\n\t\t\t */\r\n\t\t\ttype: function (o) {\r\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\r\n\t\t\t *\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @returns {number}\r\n\t\t\t */\r\n\t\t\tobjId: function (obj) {\r\n\t\t\t\tif (!obj['__id']) {\r\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\r\n\t\t\t\t}\r\n\t\t\t\treturn obj['__id'];\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a deep clone of the given object.\r\n\t\t\t *\r\n\t\t\t * The main intended use of this function is to clone language definitions.\r\n\t\t\t *\r\n\t\t\t * @param {T} o\r\n\t\t\t * @param {Record<number, any>} [visited]\r\n\t\t\t * @returns {T}\r\n\t\t\t * @template T\r\n\t\t\t */\r\n\t\t\tclone: function deepClone(o, visited) {\r\n\t\t\t\tvisited = visited || {};\r\n\r\n\t\t\t\tvar clone; var id;\r\n\t\t\t\tswitch (_.util.type(o)) {\r\n\t\t\t\t\tcase 'Object':\r\n\t\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\r\n\t\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\t\tfor (var key in o) {\r\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\r\n\r\n\t\t\t\t\tcase 'Array':\r\n\t\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclone = [];\r\n\t\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\r\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn o;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\r\n\t\t\t *\r\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\r\n\t\t\t *\r\n\t\t\t * @param {Element} element\r\n\t\t\t * @returns {string}\r\n\t\t\t */\r\n\t\t\tgetLanguage: function (element) {\r\n\t\t\t\twhile (element) {\r\n\t\t\t\t\tvar m = lang.exec(element.className);\r\n\t\t\t\t\tif (m) {\r\n\t\t\t\t\t\treturn m[1].toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement = element.parentElement;\r\n\t\t\t\t}\r\n\t\t\t\treturn 'none';\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\r\n\t\t\t *\r\n\t\t\t * @param {Element} element\r\n\t\t\t * @param {string} language\r\n\t\t\t * @returns {void}\r\n\t\t\t */\r\n\t\t\tsetLanguage: function (element, language) {\r\n\t\t\t\t// remove all `language-xxxx` classes\r\n\t\t\t\t// (this might leave behind a leading space)\r\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\r\n\r\n\t\t\t\t// add the new `language-xxxx` class\r\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\r\n\t\t\t\telement.classList.add('language-' + language);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns the script element that is currently executing.\r\n\t\t\t *\r\n\t\t\t * This does __not__ work for line script element.\r\n\t\t\t *\r\n\t\t\t * @returns {HTMLScriptElement | null}\r\n\t\t\t */\r\n\t\t\tcurrentScript: function () {\r\n\t\t\t\tif (typeof document === 'undefined') {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tif (document.currentScript && document.currentScript.tagName === 'SCRIPT' && 1 < 2 /* hack to trip TS' flow analysis */) {\r\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// IE11 workaround\r\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\r\n\t\t\t\t// this will not work for inline scripts\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\r\n\t\t\t\t\t// A stack will look like this:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Error\r\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\r\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\r\n\r\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\r\n\t\t\t\t\t\tfor (var i in scripts) {\r\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\r\n\t\t\t\t\t\t\t\treturn scripts[i];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns whether a given class is active for `element`.\r\n\t\t\t *\r\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\r\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\r\n\t\t\t * given class is just the given class with a `no-` prefix.\r\n\t\t\t *\r\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\r\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\r\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\r\n\t\t\t *\r\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\r\n\t\t\t * version of it, the class is considered active.\r\n\t\t\t *\r\n\t\t\t * @param {Element} element\r\n\t\t\t * @param {string} className\r\n\t\t\t * @param {boolean} [defaultActivation=false]\r\n\t\t\t * @returns {boolean}\r\n\t\t\t */\r\n\t\t\tisActive: function (element, className, defaultActivation) {\r\n\t\t\t\tvar no = 'no-' + className;\r\n\r\n\t\t\t\twhile (element) {\r\n\t\t\t\t\tvar classList = element.classList;\r\n\t\t\t\t\tif (classList.contains(className)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (classList.contains(no)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement = element.parentElement;\r\n\t\t\t\t}\r\n\t\t\t\treturn !!defaultActivation;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\r\n\t\t *\r\n\t\t * @namespace\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\tlanguages: {\r\n\t\t\t/**\r\n\t\t\t * The grammar for plain, unformatted text.\r\n\t\t\t */\r\n\t\t\tplain: plainTextGrammar,\r\n\t\t\tplaintext: plainTextGrammar,\r\n\t\t\ttext: plainTextGrammar,\r\n\t\t\ttxt: plainTextGrammar,\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\r\n\t\t\t *\r\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\r\n\t\t\t * will be overwritten at its original position.\r\n\t\t\t *\r\n\t\t\t * ## Best practices\r\n\t\t\t *\r\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\r\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\r\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\r\n\t\t\t *\r\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\r\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\r\n\t\t\t *\r\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\r\n\t\t\t * @param {Grammar} redef The new tokens to append.\r\n\t\t\t * @returns {Grammar} The new language created.\r\n\t\t\t * @public\r\n\t\t\t * @example\r\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\r\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\r\n\t\t\t *     // at its original position\r\n\t\t\t *     'comment': { ... },\r\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\r\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\r\n\t\t\t * });\r\n\t\t\t */\r\n\t\t\textend: function (id, redef) {\r\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\r\n\r\n\t\t\t\tfor (var key in redef) {\r\n\t\t\t\t\tlang[key] = redef[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn lang;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\r\n\t\t\t *\r\n\t\t\t * ## Usage\r\n\t\t\t *\r\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\r\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\r\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\r\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\r\n\t\t\t * this:\r\n\t\t\t *\r\n\t\t\t * ```js\r\n\t\t\t * Prism.languages.markup.style = {\r\n\t\t\t *     // token\r\n\t\t\t * };\r\n\t\t\t * ```\r\n\t\t\t *\r\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\r\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\r\n\t\t\t *\r\n\t\t\t * ```js\r\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\r\n\t\t\t *     'style': {\r\n\t\t\t *         // token\r\n\t\t\t *     }\r\n\t\t\t * });\r\n\t\t\t * ```\r\n\t\t\t *\r\n\t\t\t * ## Special cases\r\n\t\t\t *\r\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\r\n\t\t\t * will be ignored.\r\n\t\t\t *\r\n\t\t\t * This behavior can be used to insert tokens after `before`:\r\n\t\t\t *\r\n\t\t\t * ```js\r\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\r\n\t\t\t *     'comment': Prism.languages.markup.comment,\r\n\t\t\t *     // tokens after 'comment'\r\n\t\t\t * });\r\n\t\t\t * ```\r\n\t\t\t *\r\n\t\t\t * ## Limitations\r\n\t\t\t *\r\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\r\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\r\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\r\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\r\n\t\t\t *\r\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\r\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\r\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\r\n\t\t\t *\r\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\r\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\r\n\t\t\t *\r\n\t\t\t * ```js\r\n\t\t\t * var oldMarkup = Prism.languages.markup;\r\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\r\n\t\t\t *\r\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\r\n\t\t\t * assert(newMarkup === Prism.languages.markup);\r\n\t\t\t * ```\r\n\t\t\t *\r\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\r\n\t\t\t * object to be modified.\r\n\t\t\t * @param {string} before The key to insert before.\r\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\r\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\r\n\t\t\t * object to be modified.\r\n\t\t\t *\r\n\t\t\t * Defaults to `Prism.languages`.\r\n\t\t\t * @returns {Grammar} The new grammar object.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tinsertBefore: function (inside, before, insert, root) {\r\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\r\n\t\t\t\tvar grammar = root[inside];\r\n\t\t\t\t/** @type {Grammar} */\r\n\t\t\t\tvar ret = {};\r\n\r\n\t\t\t\tfor (var token in grammar) {\r\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\r\n\r\n\t\t\t\t\t\tif (token == before) {\r\n\t\t\t\t\t\t\tfor (var newToken in insert) {\r\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\r\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\r\n\t\t\t\t\t\t\tret[token] = grammar[token];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar old = root[inside];\r\n\t\t\t\troot[inside] = ret;\r\n\r\n\t\t\t\t// Update references in other language definitions\r\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\r\n\t\t\t\t\tif (value === old && key != inside) {\r\n\t\t\t\t\t\tthis[key] = ret;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t},\r\n\r\n\t\t\t// Traverse a language definition with Depth First Search\r\n\t\t\tDFS: function DFS(o, callback, type, visited) {\r\n\t\t\t\tvisited = visited || {};\r\n\r\n\t\t\t\tvar objId = _.util.objId;\r\n\r\n\t\t\t\tfor (var i in o) {\r\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\r\n\r\n\t\t\t\t\t\tvar property = o[i];\r\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\r\n\r\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\r\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\r\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\r\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tplugins: {},\r\n\r\n\t\t/**\r\n\t\t * This is the most high-level function in Prism’s API.\r\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\r\n\t\t * each one of them.\r\n\t\t *\r\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\r\n\t\t *\r\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\r\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\thighlightAll: function (async, callback) {\r\n\t\t\t_.highlightAllUnder(document, async, callback);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\r\n\t\t * {@link Prism.highlightElement} on each one of them.\r\n\t\t *\r\n\t\t * The following hooks will be run:\r\n\t\t * 1. `before-highlightall`\r\n\t\t * 2. `before-all-elements-highlight`\r\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\r\n\t\t *\r\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\r\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\r\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\thighlightAllUnder: function (container, async, callback) {\r\n\t\t\tvar env = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tcontainer: container,\r\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\r\n\t\t\t};\r\n\r\n\t\t\t_.hooks.run('before-highlightall', env);\r\n\r\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\r\n\r\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\r\n\r\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\r\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Highlights the code inside a single element.\r\n\t\t *\r\n\t\t * The following hooks will be run:\r\n\t\t * 1. `before-sanity-check`\r\n\t\t * 2. `before-highlight`\r\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\r\n\t\t * 4. `before-insert`\r\n\t\t * 5. `after-highlight`\r\n\t\t * 6. `complete`\r\n\t\t *\r\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\r\n\t\t * the element's language.\r\n\t\t *\r\n\t\t * @param {Element} element The element containing the code.\r\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\r\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\r\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\r\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\r\n\t\t *\r\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\r\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\r\n\t\t * [Download page](https://prismjs.com/download.html).\r\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\r\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\thighlightElement: function (element, async, callback) {\r\n\t\t\t// Find language\r\n\t\t\tvar language = _.util.getLanguage(element);\r\n\t\t\tvar grammar = _.languages[language];\r\n\r\n\t\t\t// Set language on the element, if not present\r\n\t\t\t_.util.setLanguage(element, language);\r\n\r\n\t\t\t// Set language on the parent, for styling\r\n\t\t\tvar parent = element.parentElement;\r\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\r\n\t\t\t\t_.util.setLanguage(parent, language);\r\n\t\t\t}\r\n\r\n\t\t\tvar code = element.textContent;\r\n\r\n\t\t\tvar env = {\r\n\t\t\t\telement: element,\r\n\t\t\t\tlanguage: language,\r\n\t\t\t\tgrammar: grammar,\r\n\t\t\t\tcode: code\r\n\t\t\t};\r\n\r\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\r\n\t\t\t\tenv.highlightedCode = highlightedCode;\r\n\r\n\t\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t\t_.hooks.run('complete', env);\r\n\t\t\t\tcallback && callback.call(env.element);\r\n\t\t\t}\r\n\r\n\t\t\t_.hooks.run('before-sanity-check', env);\r\n\r\n\t\t\t// plugins may change/add the parent/element\r\n\t\t\tparent = env.element.parentElement;\r\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\r\n\t\t\t\tparent.setAttribute('tabindex', '0');\r\n\t\t\t}\r\n\r\n\t\t\tif (!env.code) {\r\n\t\t\t\t_.hooks.run('complete', env);\r\n\t\t\t\tcallback && callback.call(env.element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t_.hooks.run('before-highlight', env);\r\n\r\n\t\t\tif (!env.grammar) {\r\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (async && _self.Worker) {\r\n\t\t\t\tvar worker = new Worker(_.filename);\r\n\r\n\t\t\t\tworker.onmessage = function (evt) {\r\n\t\t\t\t\tinsertHighlightedCode(evt.data);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tworker.postMessage(JSON.stringify({\r\n\t\t\t\t\tlanguage: env.language,\r\n\t\t\t\t\tcode: env.code,\r\n\t\t\t\t\timmediateClose: true\r\n\t\t\t\t}));\r\n\t\t\t} else {\r\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\r\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\r\n\t\t *\r\n\t\t * The following hooks will be run:\r\n\t\t * 1. `before-tokenize`\r\n\t\t * 2. `after-tokenize`\r\n\t\t * 3. `wrap`: On each {@link Token}.\r\n\t\t *\r\n\t\t * @param {string} text A string with the code to be highlighted.\r\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\r\n\t\t *\r\n\t\t * Usually a language definition like `Prism.languages.markup`.\r\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\r\n\t\t * @returns {string} The highlighted HTML.\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t * @example\r\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\r\n\t\t */\r\n\t\thighlight: function (text, grammar, language) {\r\n\t\t\tvar env = {\r\n\t\t\t\tcode: text,\r\n\t\t\t\tgrammar: grammar,\r\n\t\t\t\tlanguage: language\r\n\t\t\t};\r\n\t\t\t_.hooks.run('before-tokenize', env);\r\n\t\t\tif (!env.grammar) {\r\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\r\n\t\t\t}\r\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\r\n\t\t\t_.hooks.run('after-tokenize', env);\r\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\r\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\r\n\t\t *\r\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\r\n\t\t *\r\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\r\n\t\t *\r\n\t\t * @param {string} text A string with the code to be highlighted.\r\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\r\n\t\t *\r\n\t\t * Usually a language definition like `Prism.languages.markup`.\r\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t * @example\r\n\t\t * let code = `var foo = 0;`;\r\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\r\n\t\t * tokens.forEach(token => {\r\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\r\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\r\n\t\t *     }\r\n\t\t * });\r\n\t\t */\r\n\t\ttokenize: function (text, grammar) {\r\n\t\t\tvar rest = grammar.rest;\r\n\t\t\tif (rest) {\r\n\t\t\t\tfor (var token in rest) {\r\n\t\t\t\t\tgrammar[token] = rest[token];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete grammar.rest;\r\n\t\t\t}\r\n\r\n\t\t\tvar tokenList = new LinkedList();\r\n\t\t\taddAfter(tokenList, tokenList.head, text);\r\n\r\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\r\n\r\n\t\t\treturn toArray(tokenList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @namespace\r\n\t\t * @memberof Prism\r\n\t\t * @public\r\n\t\t */\r\n\t\thooks: {\r\n\t\t\tall: {},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\r\n\t\t\t *\r\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\r\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\r\n\t\t\t *\r\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\r\n\t\t\t *\r\n\t\t\t * @param {string} name The name of the hook.\r\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tadd: function (name, callback) {\r\n\t\t\t\tvar hooks = _.hooks.all;\r\n\r\n\t\t\t\thooks[name] = hooks[name] || [];\r\n\r\n\t\t\t\thooks[name].push(callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\r\n\t\t\t *\r\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\r\n\t\t\t *\r\n\t\t\t * @param {string} name The name of the hook.\r\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\trun: function (name, env) {\r\n\t\t\t\tvar callbacks = _.hooks.all[name];\r\n\r\n\t\t\t\tif (!callbacks || !callbacks.length) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\r\n\t\t\t\t\tcallback(env);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tToken: Token\r\n\t};\r\n\t_self.Prism = _;\r\n\r\n\r\n\t// Typescript note:\r\n\t// The following can be used to import the Token type in JSDoc:\r\n\t//\r\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\r\n\r\n\t/**\r\n\t * Creates a new token.\r\n\t *\r\n\t * @param {string} type See {@link Token#type type}\r\n\t * @param {string | TokenStream} content See {@link Token#content content}\r\n\t * @param {string|string[]} [alias] The alias(es) of the token.\r\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\r\n\t * @class\r\n\t * @global\r\n\t * @public\r\n\t */\r\n\tfunction Token(type, content, alias, matchedStr) {\r\n\t\t/**\r\n\t\t * The type of the token.\r\n\t\t *\r\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @see GrammarToken\r\n\t\t * @public\r\n\t\t */\r\n\t\tthis.type = type;\r\n\t\t/**\r\n\t\t * The strings or tokens contained by this token.\r\n\t\t *\r\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\r\n\t\t *\r\n\t\t * @type {string | TokenStream}\r\n\t\t * @public\r\n\t\t */\r\n\t\tthis.content = content;\r\n\t\t/**\r\n\t\t * The alias(es) of the token.\r\n\t\t *\r\n\t\t * @type {string|string[]}\r\n\t\t * @see GrammarToken\r\n\t\t * @public\r\n\t\t */\r\n\t\tthis.alias = alias;\r\n\t\t// Copy of the full string this token was created from\r\n\t\tthis.length = (matchedStr || '').length | 0;\r\n\t}\r\n\r\n\t/**\r\n\t * A token stream is an array of strings and {@link Token Token} objects.\r\n\t *\r\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\r\n\t * them.\r\n\t *\r\n\t * 1. No adjacent strings.\r\n\t * 2. No empty strings.\r\n\t *\r\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\r\n\t *\r\n\t * @typedef {Array<string | Token>} TokenStream\r\n\t * @global\r\n\t * @public\r\n\t */\r\n\r\n\t/**\r\n\t * Converts the given token or token stream to an HTML representation.\r\n\t *\r\n\t * The following hooks will be run:\r\n\t * 1. `wrap`: On each {@link Token}.\r\n\t *\r\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\r\n\t * @param {string} language The name of current language.\r\n\t * @returns {string} The HTML representation of the token or token stream.\r\n\t * @memberof Token\r\n\t * @static\r\n\t */\r\n\tToken.stringify = function stringify(o, language) {\r\n\t\tif (typeof o == 'string') {\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tif (Array.isArray(o)) {\r\n\t\t\tvar s = '';\r\n\t\t\to.forEach(function (e) {\r\n\t\t\t\ts += stringify(e, language);\r\n\t\t\t});\r\n\t\t\treturn s;\r\n\t\t}\r\n\r\n\t\tvar env = {\r\n\t\t\ttype: o.type,\r\n\t\t\tcontent: stringify(o.content, language),\r\n\t\t\ttag: 'span',\r\n\t\t\tclasses: ['token', o.type],\r\n\t\t\tattributes: {},\r\n\t\t\tlanguage: language\r\n\t\t};\r\n\r\n\t\tvar aliases = o.alias;\r\n\t\tif (aliases) {\r\n\t\t\tif (Array.isArray(aliases)) {\r\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\r\n\t\t\t} else {\r\n\t\t\t\tenv.classes.push(aliases);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_.hooks.run('wrap', env);\r\n\r\n\t\tvar attributes = '';\r\n\t\tfor (var name in env.attributes) {\r\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\r\n\t\t}\r\n\r\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n\t};\r\n\r\n\t/**\r\n\t * @param {RegExp} pattern\r\n\t * @param {number} pos\r\n\t * @param {string} text\r\n\t * @param {boolean} lookbehind\r\n\t * @returns {RegExpExecArray | null}\r\n\t */\r\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\r\n\t\tpattern.lastIndex = pos;\r\n\t\tvar match = pattern.exec(text);\r\n\t\tif (match && lookbehind && match[1]) {\r\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\r\n\t\t\tvar lookbehindLength = match[1].length;\r\n\t\t\tmatch.index += lookbehindLength;\r\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\r\n\t\t}\r\n\t\treturn match;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} text\r\n\t * @param {LinkedList<string | Token>} tokenList\r\n\t * @param {any} grammar\r\n\t * @param {LinkedListNode<string | Token>} startNode\r\n\t * @param {number} startPos\r\n\t * @param {RematchOptions} [rematch]\r\n\t * @returns {void}\r\n\t * @private\r\n\t *\r\n\t * @typedef RematchOptions\r\n\t * @property {string} cause\r\n\t * @property {number} reach\r\n\t */\r\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\r\n\t\tfor (var token in grammar) {\r\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvar patterns = grammar[token];\r\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\r\n\r\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\r\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar patternObj = patterns[j];\r\n\t\t\t\tvar inside = patternObj.inside;\r\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\r\n\t\t\t\tvar greedy = !!patternObj.greedy;\r\n\t\t\t\tvar alias = patternObj.alias;\r\n\r\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\r\n\t\t\t\t\t// Without the global flag, lastIndex won't work\r\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\r\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/** @type {RegExp} */\r\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\r\n\r\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\r\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\r\n\t\t\t\t\tcurrentNode !== tokenList.tail;\r\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar str = currentNode.value;\r\n\r\n\t\t\t\t\tif (tokenList.length > text.length) {\r\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (str instanceof Token) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\r\n\t\t\t\t\tvar match;\r\n\r\n\t\t\t\t\tif (greedy) {\r\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\r\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar from = match.index;\r\n\t\t\t\t\t\tvar to = match.index + match[0].length;\r\n\t\t\t\t\t\tvar p = pos;\r\n\r\n\t\t\t\t\t\t// find the node that contains the match\r\n\t\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\t\twhile (from >= p) {\r\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\r\n\t\t\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// adjust pos (and p)\r\n\t\t\t\t\t\tp -= currentNode.value.length;\r\n\t\t\t\t\t\tpos = p;\r\n\r\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\r\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// find the last node which is affected by this match\r\n\t\t\t\t\t\tfor (\r\n\t\t\t\t\t\t\tvar k = currentNode;\r\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\r\n\t\t\t\t\t\t\tk = k.next\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tremoveCount++;\r\n\t\t\t\t\t\t\tp += k.value.length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tremoveCount--;\r\n\r\n\t\t\t\t\t\t// replace with the new match\r\n\t\t\t\t\t\tstr = text.slice(pos, p);\r\n\t\t\t\t\t\tmatch.index -= pos;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\r\n\t\t\t\t\tvar from = match.index;\r\n\t\t\t\t\tvar matchStr = match[0];\r\n\t\t\t\t\tvar before = str.slice(0, from);\r\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\r\n\r\n\t\t\t\t\tvar reach = pos + str.length;\r\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\r\n\t\t\t\t\t\trematch.reach = reach;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar removeFrom = currentNode.prev;\r\n\r\n\t\t\t\t\tif (before) {\r\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\r\n\t\t\t\t\t\tpos += before.length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\r\n\r\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\r\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\r\n\r\n\t\t\t\t\tif (after) {\r\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (removeCount > 1) {\r\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\r\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\r\n\r\n\t\t\t\t\t\t/** @type {RematchOptions} */\r\n\t\t\t\t\t\tvar nestedRematch = {\r\n\t\t\t\t\t\t\tcause: token + ',' + j,\r\n\t\t\t\t\t\t\treach: reach\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\r\n\r\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\r\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\r\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @typedef LinkedListNode\r\n\t * @property {T} value\r\n\t * @property {LinkedListNode<T> | null} prev The previous node.\r\n\t * @property {LinkedListNode<T> | null} next The next node.\r\n\t * @template T\r\n\t * @private\r\n\t */\r\n\r\n\t/**\r\n\t * @template T\r\n\t * @private\r\n\t */\r\n\tfunction LinkedList() {\r\n\t\t/** @type {LinkedListNode<T>} */\r\n\t\tvar head = { value: null, prev: null, next: null };\r\n\t\t/** @type {LinkedListNode<T>} */\r\n\t\tvar tail = { value: null, prev: head, next: null };\r\n\t\thead.next = tail;\r\n\r\n\t\t/** @type {LinkedListNode<T>} */\r\n\t\tthis.head = head;\r\n\t\t/** @type {LinkedListNode<T>} */\r\n\t\tthis.tail = tail;\r\n\t\tthis.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new node with the given value to the list.\r\n\t *\r\n\t * @param {LinkedList<T>} list\r\n\t * @param {LinkedListNode<T>} node\r\n\t * @param {T} value\r\n\t * @returns {LinkedListNode<T>} The added node.\r\n\t * @template T\r\n\t */\r\n\tfunction addAfter(list, node, value) {\r\n\t\t// assumes that node != list.tail && values.length >= 0\r\n\t\tvar next = node.next;\r\n\r\n\t\tvar newNode = { value: value, prev: node, next: next };\r\n\t\tnode.next = newNode;\r\n\t\tnext.prev = newNode;\r\n\t\tlist.length++;\r\n\r\n\t\treturn newNode;\r\n\t}\r\n\t/**\r\n\t * Removes `count` nodes after the given node. The given node will not be removed.\r\n\t *\r\n\t * @param {LinkedList<T>} list\r\n\t * @param {LinkedListNode<T>} node\r\n\t * @param {number} count\r\n\t * @template T\r\n\t */\r\n\tfunction removeRange(list, node, count) {\r\n\t\tvar next = node.next;\r\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\r\n\t\t\tnext = next.next;\r\n\t\t}\r\n\t\tnode.next = next;\r\n\t\tnext.prev = node;\r\n\t\tlist.length -= i;\r\n\t}\r\n\t/**\r\n\t * @param {LinkedList<T>} list\r\n\t * @returns {T[]}\r\n\t * @template T\r\n\t */\r\n\tfunction toArray(list) {\r\n\t\tvar array = [];\r\n\t\tvar node = list.head.next;\r\n\t\twhile (node !== list.tail) {\r\n\t\t\tarray.push(node.value);\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\r\n\r\n\tif (!_self.document) {\r\n\t\tif (!_self.addEventListener) {\r\n\t\t\t// in Node.js\r\n\t\t\treturn _;\r\n\t\t}\r\n\r\n\t\tif (!_.disableWorkerMessageHandler) {\r\n\t\t\t// In worker\r\n\t\t\t_self.addEventListener('message', function (evt) {\r\n\t\t\t\tvar message = JSON.parse(evt.data);\r\n\t\t\t\tvar lang = message.language;\r\n\t\t\t\tvar code = message.code;\r\n\t\t\t\tvar immediateClose = message.immediateClose;\r\n\r\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\r\n\t\t\t\tif (immediateClose) {\r\n\t\t\t\t\t_self.close();\r\n\t\t\t\t}\r\n\t\t\t}, false);\r\n\t\t}\r\n\r\n\t\treturn _;\r\n\t}\r\n\r\n\t// Get current script and highlight\r\n\tvar script = _.util.currentScript();\r\n\r\n\tif (script) {\r\n\t\t_.filename = script.src;\r\n\r\n\t\tif (script.hasAttribute('data-manual')) {\r\n\t\t\t_.manual = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction highlightAutomaticallyCallback() {\r\n\t\tif (!_.manual) {\r\n\t\t\t_.highlightAll();\r\n\t\t}\r\n\t}\r\n\r\n\tif (!_.manual) {\r\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\r\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\r\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\r\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\r\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\r\n\t\t// See https://github.com/PrismJS/prism/issues/2102\r\n\t\tvar readyState = document.readyState;\r\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\r\n\t\t} else {\r\n\t\t\tif (window.requestAnimationFrame) {\r\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\r\n\t\t\t} else {\r\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn _;\r\n\r\n}(_self));\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\tmodule.exports = Prism;\r\n}\r\n\r\n// hack for components to work correctly in node.js\r\nif (typeof global !== 'undefined') {\r\n\tglobal.Prism = Prism;\r\n}\r\n\r\n// some additional documentation/types\r\n\r\n/**\r\n * The expansion of a simple `RegExp` literal to support additional properties.\r\n *\r\n * @typedef GrammarToken\r\n * @property {RegExp} pattern The regular expression of the token.\r\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\r\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\r\n * @property {boolean} [greedy=false] Whether the token is greedy.\r\n * @property {string|string[]} [alias] An optional alias or list of aliases.\r\n * @property {Grammar} [inside] The nested grammar of this token.\r\n *\r\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\r\n *\r\n * This can be used to make nested and even recursive language definitions.\r\n *\r\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\r\n * each another.\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * @typedef Grammar\r\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\r\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * A function which will invoked after an element was successfully highlighted.\r\n *\r\n * @callback HighlightCallback\r\n * @param {Element} element The element successfully highlighted.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n */\r\n\r\n/**\r\n * @callback HookCallback\r\n * @param {Object<string, any>} env The environment variables of the hook.\r\n * @returns {void}\r\n * @global\r\n * @public\r\n */\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-markup.js\r\n********************************************** */\r\n\r\nPrism.languages.markup = {\r\n\t'comment': {\r\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'prolog': {\r\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'doctype': {\r\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\r\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'internal-subset': {\r\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tgreedy: true,\r\n\t\t\t\tinside: null // see below\r\n\t\t\t},\r\n\t\t\t'string': {\r\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\r\n\t\t\t\tgreedy: true\r\n\t\t\t},\r\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\r\n\t\t\t'doctype-tag': /^DOCTYPE/i,\r\n\t\t\t'name': /[^\\s<>'\"]+/\r\n\t\t}\r\n\t},\r\n\t'cdata': {\r\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n\t\tgreedy: true\r\n\t},\r\n\t'tag': {\r\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/,\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'special-attr': [],\r\n\t\t\t'attr-value': {\r\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /^=/,\r\n\t\t\t\t\t\t\talias: 'attr-equals'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\/?>/,\r\n\t\t\t'attr-name': {\r\n\t\t\t\tpattern: /[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\t'entity': [\r\n\t\t{\r\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\r\n\t\t\talias: 'named-entity'\r\n\t\t},\r\n\t\t/&#x?[\\da-f]{1,8};/i\r\n\t]\r\n};\r\n\r\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n\tPrism.languages.markup['entity'];\r\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\r\n\r\n// Plugin to make entity title show the real entity, idea by Roman Komarov\r\nPrism.hooks.add('wrap', function (env) {\r\n\r\n\tif (env.type === 'entity') {\r\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t}\r\n});\r\n\r\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\r\n\t/**\r\n\t * Adds an inlined language to markup.\r\n\t *\r\n\t * An example of an inlined language is CSS with `<style>` tags.\r\n\t *\r\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n\t * case insensitive.\r\n\t * @param {string} lang The language key.\r\n\t * @example\r\n\t * addInlined('style', 'css');\r\n\t */\r\n\tvalue: function addInlined(tagName, lang) {\r\n\t\tvar includedCdataInside = {};\r\n\t\tincludedCdataInside['language-' + lang] = {\r\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\r\n\r\n\t\tvar inside = {\r\n\t\t\t'included-cdata': {\r\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n\t\t\t\tinside: includedCdataInside\r\n\t\t\t}\r\n\t\t};\r\n\t\tinside['language-' + lang] = {\r\n\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\r\n\t\tvar def = {};\r\n\t\tdef[tagName] = {\r\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: inside\r\n\t\t};\r\n\r\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\r\n\t}\r\n});\r\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\r\n\t/**\r\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\r\n\t *\r\n\t * An example of an inlined language is CSS with `style` attributes.\r\n\t *\r\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\r\n\t * case insensitive.\r\n\t * @param {string} lang The language key.\r\n\t * @example\r\n\t * addAttribute('style', 'css');\r\n\t */\r\n\tvalue: function (attrName, lang) {\r\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\r\n\t\t\tpattern: RegExp(\r\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\r\n\t\t\t\t'i'\r\n\t\t\t),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'attr-name': /^[^\\s=]+/,\r\n\t\t\t\t'attr-value': {\r\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'value': {\r\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\r\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern: /^=/,\r\n\t\t\t\t\t\t\t\talias: 'attr-equals'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t/\"|'/\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\nPrism.languages.html = Prism.languages.markup;\r\nPrism.languages.mathml = Prism.languages.markup;\r\nPrism.languages.svg = Prism.languages.markup;\r\n\r\nPrism.languages.xml = Prism.languages.extend('markup', {});\r\nPrism.languages.ssml = Prism.languages.xml;\r\nPrism.languages.atom = Prism.languages.xml;\r\nPrism.languages.rss = Prism.languages.xml;\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-css.js\r\n********************************************** */\r\n\r\n(function (Prism) {\r\n\r\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\r\n\r\n\tPrism.languages.css = {\r\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t'atrule': {\r\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\r\n\t\t\tinside: {\r\n\t\t\t\t'rule': /^@[\\w-]+/,\r\n\t\t\t\t'selector-function-argument': {\r\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'selector'\r\n\t\t\t\t},\r\n\t\t\t\t'keyword': {\r\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\r\n\t\t\t\t\tlookbehind: true\r\n\t\t\t\t}\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t'url': {\r\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\r\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'function': /^url/i,\r\n\t\t\t\t'punctuation': /^\\(|\\)$/,\r\n\t\t\t\t'string': {\r\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\r\n\t\t\t\t\talias: 'url'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t'selector': {\r\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'string': {\r\n\t\t\tpattern: string,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'property': {\r\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'important': /!important\\b/i,\r\n\t\t'function': {\r\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'punctuation': /[(){};:,]/\r\n\t};\r\n\r\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\r\n\r\n\tvar markup = Prism.languages.markup;\r\n\tif (markup) {\r\n\t\tmarkup.tag.addInlined('style', 'css');\r\n\t\tmarkup.tag.addAttribute('style', 'css');\r\n\t}\r\n\r\n}(Prism));\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-clike.js\r\n********************************************** */\r\n\r\nPrism.languages.clike = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[.\\\\]/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\r\n\t'boolean': /\\b(?:false|true)\\b/,\r\n\t'function': /\\b\\w+(?=\\()/,\r\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-javascript.js\r\n********************************************** */\r\n\r\nPrism.languages.javascript = Prism.languages.extend('clike', {\r\n\t'class-name': [\r\n\t\tPrism.languages.clike['class-name'],\r\n\t\t{\r\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t],\r\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\r\n\t'number': {\r\n\t\tpattern: RegExp(\r\n\t\t\t/(^|[^\\w$])/.source +\r\n\t\t\t'(?:' +\r\n\t\t\t(\r\n\t\t\t\t// constant\r\n\t\t\t\t/NaN|Infinity/.source +\r\n\t\t\t\t'|' +\r\n\t\t\t\t// binary integer\r\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\r\n\t\t\t\t'|' +\r\n\t\t\t\t// octal integer\r\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\r\n\t\t\t\t'|' +\r\n\t\t\t\t// hexadecimal integer\r\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\r\n\t\t\t\t'|' +\r\n\t\t\t\t// decimal bigint\r\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\r\n\t\t\t\t'|' +\r\n\t\t\t\t// decimal number (integer or float) but no bigint\r\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\r\n\t\t\t) +\r\n\t\t\t')' +\r\n\t\t\t/(?![\\w$])/.source\r\n\t\t),\r\n\t\tlookbehind: true\r\n\t},\r\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\r\n});\r\n\r\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\r\n\r\nPrism.languages.insertBefore('javascript', 'keyword', {\r\n\t'regex': {\r\n\t\tpattern: RegExp(\r\n\t\t\t// lookbehind\r\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\r\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\r\n\t\t\t// Regex pattern:\r\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\r\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\r\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\r\n\t\t\t/\\//.source +\r\n\t\t\t'(?:' +\r\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\r\n\t\t\t'|' +\r\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\r\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\r\n\t\t\t')' +\r\n\t\t\t// lookahead\r\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\r\n\t\t),\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'regex-source': {\r\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\talias: 'language-regex',\r\n\t\t\t\tinside: Prism.languages.regex\r\n\t\t\t},\r\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\r\n\t\t\t'regex-flags': /^[a-z]+$/,\r\n\t\t}\r\n\t},\r\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\r\n\t'function-variable': {\r\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'parameter': [\r\n\t\t{\r\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t}\r\n\t],\r\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'string', {\r\n\t'hashbang': {\r\n\t\tpattern: /^#!.*/,\r\n\t\tgreedy: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'template-string': {\r\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'template-punctuation': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'string'\r\n\t\t\t},\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t},\r\n\t'string-property': {\r\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true,\r\n\t\talias: 'property'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'operator', {\r\n\t'literal-property': {\r\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'property'\r\n\t},\r\n});\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\r\n\r\n\t// add attribute support for all DOM events.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\r\n\tPrism.languages.markup.tag.addAttribute(\r\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\r\n\t\t'javascript'\r\n\t);\r\n}\r\n\r\nPrism.languages.js = Prism.languages.javascript;\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-file-highlight.js\r\n********************************************** */\r\n\r\n(function () {\r\n\r\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\r\n\tif (!Element.prototype.matches) {\r\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n\t}\r\n\r\n\tvar LOADING_MESSAGE = 'Loading…';\r\n\tvar FAILURE_MESSAGE = function (status, message) {\r\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\r\n\t};\r\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\r\n\r\n\tvar EXTENSIONS = {\r\n\t\t'js': 'javascript',\r\n\t\t'py': 'python',\r\n\t\t'rb': 'ruby',\r\n\t\t'ps1': 'powershell',\r\n\t\t'psm1': 'powershell',\r\n\t\t'sh': 'bash',\r\n\t\t'bat': 'batch',\r\n\t\t'h': 'c',\r\n\t\t'tex': 'latex'\r\n\t};\r\n\r\n\tvar STATUS_ATTR = 'data-src-status';\r\n\tvar STATUS_LOADING = 'loading';\r\n\tvar STATUS_LOADED = 'loaded';\r\n\tvar STATUS_FAILED = 'failed';\r\n\r\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\r\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\r\n\r\n\t/**\r\n\t * Loads the given file.\r\n\t *\r\n\t * @param {string} src The URL or path of the source file to load.\r\n\t * @param {(result: string) => void} success\r\n\t * @param {(reason: string) => void} error\r\n\t */\r\n\tfunction loadFile(src, success, error) {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', src, true);\r\n\t\txhr.onreadystatechange = function () {\r\n\t\t\tif (xhr.readyState == 4) {\r\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\r\n\t\t\t\t\tsuccess(xhr.responseText);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (xhr.status >= 400) {\r\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.send(null);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the given range.\r\n\t *\r\n\t * This returns a range with inclusive ends.\r\n\t *\r\n\t * @param {string | null | undefined} range\r\n\t * @returns {[number, number | undefined] | undefined}\r\n\t */\r\n\tfunction parseRange(range) {\r\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\r\n\t\tif (m) {\r\n\t\t\tvar start = Number(m[1]);\r\n\t\t\tvar comma = m[2];\r\n\t\t\tvar end = m[3];\r\n\r\n\t\t\tif (!comma) {\r\n\t\t\t\treturn [start, start];\r\n\t\t\t}\r\n\t\t\tif (!end) {\r\n\t\t\t\treturn [start, undefined];\r\n\t\t\t}\r\n\t\t\treturn [start, Number(end)];\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tPrism.hooks.add('before-highlightall', function (env) {\r\n\t\tenv.selector += ', ' + SELECTOR;\r\n\t});\r\n\r\n\tPrism.hooks.add('before-sanity-check', function (env) {\r\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\r\n\t\tif (pre.matches(SELECTOR)) {\r\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\r\n\r\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\r\n\r\n\t\t\t// add code element with loading message\r\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\r\n\t\t\tcode.textContent = LOADING_MESSAGE;\r\n\r\n\t\t\tvar src = pre.getAttribute('data-src');\r\n\r\n\t\t\tvar language = env.language;\r\n\t\t\tif (language === 'none') {\r\n\t\t\t\t// the language might be 'none' because there is no language set;\r\n\t\t\t\t// in this case, we want to use the extension as the language\r\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\r\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\r\n\t\t\t}\r\n\r\n\t\t\t// set language classes\r\n\t\t\tPrism.util.setLanguage(code, language);\r\n\t\t\tPrism.util.setLanguage(pre, language);\r\n\r\n\t\t\t// preload the language\r\n\t\t\tvar autoloader = Prism.plugins.autoloader;\r\n\t\t\tif (autoloader) {\r\n\t\t\t\tautoloader.loadLanguages(language);\r\n\t\t\t}\r\n\r\n\t\t\t// load file\r\n\t\t\tloadFile(\r\n\t\t\t\tsrc,\r\n\t\t\t\tfunction (text) {\r\n\t\t\t\t\t// mark as loaded\r\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\r\n\r\n\t\t\t\t\t// handle data-range\r\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\r\n\t\t\t\t\tif (range) {\r\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\r\n\r\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\r\n\t\t\t\t\t\tvar start = range[0];\r\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\r\n\r\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\r\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\r\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\r\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\r\n\r\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\r\n\r\n\t\t\t\t\t\t// add data-start for line numbers\r\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\r\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// highlight code\r\n\t\t\t\t\tcode.textContent = text;\r\n\t\t\t\t\tPrism.highlightElement(code);\r\n\t\t\t\t},\r\n\t\t\t\tfunction (error) {\r\n\t\t\t\t\t// mark as failed\r\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\r\n\r\n\t\t\t\t\tcode.textContent = error;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.plugins.fileHighlight = {\r\n\t\t/**\r\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\r\n\t\t *\r\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\r\n\t\t *\r\n\t\t * @param {ParentNode} [container=document]\r\n\t\t */\r\n\t\thighlight: function highlight(container) {\r\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\r\n\r\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\r\n\t\t\t\tPrism.highlightElement(element);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar logged = false;\r\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\r\n\tPrism.fileHighlight = function () {\r\n\t\tif (!logged) {\r\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\r\n\t\t\tlogged = true;\r\n\t\t}\r\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\r\n\t};\r\n\r\n}());\r\n", "module.exports = {\r\n\ttrueFunc: function trueFunc(){\r\n\t\treturn true;\r\n\t},\r\n\tfalseFunc: function falseFunc(){\r\n\t\treturn false;\r\n\t}\r\n};", "import 'prismjs';\r\nimport { visit } from 'unist-util-visit';\r\nimport { internalPlugins } from './constant.js';\r\nimport { createParseCodeVisitor } from './create-parse-code-vistor.js';\r\nimport { createPreElementSelector } from './create-pre-element-selector.js';\r\nconst rehypePrism = (options) => {\r\n    if (options && options.plugins) {\r\n        const plugins = options.plugins\r\n            .filter((plugin) => !internalPlugins.includes(plugin));\r\n        for (const plugin of plugins) {\r\n            import(`prismjs/plugins/${plugin}/prism-${plugin}.js`);\r\n        }\r\n    }\r\n    return (tree) => visit(tree, createPreElementSelector(), createParseCodeVisitor(options));\r\n};\r\nexport default rehypePrism;\r\n", "export const internalPlugins = ['line-numbers', 'toolbar', 'copy-to-clipboard'];\r\n", "import Prism from 'prismjs';\r\nimport rehypeParse from 'rehype-parse';\r\nimport { unified } from 'unified';\r\nimport { select } from 'unist-util-select';\r\nimport { appendClassName } from './utils/append-class-name.js';\r\nimport { getLang } from './utils/get-lang.js';\r\nimport { createPluginApplier } from './create-plugin-applier.js';\r\nimport { isElementNode } from './utils/is-element-node.js';\r\nimport { isTextNode } from './utils/is-text-node.js';\r\nimport { selectCodeElement } from './utils/select-code-element.js';\r\nconst parser = unified()\r\n    .use(rehypeParse, { fragment: true });\r\nexport function createParseCodeVisitor(options) {\r\n    const applyPlugin = createPluginApplier(options?.plugins || []);\r\n    return (node, index, parentNode) => {\r\n        if (!isElementNode(node) || node.tagName !== 'pre' || index === null || parentNode === null)\r\n            return;\r\n        const preElement = node;\r\n        const codeElement = selectCodeElement(preElement);\r\n        if (!codeElement)\r\n            return;\r\n        const lang = getLang(codeElement);\r\n        if (!lang || !Prism.languages[lang])\r\n            return;\r\n        const textNode = select('text', codeElement);\r\n        if (!isTextNode(textNode))\r\n            return;\r\n        const raw = textNode.value;\r\n        const html = Prism.highlight(raw, Prism.languages[lang], lang);\r\n        const tree = parser.parse(html);\r\n        appendClassName(preElement, `language-${lang}`);\r\n        codeElement.children = [...tree.children];\r\n        applyPlugin({\r\n            parentNode,\r\n            index,\r\n            preElement,\r\n            raw,\r\n            lang,\r\n        });\r\n    };\r\n}\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Properties} Properties\r\n */\r\n\r\n/**\r\n * @template {string} SimpleSelector\r\n *   Selector type.\r\n * @template {string} DefaultTagName\r\n *   Default tag name.\r\n * @typedef {(\r\n *   SimpleSelector extends ''\r\n *     ? DefaultTagName\r\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\r\n *     ? ExtractTagName<TagName, DefaultTagName>\r\n *     : SimpleSelector extends string\r\n *     ? SimpleSelector\r\n *     : DefaultTagName\r\n * )} ExtractTagName\r\n *   Extract tag name from a simple selector.\r\n */\r\n\r\nconst search = /[#.]/g\r\n\r\n/**\r\n * Create a hast element from a simple CSS selector.\r\n *\r\n * @template {string} Selector\r\n *   Type of selector.\r\n * @template {string} [DefaultTagName='div']\r\n *   Type of default tag name (default: `'div'`).\r\n * @param {Selector | null | undefined} [selector]\r\n *   Simple CSS selector (optional).\r\n *\r\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\r\n *   Multiple classes are allowed.\r\n *   Uses the last ID if multiple IDs are found.\r\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\r\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\r\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\r\n *   Built element.\r\n */\r\nexport function parseSelector(selector, defaultTagName) {\r\n  const value = selector || ''\r\n  /** @type {Properties} */\r\n  const props = {}\r\n  let start = 0\r\n  /** @type {string | undefined} */\r\n  let previous\r\n  /** @type {string | undefined} */\r\n  let tagName\r\n\r\n  while (start < value.length) {\r\n    search.lastIndex = start\r\n    const match = search.exec(value)\r\n    const subvalue = value.slice(start, match ? match.index : value.length)\r\n\r\n    if (subvalue) {\r\n      if (!previous) {\r\n        tagName = subvalue\r\n      } else if (previous === '#') {\r\n        props.id = subvalue\r\n      } else if (Array.isArray(props.className)) {\r\n        props.className.push(subvalue)\r\n      } else {\r\n        props.className = [subvalue]\r\n      }\r\n\r\n      start += subvalue.length\r\n    }\r\n\r\n    if (match) {\r\n      previous = match[0]\r\n      start++\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'element',\r\n    // @ts-expect-error: tag name is parsed.\r\n    tagName: tagName || defaultTagName || 'div',\r\n    properties: props,\r\n    children: []\r\n  }\r\n}\r\n", "/**\r\n * @import {Element, Nodes, RootContent, Root} from 'hast'\r\n * @import {Info, Schema} from 'property-information'\r\n */\r\n\r\n/**\r\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\r\n *   List of children (deep).\r\n */\r\n\r\n/**\r\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\r\n *   List of children.\r\n */\r\n\r\n/**\r\n * @typedef {Array<number | string>} ArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n */\r\n\r\n/**\r\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\r\n *   Acceptable child value.\r\n */\r\n\r\n/**\r\n * @typedef {number | string | null | undefined} PrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n */\r\n\r\n/**\r\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\r\n *   Primitive property value.\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, PropertyValue | Style>} Properties\r\n *   Acceptable value for element properties.\r\n */\r\n\r\n/**\r\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\r\n *   Primitive value or list value.\r\n */\r\n\r\n/**\r\n * @typedef {Element | Root} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\r\n\r\n/**\r\n * @typedef {number | string} StyleValue\r\n *   Value for a CSS style field.\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, StyleValue>} Style\r\n *   Supported value of a `style` prop.\r\n */\r\n\r\nimport {parse as parseCommas} from 'comma-separated-tokens'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {find, normalize} from 'property-information'\r\nimport {parse as parseSpaces} from 'space-separated-tokens'\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema to use.\r\n * @param {string} defaultTagName\r\n *   Default tag name.\r\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\r\n *   Case-sensitive tag names (default: `undefined`).\r\n * @returns\r\n *   `h`.\r\n */\r\nexport function createH(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\r\n\r\n  /**\r\n   * Hyperscript compatible DSL for creating virtual hast trees.\r\n   *\r\n   * @overload\r\n   * @param {null | undefined} [selector]\r\n   * @param {...Child} children\r\n   * @returns {Root}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {Properties} properties\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @param {string | null | undefined} [selector]\r\n   *   Selector.\r\n   * @param {Child | Properties | null | undefined} [properties]\r\n   *   Properties (or first child) (default: `undefined`).\r\n   * @param {...Child} children\r\n   *   Children.\r\n   * @returns {Result}\r\n   *   Result.\r\n   */\r\n  function h(selector, properties, ...children) {\r\n    /** @type {Result} */\r\n    let node\r\n\r\n    if (selector === null || selector === undefined) {\r\n      node = {type: 'root', children: []}\r\n      // Properties are not supported for roots.\r\n      const child = /** @type {Child} */ (properties)\r\n      children.unshift(child)\r\n    } else {\r\n      node = parseSelector(selector, defaultTagName)\r\n      // Normalize the name.\r\n      const lower = node.tagName.toLowerCase()\r\n      const adjusted = adjust ? adjust.get(lower) : undefined\r\n      node.tagName = adjusted || lower\r\n\r\n      // Handle properties.\r\n      if (isChild(properties)) {\r\n        children.unshift(properties)\r\n      } else {\r\n        for (const [key, value] of Object.entries(properties)) {\r\n          addProperty(schema, node.properties, key, value)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle children.\r\n    for (const child of children) {\r\n      addChild(node.children, child)\r\n    }\r\n\r\n    if (node.type === 'element' && node.tagName === 'template') {\r\n      node.content = {type: 'root', children: node.children}\r\n      node.children = []\r\n    }\r\n\r\n    return node\r\n  }\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * Check if something is properties or a child.\r\n *\r\n * @param {Child | Properties} value\r\n *   Value to check.\r\n * @returns {value is Child}\r\n *   Whether `value` is definitely a child.\r\n */\r\nfunction isChild(value) {\r\n  // Never properties if not an object.\r\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\r\n    return true\r\n  }\r\n\r\n  // Never node without `type`; that’s the main discriminator.\r\n  if (typeof value.type !== 'string') return false\r\n\r\n  // Slower check: never property value if object or array with\r\n  // non-number/strings.\r\n  const record = /** @type {Record<string, unknown>} */ (value)\r\n  const keys = Object.keys(value)\r\n\r\n  for (const key of keys) {\r\n    const value = record[key]\r\n\r\n    if (value && typeof value === 'object') {\r\n      if (!Array.isArray(value)) return true\r\n\r\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\r\n\r\n      for (const item of list) {\r\n        if (typeof item !== 'number' && typeof item !== 'string') {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Also see empty `children` as a node.\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return true\r\n  }\r\n\r\n  // Default to properties, someone can always pass an empty object,\r\n  // put `data: {}` in a node,\r\n  // or wrap it in an array.\r\n  return false\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema.\r\n * @param {Properties} properties\r\n *   Properties object.\r\n * @param {string} key\r\n *   Property name.\r\n * @param {PropertyValue | Style} value\r\n *   Property value.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  /** @type {PropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === null || value === undefined) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = parseSpaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = parseCommas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = parseSpaces(parseCommas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = [...value]\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<number | string>} */\r\n    const finalResult = []\r\n\r\n    for (const item of result) {\r\n      // Assume no booleans in array.\r\n      finalResult.push(\r\n        /** @type {number | string} */ (\r\n          parsePrimitive(info, info.property, item)\r\n        )\r\n      )\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // Assume no booleans in `className`.\r\n    result = properties.className.concat(\r\n      /** @type {Array<number | string> | number | string} */ (result)\r\n    )\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<RootContent>} nodes\r\n *   Children.\r\n * @param {Child} value\r\n *   Child.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addChild(nodes, value) {\r\n  if (value === null || value === undefined) {\r\n    // Empty.\r\n  } else if (typeof value === 'number' || typeof value === 'string') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    for (const child of value) {\r\n      addChild(nodes, child)\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n *   Property information.\r\n * @param {string} name\r\n *   Property name.\r\n * @param {PrimitiveValue} value\r\n *   Property value.\r\n * @returns {PrimitiveValue}\r\n *   Property value.\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {Style} styles\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(styles) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n\r\n  for (const [key, value] of Object.entries(styles)) {\r\n    result.push([key, value].join(': '))\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {ReadonlyArray<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Map<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Map<string, string>} */\r\n  const result = new Map()\r\n\r\n  for (const value of values) {\r\n    result.set(value.toLowerCase(), value)\r\n  }\r\n\r\n  return result\r\n}\r\n", "/**\r\n * List of case-sensitive SVG tag names.\r\n *\r\n * @type {ReadonlyArray<string>}\r\n */\r\nexport const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "// Register the JSX namespace on `h`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\r\n\r\n// Register the JSX namespace on `s`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {createH} from './create-h.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const h = createH(html, 'div')\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\r\n", "/**\r\n * @import {VFile, Value} from 'vfile'\r\n * @import {Location} from 'vfile-location'\r\n */\r\n\r\n/**\r\n * Create an index of the given document to translate between line/column and\r\n * offset based positional info.\r\n *\r\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\r\n *\r\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\r\n *\r\n * @param {VFile | Value} file\r\n *   File to index.\r\n * @returns {Location}\r\n *   Accessors for index.\r\n */\r\nexport function location(file) {\r\n  const value = String(file)\r\n  /**\r\n   * List, where each index is a line number (0-based), and each value is the\r\n   * byte index *after* where the line ends.\r\n   *\r\n   * @type {Array<number>}\r\n   */\r\n  const indices = []\r\n\r\n  return {toOffset, toPoint}\r\n\r\n  /** @type {Location['toPoint']} */\r\n  function toPoint(offset) {\r\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\r\n      let index = 0\r\n\r\n      while (true) {\r\n        let end = indices[index]\r\n\r\n        if (end === undefined) {\r\n          const eol = next(value, indices[index - 1])\r\n          end = eol === -1 ? value.length + 1 : eol + 1\r\n          indices[index] = end\r\n        }\r\n\r\n        if (end > offset) {\r\n          return {\r\n            line: index + 1,\r\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\r\n            offset\r\n          }\r\n        }\r\n\r\n        index++\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @type {Location['toOffset']} */\r\n  function toOffset(point) {\r\n    if (\r\n      point &&\r\n      typeof point.line === 'number' &&\r\n      typeof point.column === 'number' &&\r\n      !Number.isNaN(point.line) &&\r\n      !Number.isNaN(point.column)\r\n    ) {\r\n      while (indices.length < point.line) {\r\n        const from = indices[indices.length - 1]\r\n        const eol = next(value, from)\r\n        const end = eol === -1 ? value.length + 1 : eol + 1\r\n        if (from === end) break\r\n        indices.push(end)\r\n      }\r\n\r\n      const offset =\r\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\r\n      // The given `column` could not exist on this line.\r\n      if (offset < indices[point.line - 1]) return offset\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n * @param {number} from\r\n */\r\nfunction next(value, from) {\r\n  const cr = value.indexOf('\\r', from)\r\n  const lf = value.indexOf('\\n', from)\r\n  if (lf === -1) return cr\r\n  if (cr === -1 || cr + 1 === lf) return lf\r\n  return cr < lf ? cr : lf\r\n}\r\n", "/**\r\n * Map of web namespaces.\r\n *\r\n * @type {Record<string, string>}\r\n */\r\nexport const webNamespaces = {\r\n  html: 'http://www.w3.org/1999/xhtml',\r\n  mathml: 'http://www.w3.org/1998/Math/MathML',\r\n  svg: 'http://www.w3.org/2000/svg',\r\n  xlink: 'http://www.w3.org/1999/xlink',\r\n  xml: 'http://www.w3.org/XML/1998/namespace',\r\n  xmlns: 'http://www.w3.org/2000/xmlns/'\r\n}\r\n", "/**\r\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\r\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\r\n * @import {Schema} from 'property-information'\r\n * @import {Point, Position} from 'unist'\r\n * @import {VFile} from 'vfile'\r\n * @import {Options} from 'hast-util-from-parse5'\r\n */\r\n\r\n/**\r\n * @typedef State\r\n *   Info passed around about the current state.\r\n * @property {VFile | undefined} file\r\n *   Corresponding file.\r\n * @property {boolean} location\r\n *   Whether location info was found.\r\n * @property {Schema} schema\r\n *   Current schema.\r\n * @property {boolean | undefined} verbose\r\n *   Add extra positional info.\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {h, s} from 'hastscript'\r\nimport {find, html, svg} from 'property-information'\r\nimport {location} from 'vfile-location'\r\nimport {webNamespaces} from 'web-namespaces'\r\n\r\nconst own = {}.hasOwnProperty\r\n/** @type {unknown} */\r\n// type-coverage:ignore-next-line\r\nconst proto = Object.prototype\r\n\r\n/**\r\n * Transform a `parse5` AST to hast.\r\n *\r\n * @param {DefaultTreeAdapterMap['node']} tree\r\n *   `parse5` tree to transform.\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Nodes}\r\n *   hast tree.\r\n */\r\nexport function fromParse5(tree, options) {\r\n  const settings = options || {}\r\n\r\n  return one(\r\n    {\r\n      file: settings.file || undefined,\r\n      location: false,\r\n      schema: settings.space === 'svg' ? svg : html,\r\n      verbose: settings.verbose || false\r\n    },\r\n    tree\r\n  )\r\n}\r\n\r\n/**\r\n * Transform a node.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {DefaultTreeAdapterMap['node']} node\r\n *   p5 node.\r\n * @returns {Nodes}\r\n *   hast node.\r\n */\r\nfunction one(state, node) {\r\n  /** @type {Nodes} */\r\n  let result\r\n\r\n  switch (node.nodeName) {\r\n    case '#comment': {\r\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\r\n        node\r\n      )\r\n      result = {type: 'comment', value: reference.data}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#document':\r\n    case '#document-fragment': {\r\n      const reference =\r\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\r\n          node\r\n        )\r\n      const quirksMode =\r\n        'mode' in reference\r\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\r\n          : false\r\n\r\n      result = {\r\n        type: 'root',\r\n        children: all(state, node.childNodes),\r\n        data: {quirksMode}\r\n      }\r\n\r\n      if (state.file && state.location) {\r\n        const document = String(state.file)\r\n        const loc = location(document)\r\n        const start = loc.toPoint(0)\r\n        const end = loc.toPoint(document.length)\r\n        // Always defined as we give valid input.\r\n        assert(start, 'expected `start`')\r\n        assert(end, 'expected `end`')\r\n        result.position = {start, end}\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    case '#documentType': {\r\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\r\n        node\r\n      )\r\n      result = {type: 'doctype'}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    case '#text': {\r\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\r\n      result = {type: 'text', value: reference.value}\r\n      patch(state, reference, result)\r\n      return result\r\n    }\r\n\r\n    // Element.\r\n    default: {\r\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\r\n      result = element(state, reference)\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Transform children.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\r\n *   Nodes.\r\n * @returns {Array<RootContent>}\r\n *   hast nodes.\r\n */\r\nfunction all(state, nodes) {\r\n  let index = -1\r\n  /** @type {Array<RootContent>} */\r\n  const results = []\r\n\r\n  while (++index < nodes.length) {\r\n    // Assume no roots in `nodes`.\r\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\r\n    results.push(result)\r\n  }\r\n\r\n  return results\r\n}\r\n\r\n/**\r\n * Transform an element.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {DefaultTreeAdapterMap['element']} node\r\n *   `parse5` node to transform.\r\n * @returns {Element}\r\n *   hast node.\r\n */\r\nfunction element(state, node) {\r\n  const schema = state.schema\r\n\r\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\r\n\r\n  // Props.\r\n  let index = -1\r\n  /** @type {Record<string, string>} */\r\n  const properties = {}\r\n\r\n  while (++index < node.attrs.length) {\r\n    const attribute = node.attrs[index]\r\n    const name =\r\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\r\n    if (!own.call(proto, name)) {\r\n      properties[name] = attribute.value\r\n    }\r\n  }\r\n\r\n  // Build.\r\n  const x = state.schema.space === 'svg' ? s : h\r\n  const result = x(node.tagName, properties, all(state, node.childNodes))\r\n  patch(state, node, result)\r\n\r\n  // Switch content.\r\n  if (result.tagName === 'template') {\r\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\r\n    const pos = reference.sourceCodeLocation\r\n    const startTag = pos && pos.startTag && position(pos.startTag)\r\n    const endTag = pos && pos.endTag && position(pos.endTag)\r\n\r\n    // Root in, root out.\r\n    const content = /** @type {Root} */ (one(state, reference.content))\r\n\r\n    if (startTag && endTag && state.file) {\r\n      content.position = {start: startTag.end, end: endTag.start}\r\n    }\r\n\r\n    result.content = content\r\n  }\r\n\r\n  state.schema = schema\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Patch positional info from `from` onto `to`.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {DefaultTreeAdapterMap['node']} from\r\n *   p5 node.\r\n * @param {Nodes} to\r\n *   hast node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction patch(state, from, to) {\r\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\r\n    const position = createLocation(state, to, from.sourceCodeLocation)\r\n\r\n    if (position) {\r\n      state.location = true\r\n      to.position = position\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create clean positional information.\r\n *\r\n * @param {State} state\r\n *   Info passed around about the current state.\r\n * @param {Nodes} node\r\n *   hast node.\r\n * @param {Token.ElementLocation} location\r\n *   p5 location info.\r\n * @returns {Position | undefined}\r\n *   Position, or nothing.\r\n */\r\nfunction createLocation(state, node, location) {\r\n  const result = position(location)\r\n\r\n  if (node.type === 'element') {\r\n    const tail = node.children[node.children.length - 1]\r\n\r\n    // Bug for unclosed with children.\r\n    // See: <https://github.com/inikulin/parse5/issues/109>.\r\n    if (\r\n      result &&\r\n      !location.endTag &&\r\n      tail &&\r\n      tail.position &&\r\n      tail.position.end\r\n    ) {\r\n      result.end = Object.assign({}, tail.position.end)\r\n    }\r\n\r\n    if (state.verbose) {\r\n      /** @type {Record<string, Position | undefined>} */\r\n      const properties = {}\r\n      /** @type {string} */\r\n      let key\r\n\r\n      if (location.attrs) {\r\n        for (key in location.attrs) {\r\n          if (own.call(location.attrs, key)) {\r\n            properties[find(state.schema, key).property] = position(\r\n              location.attrs[key]\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      assert(location.startTag, 'a start tag should exist')\r\n      const opening = position(location.startTag)\r\n      const closing = location.endTag ? position(location.endTag) : undefined\r\n      /** @type {ElementData['position']} */\r\n      const data = {opening}\r\n      if (closing) data.closing = closing\r\n      data.properties = properties\r\n\r\n      node.data = {position: data}\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n/**\r\n * Turn a p5 location into a position.\r\n *\r\n * @param {Token.Location} loc\r\n *   Location.\r\n * @returns {Position | undefined}\r\n *   Position or nothing.\r\n */\r\nfunction position(loc) {\r\n  const start = point({\r\n    line: loc.startLine,\r\n    column: loc.startCol,\r\n    offset: loc.startOffset\r\n  })\r\n  const end = point({\r\n    line: loc.endLine,\r\n    column: loc.endCol,\r\n    offset: loc.endOffset\r\n  })\r\n\r\n  // @ts-expect-error: we do use `undefined` for points if one or the other\r\n  // exists.\r\n  return start || end ? {start, end} : undefined\r\n}\r\n\r\n/**\r\n * Filter out invalid points.\r\n *\r\n * @param {Point} point\r\n *   Point with potentially `undefined` values.\r\n * @returns {Point | undefined}\r\n *   Point or nothing.\r\n */\r\nfunction point(point) {\r\n  return point.line && point.column ? point : undefined\r\n}\r\n", "const UNDEFINED_CODE_POINTS = new Set([\r\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\r\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\r\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\r\n    1048575, 1114110, 1114111,\r\n]);\r\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\r\nexport var CODE_POINTS;\r\n(function (CODE_POINTS) {\r\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\r\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\r\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\r\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\r\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\r\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\r\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\r\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\r\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\r\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\r\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\r\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\r\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\r\n})(CODE_POINTS || (CODE_POINTS = {}));\r\nexport const SEQUENCES = {\r\n    DASH_DASH: '--',\r\n    CDATA_START: '[CDATA[',\r\n    DOCTYPE: 'doctype',\r\n    SCRIPT: 'script',\r\n    PUBLIC: 'public',\r\n    SYSTEM: 'system',\r\n};\r\n//Surrogates\r\nexport function isSurrogate(cp) {\r\n    return cp >= 55296 && cp <= 57343;\r\n}\r\nexport function isSurrogatePair(cp) {\r\n    return cp >= 56320 && cp <= 57343;\r\n}\r\nexport function getSurrogatePairCodePoint(cp1, cp2) {\r\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\r\n}\r\n//NOTE: excluding NULL and ASCII whitespace\r\nexport function isControlCodePoint(cp) {\r\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\r\n        (cp >= 0x7f && cp <= 0x9f));\r\n}\r\nexport function isUndefinedCodePoint(cp) {\r\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\r\n}\r\n", "export var ERR;\r\n(function (ERR) {\r\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\r\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\r\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\r\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\r\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\r\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\r\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\r\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\r\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\r\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\r\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\r\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\r\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\r\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\r\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\r\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\r\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\r\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\r\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\r\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\r\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\r\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\r\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\r\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\r\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\r\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\r\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\r\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\r\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\r\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\r\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\r\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\r\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\r\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\r\n    ERR[\"nestedComment\"] = \"nested-comment\";\r\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\r\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\r\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\r\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\r\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\r\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\r\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\r\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\r\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\r\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\r\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\r\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\r\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\r\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\r\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\r\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\r\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\r\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\r\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\r\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\r\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\r\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\r\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\r\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\r\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\r\n})(ERR || (ERR = {}));\r\n", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\r\nimport { ERR } from '../common/error-codes.js';\r\n//Const\r\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\r\n//Preprocessor\r\n//NOTE: HTML input preprocessing\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\r\nexport class Preprocessor {\r\n    constructor(handler) {\r\n        this.handler = handler;\r\n        this.html = '';\r\n        this.pos = -1;\r\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\r\n        this.lastGapPos = -2;\r\n        this.gapStack = [];\r\n        this.skipNextNewLine = false;\r\n        this.lastChunkWritten = false;\r\n        this.endOfChunkHit = false;\r\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\r\n        this.isEol = false;\r\n        this.lineStartPos = 0;\r\n        this.droppedBufferSize = 0;\r\n        this.line = 1;\r\n        //NOTE: avoid reporting errors twice on advance/retreat\r\n        this.lastErrOffset = -1;\r\n    }\r\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\r\n    get col() {\r\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\r\n    }\r\n    get offset() {\r\n        return this.droppedBufferSize + this.pos;\r\n    }\r\n    getError(code, cpOffset) {\r\n        const { line, col, offset } = this;\r\n        const startCol = col + cpOffset;\r\n        const startOffset = offset + cpOffset;\r\n        return {\r\n            code,\r\n            startLine: line,\r\n            endLine: line,\r\n            startCol,\r\n            endCol: startCol,\r\n            startOffset,\r\n            endOffset: startOffset,\r\n        };\r\n    }\r\n    _err(code) {\r\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\r\n            this.lastErrOffset = this.offset;\r\n            this.handler.onParseError(this.getError(code, 0));\r\n        }\r\n    }\r\n    _addGap() {\r\n        this.gapStack.push(this.lastGapPos);\r\n        this.lastGapPos = this.pos;\r\n    }\r\n    _processSurrogate(cp) {\r\n        //NOTE: try to peek a surrogate pair\r\n        if (this.pos !== this.html.length - 1) {\r\n            const nextCp = this.html.charCodeAt(this.pos + 1);\r\n            if (isSurrogatePair(nextCp)) {\r\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\r\n                this.pos++;\r\n                //NOTE: add a gap that should be avoided during retreat\r\n                this._addGap();\r\n                return getSurrogatePairCodePoint(cp, nextCp);\r\n            }\r\n        }\r\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\r\n        else if (!this.lastChunkWritten) {\r\n            this.endOfChunkHit = true;\r\n            return $.EOF;\r\n        }\r\n        //NOTE: isolated surrogate\r\n        this._err(ERR.surrogateInInputStream);\r\n        return cp;\r\n    }\r\n    willDropParsedChunk() {\r\n        return this.pos > this.bufferWaterline;\r\n    }\r\n    dropParsedChunk() {\r\n        if (this.willDropParsedChunk()) {\r\n            this.html = this.html.substring(this.pos);\r\n            this.lineStartPos -= this.pos;\r\n            this.droppedBufferSize += this.pos;\r\n            this.pos = 0;\r\n            this.lastGapPos = -2;\r\n            this.gapStack.length = 0;\r\n        }\r\n    }\r\n    write(chunk, isLastChunk) {\r\n        if (this.html.length > 0) {\r\n            this.html += chunk;\r\n        }\r\n        else {\r\n            this.html = chunk;\r\n        }\r\n        this.endOfChunkHit = false;\r\n        this.lastChunkWritten = isLastChunk;\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\r\n        this.endOfChunkHit = false;\r\n    }\r\n    startsWith(pattern, caseSensitive) {\r\n        // Check if our buffer has enough characters\r\n        if (this.pos + pattern.length > this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return false;\r\n        }\r\n        if (caseSensitive) {\r\n            return this.html.startsWith(pattern, this.pos);\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\r\n            if (cp !== pattern.charCodeAt(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    peek(offset) {\r\n        const pos = this.pos + offset;\r\n        if (pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return $.EOF;\r\n        }\r\n        const code = this.html.charCodeAt(pos);\r\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\r\n    }\r\n    advance() {\r\n        this.pos++;\r\n        //NOTE: LF should be in the last column of the line\r\n        if (this.isEol) {\r\n            this.isEol = false;\r\n            this.line++;\r\n            this.lineStartPos = this.pos;\r\n        }\r\n        if (this.pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return $.EOF;\r\n        }\r\n        let cp = this.html.charCodeAt(this.pos);\r\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\r\n        if (cp === $.CARRIAGE_RETURN) {\r\n            this.isEol = true;\r\n            this.skipNextNewLine = true;\r\n            return $.LINE_FEED;\r\n        }\r\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\r\n        //must be ignored.\r\n        if (cp === $.LINE_FEED) {\r\n            this.isEol = true;\r\n            if (this.skipNextNewLine) {\r\n                // `line` will be bumped again in the recursive call.\r\n                this.line--;\r\n                this.skipNextNewLine = false;\r\n                this._addGap();\r\n                return this.advance();\r\n            }\r\n        }\r\n        this.skipNextNewLine = false;\r\n        if (isSurrogate(cp)) {\r\n            cp = this._processSurrogate(cp);\r\n        }\r\n        //OPTIMIZATION: first check if code point is in the common allowed\r\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\r\n        //before going into detailed performance cost validation.\r\n        const isCommonValidRange = this.handler.onParseError === null ||\r\n            (cp > 0x1f && cp < 0x7f) ||\r\n            cp === $.LINE_FEED ||\r\n            cp === $.CARRIAGE_RETURN ||\r\n            (cp > 0x9f && cp < 64976);\r\n        if (!isCommonValidRange) {\r\n            this._checkForProblematicCharacters(cp);\r\n        }\r\n        return cp;\r\n    }\r\n    _checkForProblematicCharacters(cp) {\r\n        if (isControlCodePoint(cp)) {\r\n            this._err(ERR.controlCharacterInInputStream);\r\n        }\r\n        else if (isUndefinedCodePoint(cp)) {\r\n            this._err(ERR.noncharacterInInputStream);\r\n        }\r\n    }\r\n    retreat(count) {\r\n        this.pos -= count;\r\n        while (this.pos < this.lastGapPos) {\r\n            this.lastGapPos = this.gapStack.pop();\r\n            this.pos--;\r\n        }\r\n        this.isEol = false;\r\n    }\r\n}\r\n", "export var TokenType;\r\n(function (TokenType) {\r\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\r\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\r\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\r\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\r\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\r\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\r\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\r\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\r\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\r\n})(TokenType || (TokenType = {}));\r\nexport function getTokenAttr(token, attrName) {\r\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\r\n        if (token.attrs[i].name === attrName) {\r\n            return token.attrs[i].value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n", null, null, null, null, "/** All valid namespaces in HTML. */\r\nexport var NS;\r\n(function (NS) {\r\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\r\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\r\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\r\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\r\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\r\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\r\n})(NS || (NS = {}));\r\nexport var ATTRS;\r\n(function (ATTRS) {\r\n    ATTRS[\"TYPE\"] = \"type\";\r\n    ATTRS[\"ACTION\"] = \"action\";\r\n    ATTRS[\"ENCODING\"] = \"encoding\";\r\n    ATTRS[\"PROMPT\"] = \"prompt\";\r\n    ATTRS[\"NAME\"] = \"name\";\r\n    ATTRS[\"COLOR\"] = \"color\";\r\n    ATTRS[\"FACE\"] = \"face\";\r\n    ATTRS[\"SIZE\"] = \"size\";\r\n})(ATTRS || (ATTRS = {}));\r\n/**\r\n * The mode of the document.\r\n *\r\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\r\n */\r\nexport var DOCUMENT_MODE;\r\n(function (DOCUMENT_MODE) {\r\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\r\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\r\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\r\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\r\nexport var TAG_NAMES;\r\n(function (TAG_NAMES) {\r\n    TAG_NAMES[\"A\"] = \"a\";\r\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\r\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\r\n    TAG_NAMES[\"APPLET\"] = \"applet\";\r\n    TAG_NAMES[\"AREA\"] = \"area\";\r\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\r\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\r\n    TAG_NAMES[\"B\"] = \"b\";\r\n    TAG_NAMES[\"BASE\"] = \"base\";\r\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\r\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\r\n    TAG_NAMES[\"BIG\"] = \"big\";\r\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\r\n    TAG_NAMES[\"BODY\"] = \"body\";\r\n    TAG_NAMES[\"BR\"] = \"br\";\r\n    TAG_NAMES[\"BUTTON\"] = \"button\";\r\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\r\n    TAG_NAMES[\"CENTER\"] = \"center\";\r\n    TAG_NAMES[\"CODE\"] = \"code\";\r\n    TAG_NAMES[\"COL\"] = \"col\";\r\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\r\n    TAG_NAMES[\"DD\"] = \"dd\";\r\n    TAG_NAMES[\"DESC\"] = \"desc\";\r\n    TAG_NAMES[\"DETAILS\"] = \"details\";\r\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\r\n    TAG_NAMES[\"DIR\"] = \"dir\";\r\n    TAG_NAMES[\"DIV\"] = \"div\";\r\n    TAG_NAMES[\"DL\"] = \"dl\";\r\n    TAG_NAMES[\"DT\"] = \"dt\";\r\n    TAG_NAMES[\"EM\"] = \"em\";\r\n    TAG_NAMES[\"EMBED\"] = \"embed\";\r\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\r\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\r\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\r\n    TAG_NAMES[\"FONT\"] = \"font\";\r\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\r\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\r\n    TAG_NAMES[\"FORM\"] = \"form\";\r\n    TAG_NAMES[\"FRAME\"] = \"frame\";\r\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\r\n    TAG_NAMES[\"H1\"] = \"h1\";\r\n    TAG_NAMES[\"H2\"] = \"h2\";\r\n    TAG_NAMES[\"H3\"] = \"h3\";\r\n    TAG_NAMES[\"H4\"] = \"h4\";\r\n    TAG_NAMES[\"H5\"] = \"h5\";\r\n    TAG_NAMES[\"H6\"] = \"h6\";\r\n    TAG_NAMES[\"HEAD\"] = \"head\";\r\n    TAG_NAMES[\"HEADER\"] = \"header\";\r\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\r\n    TAG_NAMES[\"HR\"] = \"hr\";\r\n    TAG_NAMES[\"HTML\"] = \"html\";\r\n    TAG_NAMES[\"I\"] = \"i\";\r\n    TAG_NAMES[\"IMG\"] = \"img\";\r\n    TAG_NAMES[\"IMAGE\"] = \"image\";\r\n    TAG_NAMES[\"INPUT\"] = \"input\";\r\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\r\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\r\n    TAG_NAMES[\"LABEL\"] = \"label\";\r\n    TAG_NAMES[\"LI\"] = \"li\";\r\n    TAG_NAMES[\"LINK\"] = \"link\";\r\n    TAG_NAMES[\"LISTING\"] = \"listing\";\r\n    TAG_NAMES[\"MAIN\"] = \"main\";\r\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\r\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\r\n    TAG_NAMES[\"MATH\"] = \"math\";\r\n    TAG_NAMES[\"MENU\"] = \"menu\";\r\n    TAG_NAMES[\"META\"] = \"meta\";\r\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\r\n    TAG_NAMES[\"MI\"] = \"mi\";\r\n    TAG_NAMES[\"MO\"] = \"mo\";\r\n    TAG_NAMES[\"MN\"] = \"mn\";\r\n    TAG_NAMES[\"MS\"] = \"ms\";\r\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\r\n    TAG_NAMES[\"NAV\"] = \"nav\";\r\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\r\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\r\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\r\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\r\n    TAG_NAMES[\"OBJECT\"] = \"object\";\r\n    TAG_NAMES[\"OL\"] = \"ol\";\r\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\r\n    TAG_NAMES[\"OPTION\"] = \"option\";\r\n    TAG_NAMES[\"P\"] = \"p\";\r\n    TAG_NAMES[\"PARAM\"] = \"param\";\r\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\r\n    TAG_NAMES[\"PRE\"] = \"pre\";\r\n    TAG_NAMES[\"RB\"] = \"rb\";\r\n    TAG_NAMES[\"RP\"] = \"rp\";\r\n    TAG_NAMES[\"RT\"] = \"rt\";\r\n    TAG_NAMES[\"RTC\"] = \"rtc\";\r\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\r\n    TAG_NAMES[\"S\"] = \"s\";\r\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\r\n    TAG_NAMES[\"SEARCH\"] = \"search\";\r\n    TAG_NAMES[\"SECTION\"] = \"section\";\r\n    TAG_NAMES[\"SELECT\"] = \"select\";\r\n    TAG_NAMES[\"SOURCE\"] = \"source\";\r\n    TAG_NAMES[\"SMALL\"] = \"small\";\r\n    TAG_NAMES[\"SPAN\"] = \"span\";\r\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\r\n    TAG_NAMES[\"STRONG\"] = \"strong\";\r\n    TAG_NAMES[\"STYLE\"] = \"style\";\r\n    TAG_NAMES[\"SUB\"] = \"sub\";\r\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\r\n    TAG_NAMES[\"SUP\"] = \"sup\";\r\n    TAG_NAMES[\"TABLE\"] = \"table\";\r\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\r\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\r\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\r\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\r\n    TAG_NAMES[\"TD\"] = \"td\";\r\n    TAG_NAMES[\"TH\"] = \"th\";\r\n    TAG_NAMES[\"THEAD\"] = \"thead\";\r\n    TAG_NAMES[\"TITLE\"] = \"title\";\r\n    TAG_NAMES[\"TR\"] = \"tr\";\r\n    TAG_NAMES[\"TRACK\"] = \"track\";\r\n    TAG_NAMES[\"TT\"] = \"tt\";\r\n    TAG_NAMES[\"U\"] = \"u\";\r\n    TAG_NAMES[\"UL\"] = \"ul\";\r\n    TAG_NAMES[\"SVG\"] = \"svg\";\r\n    TAG_NAMES[\"VAR\"] = \"var\";\r\n    TAG_NAMES[\"WBR\"] = \"wbr\";\r\n    TAG_NAMES[\"XMP\"] = \"xmp\";\r\n})(TAG_NAMES || (TAG_NAMES = {}));\r\n/**\r\n * Tag IDs are numeric IDs for known tag names.\r\n *\r\n * We use tag IDs to improve the performance of tag name comparisons.\r\n */\r\nexport var TAG_ID;\r\n(function (TAG_ID) {\r\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\r\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\r\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\r\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\r\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\r\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\r\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\r\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\r\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\r\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\r\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\r\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\r\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\r\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\r\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\r\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\r\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\r\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\r\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\r\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\r\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\r\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\r\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\r\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\r\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\r\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\r\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\r\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\r\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\r\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\r\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\r\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\r\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\r\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\r\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\r\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\r\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\r\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\r\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\r\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\r\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\r\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\r\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\r\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\r\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\r\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\r\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\r\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\r\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\r\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\r\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\r\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\r\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\r\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\r\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\r\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\r\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\r\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\r\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\r\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\r\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\r\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\r\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\r\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\r\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\r\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\r\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\r\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\r\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\r\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\r\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\r\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\r\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\r\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\r\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\r\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\r\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\r\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\r\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\r\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\r\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\r\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\r\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\r\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\r\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\r\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\r\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\r\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\r\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\r\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\r\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\r\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\r\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\r\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\r\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\r\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\r\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\r\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\r\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\r\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\r\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\r\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\r\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\r\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\r\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\r\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\r\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\r\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\r\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\r\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\r\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\r\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\r\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\r\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\r\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\r\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\r\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\r\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\r\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\r\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\r\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\r\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\r\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\r\n})(TAG_ID || (TAG_ID = {}));\r\nconst TAG_NAME_TO_ID = new Map([\r\n    [TAG_NAMES.A, TAG_ID.A],\r\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\r\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\r\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\r\n    [TAG_NAMES.AREA, TAG_ID.AREA],\r\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\r\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\r\n    [TAG_NAMES.B, TAG_ID.B],\r\n    [TAG_NAMES.BASE, TAG_ID.BASE],\r\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\r\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\r\n    [TAG_NAMES.BIG, TAG_ID.BIG],\r\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\r\n    [TAG_NAMES.BODY, TAG_ID.BODY],\r\n    [TAG_NAMES.BR, TAG_ID.BR],\r\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\r\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\r\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\r\n    [TAG_NAMES.CODE, TAG_ID.CODE],\r\n    [TAG_NAMES.COL, TAG_ID.COL],\r\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\r\n    [TAG_NAMES.DD, TAG_ID.DD],\r\n    [TAG_NAMES.DESC, TAG_ID.DESC],\r\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\r\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\r\n    [TAG_NAMES.DIR, TAG_ID.DIR],\r\n    [TAG_NAMES.DIV, TAG_ID.DIV],\r\n    [TAG_NAMES.DL, TAG_ID.DL],\r\n    [TAG_NAMES.DT, TAG_ID.DT],\r\n    [TAG_NAMES.EM, TAG_ID.EM],\r\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\r\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\r\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\r\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\r\n    [TAG_NAMES.FONT, TAG_ID.FONT],\r\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\r\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\r\n    [TAG_NAMES.FORM, TAG_ID.FORM],\r\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\r\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\r\n    [TAG_NAMES.H1, TAG_ID.H1],\r\n    [TAG_NAMES.H2, TAG_ID.H2],\r\n    [TAG_NAMES.H3, TAG_ID.H3],\r\n    [TAG_NAMES.H4, TAG_ID.H4],\r\n    [TAG_NAMES.H5, TAG_ID.H5],\r\n    [TAG_NAMES.H6, TAG_ID.H6],\r\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\r\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\r\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\r\n    [TAG_NAMES.HR, TAG_ID.HR],\r\n    [TAG_NAMES.HTML, TAG_ID.HTML],\r\n    [TAG_NAMES.I, TAG_ID.I],\r\n    [TAG_NAMES.IMG, TAG_ID.IMG],\r\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\r\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\r\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\r\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\r\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\r\n    [TAG_NAMES.LI, TAG_ID.LI],\r\n    [TAG_NAMES.LINK, TAG_ID.LINK],\r\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\r\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\r\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\r\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\r\n    [TAG_NAMES.MATH, TAG_ID.MATH],\r\n    [TAG_NAMES.MENU, TAG_ID.MENU],\r\n    [TAG_NAMES.META, TAG_ID.META],\r\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\r\n    [TAG_NAMES.MI, TAG_ID.MI],\r\n    [TAG_NAMES.MO, TAG_ID.MO],\r\n    [TAG_NAMES.MN, TAG_ID.MN],\r\n    [TAG_NAMES.MS, TAG_ID.MS],\r\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\r\n    [TAG_NAMES.NAV, TAG_ID.NAV],\r\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\r\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\r\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\r\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\r\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\r\n    [TAG_NAMES.OL, TAG_ID.OL],\r\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\r\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\r\n    [TAG_NAMES.P, TAG_ID.P],\r\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\r\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\r\n    [TAG_NAMES.PRE, TAG_ID.PRE],\r\n    [TAG_NAMES.RB, TAG_ID.RB],\r\n    [TAG_NAMES.RP, TAG_ID.RP],\r\n    [TAG_NAMES.RT, TAG_ID.RT],\r\n    [TAG_NAMES.RTC, TAG_ID.RTC],\r\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\r\n    [TAG_NAMES.S, TAG_ID.S],\r\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\r\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\r\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\r\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\r\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\r\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\r\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\r\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\r\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\r\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\r\n    [TAG_NAMES.SUB, TAG_ID.SUB],\r\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\r\n    [TAG_NAMES.SUP, TAG_ID.SUP],\r\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\r\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\r\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\r\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\r\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\r\n    [TAG_NAMES.TD, TAG_ID.TD],\r\n    [TAG_NAMES.TH, TAG_ID.TH],\r\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\r\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\r\n    [TAG_NAMES.TR, TAG_ID.TR],\r\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\r\n    [TAG_NAMES.TT, TAG_ID.TT],\r\n    [TAG_NAMES.U, TAG_ID.U],\r\n    [TAG_NAMES.UL, TAG_ID.UL],\r\n    [TAG_NAMES.SVG, TAG_ID.SVG],\r\n    [TAG_NAMES.VAR, TAG_ID.VAR],\r\n    [TAG_NAMES.WBR, TAG_ID.WBR],\r\n    [TAG_NAMES.XMP, TAG_ID.XMP],\r\n]);\r\nexport function getTagID(tagName) {\r\n    var _a;\r\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\r\n}\r\nconst $ = TAG_ID;\r\nexport const SPECIAL_ELEMENTS = {\r\n    [NS.HTML]: new Set([\r\n        $.ADDRESS,\r\n        $.APPLET,\r\n        $.AREA,\r\n        $.ARTICLE,\r\n        $.ASIDE,\r\n        $.BASE,\r\n        $.BASEFONT,\r\n        $.BGSOUND,\r\n        $.BLOCKQUOTE,\r\n        $.BODY,\r\n        $.BR,\r\n        $.BUTTON,\r\n        $.CAPTION,\r\n        $.CENTER,\r\n        $.COL,\r\n        $.COLGROUP,\r\n        $.DD,\r\n        $.DETAILS,\r\n        $.DIR,\r\n        $.DIV,\r\n        $.DL,\r\n        $.DT,\r\n        $.EMBED,\r\n        $.FIELDSET,\r\n        $.FIGCAPTION,\r\n        $.FIGURE,\r\n        $.FOOTER,\r\n        $.FORM,\r\n        $.FRAME,\r\n        $.FRAMESET,\r\n        $.H1,\r\n        $.H2,\r\n        $.H3,\r\n        $.H4,\r\n        $.H5,\r\n        $.H6,\r\n        $.HEAD,\r\n        $.HEADER,\r\n        $.HGROUP,\r\n        $.HR,\r\n        $.HTML,\r\n        $.IFRAME,\r\n        $.IMG,\r\n        $.INPUT,\r\n        $.LI,\r\n        $.LINK,\r\n        $.LISTING,\r\n        $.MAIN,\r\n        $.MARQUEE,\r\n        $.MENU,\r\n        $.META,\r\n        $.NAV,\r\n        $.NOEMBED,\r\n        $.NOFRAMES,\r\n        $.NOSCRIPT,\r\n        $.OBJECT,\r\n        $.OL,\r\n        $.P,\r\n        $.PARAM,\r\n        $.PLAINTEXT,\r\n        $.PRE,\r\n        $.SCRIPT,\r\n        $.SECTION,\r\n        $.SELECT,\r\n        $.SOURCE,\r\n        $.STYLE,\r\n        $.SUMMARY,\r\n        $.TABLE,\r\n        $.TBODY,\r\n        $.TD,\r\n        $.TEMPLATE,\r\n        $.TEXTAREA,\r\n        $.TFOOT,\r\n        $.TH,\r\n        $.THEAD,\r\n        $.TITLE,\r\n        $.TR,\r\n        $.TRACK,\r\n        $.UL,\r\n        $.WBR,\r\n        $.XMP,\r\n    ]),\r\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\r\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\r\n    [NS.XLINK]: new Set(),\r\n    [NS.XML]: new Set(),\r\n    [NS.XMLNS]: new Set(),\r\n};\r\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\r\nconst UNESCAPED_TEXT = new Set([\r\n    TAG_NAMES.STYLE,\r\n    TAG_NAMES.SCRIPT,\r\n    TAG_NAMES.XMP,\r\n    TAG_NAMES.IFRAME,\r\n    TAG_NAMES.NOEMBED,\r\n    TAG_NAMES.NOFRAMES,\r\n    TAG_NAMES.PLAINTEXT,\r\n]);\r\nexport function hasUnescapedText(tn, scriptingEnabled) {\r\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\r\n}\r\n", "import { Preprocessor } from './preprocessor.js';\r\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\r\nimport { TokenType, getTokenAttr, } from '../common/token.js';\r\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\r\nimport { ERR } from '../common/error-codes.js';\r\nimport { TAG_ID, getTagID } from '../common/html.js';\r\n//States\r\nvar State;\r\n(function (State) {\r\n    State[State[\"DATA\"] = 0] = \"DATA\";\r\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\r\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\r\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\r\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\r\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\r\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\r\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\r\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\r\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\r\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\r\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\r\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\r\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\r\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\r\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\r\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\r\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\r\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\r\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\r\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\r\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\r\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\r\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\r\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\r\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\r\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\r\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\r\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\r\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\r\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\r\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\r\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\r\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\r\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\r\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\r\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\r\n})(State || (State = {}));\r\n//Tokenizer initial states for different modes\r\nexport const TokenizerMode = {\r\n    DATA: State.DATA,\r\n    RCDATA: State.RCDATA,\r\n    RAWTEXT: State.RAWTEXT,\r\n    SCRIPT_DATA: State.SCRIPT_DATA,\r\n    PLAINTEXT: State.PLAINTEXT,\r\n    CDATA_SECTION: State.CDATA_SECTION,\r\n};\r\n//Utils\r\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\r\n//this functions if they will be situated in another module due to context switch.\r\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\r\nfunction isAsciiDigit(cp) {\r\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\r\n}\r\nfunction isAsciiUpper(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\r\n}\r\nfunction isAsciiLower(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\r\n}\r\nfunction isAsciiLetter(cp) {\r\n    return isAsciiLower(cp) || isAsciiUpper(cp);\r\n}\r\nfunction isAsciiAlphaNumeric(cp) {\r\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\r\n}\r\nfunction toAsciiLower(cp) {\r\n    return cp + 32;\r\n}\r\nfunction isWhitespace(cp) {\r\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\r\n}\r\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\r\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\r\n}\r\nfunction getErrorForNumericCharacterReference(code) {\r\n    if (code === $.NULL) {\r\n        return ERR.nullCharacterReference;\r\n    }\r\n    else if (code > 1114111) {\r\n        return ERR.characterReferenceOutsideUnicodeRange;\r\n    }\r\n    else if (isSurrogate(code)) {\r\n        return ERR.surrogateCharacterReference;\r\n    }\r\n    else if (isUndefinedCodePoint(code)) {\r\n        return ERR.noncharacterCharacterReference;\r\n    }\r\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\r\n        return ERR.controlCharacterReference;\r\n    }\r\n    return null;\r\n}\r\n//Tokenizer\r\nexport class Tokenizer {\r\n    constructor(options, handler) {\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.paused = false;\r\n        /** Ensures that the parsing loop isn't run multiple times at once. */\r\n        this.inLoop = false;\r\n        /**\r\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\r\n         * and that it is not an integration point for either MathML or HTML.\r\n         *\r\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\r\n         */\r\n        this.inForeignNode = false;\r\n        this.lastStartTagName = '';\r\n        this.active = false;\r\n        this.state = State.DATA;\r\n        this.returnState = State.DATA;\r\n        this.entityStartPos = 0;\r\n        this.consumedAfterSnapshot = -1;\r\n        this.currentCharacterToken = null;\r\n        this.currentToken = null;\r\n        this.currentAttr = { name: '', value: '' };\r\n        this.preprocessor = new Preprocessor(handler);\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\r\n            // Note: Set `pos` _before_ flushing, as flushing might drop\r\n            // the current chunk and invalidate `entityStartPos`.\r\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\r\n            this._flushCodePointConsumedAsCharacterReference(cp);\r\n        }, handler.onParseError\r\n            ? {\r\n                missingSemicolonAfterCharacterReference: () => {\r\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\r\n                },\r\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\r\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\r\n                },\r\n                validateNumericCharacterReference: (code) => {\r\n                    const error = getErrorForNumericCharacterReference(code);\r\n                    if (error)\r\n                        this._err(error, 1);\r\n                },\r\n            }\r\n            : undefined);\r\n    }\r\n    //Errors\r\n    _err(code, cpOffset = 0) {\r\n        var _a, _b;\r\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\r\n    }\r\n    // NOTE: `offset` may never run across line boundaries.\r\n    getCurrentLocation(offset) {\r\n        if (!this.options.sourceCodeLocationInfo) {\r\n            return null;\r\n        }\r\n        return {\r\n            startLine: this.preprocessor.line,\r\n            startCol: this.preprocessor.col - offset,\r\n            startOffset: this.preprocessor.offset - offset,\r\n            endLine: -1,\r\n            endCol: -1,\r\n            endOffset: -1,\r\n        };\r\n    }\r\n    _runParsingLoop() {\r\n        if (this.inLoop)\r\n            return;\r\n        this.inLoop = true;\r\n        while (this.active && !this.paused) {\r\n            this.consumedAfterSnapshot = 0;\r\n            const cp = this._consume();\r\n            if (!this._ensureHibernation()) {\r\n                this._callState(cp);\r\n            }\r\n        }\r\n        this.inLoop = false;\r\n    }\r\n    //API\r\n    pause() {\r\n        this.paused = true;\r\n    }\r\n    resume(writeCallback) {\r\n        if (!this.paused) {\r\n            throw new Error('Parser was already resumed');\r\n        }\r\n        this.paused = false;\r\n        // Necessary for synchronous resume.\r\n        if (this.inLoop)\r\n            return;\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    write(chunk, isLastChunk, writeCallback) {\r\n        this.active = true;\r\n        this.preprocessor.write(chunk, isLastChunk);\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.active = true;\r\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\r\n        this._runParsingLoop();\r\n    }\r\n    //Hibernation\r\n    _ensureHibernation() {\r\n        if (this.preprocessor.endOfChunkHit) {\r\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\r\n            this.consumedAfterSnapshot = 0;\r\n            this.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Consumption\r\n    _consume() {\r\n        this.consumedAfterSnapshot++;\r\n        return this.preprocessor.advance();\r\n    }\r\n    _advanceBy(count) {\r\n        this.consumedAfterSnapshot += count;\r\n        for (let i = 0; i < count; i++) {\r\n            this.preprocessor.advance();\r\n        }\r\n    }\r\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\r\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\r\n            // We will already have consumed one character before calling this method.\r\n            this._advanceBy(pattern.length - 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Token creation\r\n    _createStartTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.START_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(1),\r\n        };\r\n    }\r\n    _createEndTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.END_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(2),\r\n        };\r\n    }\r\n    _createCommentToken(offset) {\r\n        this.currentToken = {\r\n            type: TokenType.COMMENT,\r\n            data: '',\r\n            location: this.getCurrentLocation(offset),\r\n        };\r\n    }\r\n    _createDoctypeToken(initialName) {\r\n        this.currentToken = {\r\n            type: TokenType.DOCTYPE,\r\n            name: initialName,\r\n            forceQuirks: false,\r\n            publicId: null,\r\n            systemId: null,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    _createCharacterToken(type, chars) {\r\n        this.currentCharacterToken = {\r\n            type,\r\n            chars,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    //Tag attributes\r\n    _createAttr(attrNameFirstCh) {\r\n        this.currentAttr = {\r\n            name: attrNameFirstCh,\r\n            value: '',\r\n        };\r\n        this.currentLocation = this.getCurrentLocation(0);\r\n    }\r\n    _leaveAttrName() {\r\n        var _a;\r\n        var _b;\r\n        const token = this.currentToken;\r\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\r\n            token.attrs.push(this.currentAttr);\r\n            if (token.location && this.currentLocation) {\r\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\r\n                attrLocations[this.currentAttr.name] = this.currentLocation;\r\n                // Set end location\r\n                this._leaveAttrValue();\r\n            }\r\n        }\r\n        else {\r\n            this._err(ERR.duplicateAttribute);\r\n        }\r\n    }\r\n    _leaveAttrValue() {\r\n        if (this.currentLocation) {\r\n            this.currentLocation.endLine = this.preprocessor.line;\r\n            this.currentLocation.endCol = this.preprocessor.col;\r\n            this.currentLocation.endOffset = this.preprocessor.offset;\r\n        }\r\n    }\r\n    //Token emission\r\n    prepareToken(ct) {\r\n        this._emitCurrentCharacterToken(ct.location);\r\n        this.currentToken = null;\r\n        if (ct.location) {\r\n            ct.location.endLine = this.preprocessor.line;\r\n            ct.location.endCol = this.preprocessor.col + 1;\r\n            ct.location.endOffset = this.preprocessor.offset + 1;\r\n        }\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n    }\r\n    emitCurrentTagToken() {\r\n        const ct = this.currentToken;\r\n        this.prepareToken(ct);\r\n        ct.tagID = getTagID(ct.tagName);\r\n        if (ct.type === TokenType.START_TAG) {\r\n            this.lastStartTagName = ct.tagName;\r\n            this.handler.onStartTag(ct);\r\n        }\r\n        else {\r\n            if (ct.attrs.length > 0) {\r\n                this._err(ERR.endTagWithAttributes);\r\n            }\r\n            if (ct.selfClosing) {\r\n                this._err(ERR.endTagWithTrailingSolidus);\r\n            }\r\n            this.handler.onEndTag(ct);\r\n        }\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentComment(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onComment(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentDoctype(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onDoctype(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    _emitCurrentCharacterToken(nextLocation) {\r\n        if (this.currentCharacterToken) {\r\n            //NOTE: if we have a pending character token, make it's end location equal to the\r\n            //current token's start location.\r\n            if (nextLocation && this.currentCharacterToken.location) {\r\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\r\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\r\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\r\n            }\r\n            switch (this.currentCharacterToken.type) {\r\n                case TokenType.CHARACTER: {\r\n                    this.handler.onCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.NULL_CHARACTER: {\r\n                    this.handler.onNullCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.WHITESPACE_CHARACTER: {\r\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n            }\r\n            this.currentCharacterToken = null;\r\n        }\r\n    }\r\n    _emitEOFToken() {\r\n        const location = this.getCurrentLocation(0);\r\n        if (location) {\r\n            location.endLine = location.startLine;\r\n            location.endCol = location.startCol;\r\n            location.endOffset = location.startOffset;\r\n        }\r\n        this._emitCurrentCharacterToken(location);\r\n        this.handler.onEof({ type: TokenType.EOF, location });\r\n        this.active = false;\r\n    }\r\n    //Characters emission\r\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\r\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\r\n    //If we have a sequence of characters that belong to the same group, the parser can process it\r\n    //as a single solid character token.\r\n    //So, there are 3 types of character tokens in parse5:\r\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\r\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\r\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\r\n    _appendCharToCurrentCharacterToken(type, ch) {\r\n        if (this.currentCharacterToken) {\r\n            if (this.currentCharacterToken.type === type) {\r\n                this.currentCharacterToken.chars += ch;\r\n                return;\r\n            }\r\n            else {\r\n                this.currentLocation = this.getCurrentLocation(0);\r\n                this._emitCurrentCharacterToken(this.currentLocation);\r\n                this.preprocessor.dropParsedChunk();\r\n            }\r\n        }\r\n        this._createCharacterToken(type, ch);\r\n    }\r\n    _emitCodePoint(cp) {\r\n        const type = isWhitespace(cp)\r\n            ? TokenType.WHITESPACE_CHARACTER\r\n            : cp === $.NULL\r\n                ? TokenType.NULL_CHARACTER\r\n                : TokenType.CHARACTER;\r\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\r\n    }\r\n    //NOTE: used when we emit characters explicitly.\r\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\r\n    _emitChars(ch) {\r\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\r\n    }\r\n    // Character reference helpers\r\n    _startCharacterReference() {\r\n        this.returnState = this.state;\r\n        this.state = State.CHARACTER_REFERENCE;\r\n        this.entityStartPos = this.preprocessor.pos;\r\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\r\n    }\r\n    _isCharacterReferenceInAttribute() {\r\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\r\n    }\r\n    _flushCodePointConsumedAsCharacterReference(cp) {\r\n        if (this._isCharacterReferenceInAttribute()) {\r\n            this.currentAttr.value += String.fromCodePoint(cp);\r\n        }\r\n        else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n    // Calling states this way turns out to be much faster than any other approach.\r\n    _callState(cp) {\r\n        switch (this.state) {\r\n            case State.DATA: {\r\n                this._stateData(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA: {\r\n                this._stateRcdata(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT: {\r\n                this._stateRawtext(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA: {\r\n                this._stateScriptData(cp);\r\n                break;\r\n            }\r\n            case State.PLAINTEXT: {\r\n                this._statePlaintext(cp);\r\n                break;\r\n            }\r\n            case State.TAG_OPEN: {\r\n                this._stateTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.END_TAG_OPEN: {\r\n                this._stateEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.TAG_NAME: {\r\n                this._stateTagName(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_LESS_THAN_SIGN: {\r\n                this._stateRcdataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_OPEN: {\r\n                this._stateRcdataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_NAME: {\r\n                this._stateRcdataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_LESS_THAN_SIGN: {\r\n                this._stateRawtextLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_OPEN: {\r\n                this._stateRawtextEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_NAME: {\r\n                this._stateRawtextEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\r\n                this._stateScriptDataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\r\n                this._stateScriptDataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_NAME: {\r\n                this._stateScriptDataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START: {\r\n                this._stateScriptDataEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\r\n                this._stateScriptDataEscapeStartDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED: {\r\n                this._stateScriptDataEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\r\n                this._stateScriptDataEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\r\n                this._stateScriptDataEscapedEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\r\n                this._stateScriptDataEscapedEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\r\n                this._stateScriptDataDoubleEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\r\n                this._stateScriptDataDoubleEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\r\n                this._stateScriptDataDoubleEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataDoubleEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\r\n                this._stateScriptDataDoubleEscapeEnd(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_NAME: {\r\n                this._stateBeforeAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_NAME: {\r\n                this._stateAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_NAME: {\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_VALUE: {\r\n                this._stateBeforeAttributeValue(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\r\n                this._stateAttributeValueDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\r\n                this._stateAttributeValueSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\r\n                this._stateAttributeValueUnquoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\r\n                this._stateAfterAttributeValueQuoted(cp);\r\n                break;\r\n            }\r\n            case State.SELF_CLOSING_START_TAG: {\r\n                this._stateSelfClosingStartTag(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_COMMENT: {\r\n                this._stateBogusComment(cp);\r\n                break;\r\n            }\r\n            case State.MARKUP_DECLARATION_OPEN: {\r\n                this._stateMarkupDeclarationOpen(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START: {\r\n                this._stateCommentStart(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START_DASH: {\r\n                this._stateCommentStartDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT: {\r\n                this._stateComment(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN: {\r\n                this._stateCommentLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\r\n                this._stateCommentLessThanSignBang(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\r\n                this._stateCommentLessThanSignBangDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\r\n                this._stateCommentLessThanSignBangDashDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_DASH: {\r\n                this._stateCommentEndDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END: {\r\n                this._stateCommentEnd(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_BANG: {\r\n                this._stateCommentEndBang(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE: {\r\n                this._stateDoctype(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_NAME: {\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_NAME: {\r\n                this._stateDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_NAME: {\r\n                this._stateAfterDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\r\n                this._stateAfterDoctypePublicKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateBeforeDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateAfterDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\r\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\r\n                this._stateAfterDoctypeSystemKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateBeforeDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateAfterDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_DOCTYPE: {\r\n                this._stateBogusDoctype(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION: {\r\n                this._stateCdataSection(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_BRACKET: {\r\n                this._stateCdataSectionBracket(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_END: {\r\n                this._stateCdataSectionEnd(cp);\r\n                break;\r\n            }\r\n            case State.CHARACTER_REFERENCE: {\r\n                this._stateCharacterReference();\r\n                break;\r\n            }\r\n            case State.AMBIGUOUS_AMPERSAND: {\r\n                this._stateAmbiguousAmpersand(cp);\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unknown state');\r\n            }\r\n        }\r\n    }\r\n    // State machine\r\n    // Data state\r\n    //------------------------------------------------------------------\r\n    _stateData(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.TAG_OPEN;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this._startCharacterReference();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    //  RCDATA state\r\n    //------------------------------------------------------------------\r\n    _stateRcdata(cp) {\r\n        switch (cp) {\r\n            case $.AMPERSAND: {\r\n                this._startCharacterReference();\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.RCDATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // RAWTEXT state\r\n    //------------------------------------------------------------------\r\n    _stateRawtext(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data state\r\n    //------------------------------------------------------------------\r\n    _stateScriptData(cp) {\r\n        switch (cp) {\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // PLAINTEXT state\r\n    //------------------------------------------------------------------\r\n    _statePlaintext(cp) {\r\n        switch (cp) {\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Tag open state\r\n    //------------------------------------------------------------------\r\n    _stateTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createStartTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.EXCLAMATION_MARK: {\r\n                    this.state = State.MARKUP_DECLARATION_OPEN;\r\n                    break;\r\n                }\r\n                case $.SOLIDUS: {\r\n                    this.state = State.END_TAG_OPEN;\r\n                    break;\r\n                }\r\n                case $.QUESTION_MARK: {\r\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\r\n                    this._createCommentToken(1);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('<');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._emitChars('<');\r\n                    this.state = State.DATA;\r\n                    this._stateData(cp);\r\n                }\r\n            }\r\n    }\r\n    // End tag open state\r\n    //------------------------------------------------------------------\r\n    _stateEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingEndTagName);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('</');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._createCommentToken(2);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                }\r\n            }\r\n    }\r\n    // Tag name state\r\n    //------------------------------------------------------------------\r\n    _stateTagName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.tagName += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // RCDATA less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.RCDATA_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RCDATA end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RCDATA_END_TAG_NAME;\r\n            this._stateRcdataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    handleSpecialEndTag(_cp) {\r\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\r\n            return !this._ensureHibernation();\r\n        }\r\n        this._createEndTagToken();\r\n        const token = this.currentToken;\r\n        token.tagName = this.lastStartTagName;\r\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                return false;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                return false;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.emitCurrentTagToken();\r\n                this.state = State.DATA;\r\n                return false;\r\n            }\r\n            default: {\r\n                return !this._ensureHibernation();\r\n            }\r\n        }\r\n    }\r\n    // RCDATA end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RAWTEXT less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.RAWTEXT_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RAWTEXT_END_TAG_NAME;\r\n            this._stateRawtextEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // Script data less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataLessThanSign(cp) {\r\n        switch (cp) {\r\n            case $.SOLIDUS: {\r\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\r\n                break;\r\n            }\r\n            case $.EXCLAMATION_MARK: {\r\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\r\n                this._emitChars('<!');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars('<');\r\n                this.state = State.SCRIPT_DATA;\r\n                this._stateScriptData(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\r\n            this._stateScriptDataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStart(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStartDash(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscaped(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\r\n        }\r\n        else if (isAsciiLetter(cp)) {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\r\n            this._stateScriptDataDoubleEscapeStart(cp);\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\r\n            this._stateScriptDataEscapedEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeStart(cp) {\r\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscaped(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\r\n        if (cp === $.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\r\n            this._emitChars('/');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape end state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeEnd(cp) {\r\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Before attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.SOLIDUS:\r\n            case $.GREATER_THAN_SIGN:\r\n            case $.EOF: {\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\r\n                this._createAttr('=');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED:\r\n            case $.SOLIDUS:\r\n            case $.GREATER_THAN_SIGN:\r\n            case $.EOF: {\r\n                this._leaveAttrName();\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this._leaveAttrName();\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK:\r\n            case $.APOSTROPHE:\r\n            case $.LESS_THAN_SIGN: {\r\n                this._err(ERR.unexpectedCharacterInAttributeName);\r\n                this.currentAttr.name += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeName(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.EQUALS_SIGN: {\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before attribute value state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeValue(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingAttributeValue);\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\r\n                this._stateAttributeValueUnquoted(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueDoubleQuoted(cp) {\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this._startCharacterReference();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueSingleQuoted(cp) {\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this._startCharacterReference();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (unquoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueUnquoted(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.AMPERSAND: {\r\n                this._startCharacterReference();\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK:\r\n            case $.APOSTROPHE:\r\n            case $.LESS_THAN_SIGN:\r\n            case $.EQUALS_SIGN:\r\n            case $.GRAVE_ACCENT: {\r\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute value (quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeValueQuoted(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case $.SOLIDUS: {\r\n                this._leaveAttrValue();\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBetweenAttributes);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Self-closing start tag state\r\n    //------------------------------------------------------------------\r\n    _stateSelfClosingStartTag(cp) {\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                const token = this.currentToken;\r\n                token.selfClosing = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedSolidusInTag);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus comment state\r\n    //------------------------------------------------------------------\r\n    _stateBogusComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Markup declaration open state\r\n    //------------------------------------------------------------------\r\n    _stateMarkupDeclarationOpen(cp) {\r\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\r\n            this._createCommentToken($$.DASH_DASH.length + 1);\r\n            this.state = State.COMMENT_START;\r\n        }\r\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\r\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\r\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\r\n            this.state = State.DOCTYPE;\r\n        }\r\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\r\n            if (this.inForeignNode) {\r\n                this.state = State.CDATA_SECTION;\r\n            }\r\n            else {\r\n                this._err(ERR.cdataInHtmlContent);\r\n                this._createCommentToken($$.CDATA_START.length + 1);\r\n                this.currentToken.data = '[CDATA[';\r\n                this.state = State.BOGUS_COMMENT;\r\n            }\r\n        }\r\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\r\n        //results are no longer valid and we will need to start over.\r\n        else if (!this._ensureHibernation()) {\r\n            this._err(ERR.incorrectlyOpenedComment);\r\n            this._createCommentToken(2);\r\n            this.state = State.BOGUS_COMMENT;\r\n            this._stateBogusComment(cp);\r\n        }\r\n    }\r\n    // Comment start state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStart(cp) {\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_START_DASH;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                const token = this.currentToken;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment start dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStartDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment state\r\n    //------------------------------------------------------------------\r\n    _stateComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSign(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.EXCLAMATION_MARK: {\r\n                token.data += '!';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\r\n                break;\r\n            }\r\n            case $.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBang(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT;\r\n            this._stateComment(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDash(cp) {\r\n        if (cp === $.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT_END_DASH;\r\n            this._stateCommentEndDash(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDashDash(cp) {\r\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\r\n            this._err(ERR.nestedComment);\r\n        }\r\n        this.state = State.COMMENT_END;\r\n        this._stateCommentEnd(cp);\r\n    }\r\n    // Comment end dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEnd(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EXCLAMATION_MARK: {\r\n                this.state = State.COMMENT_END_BANG;\r\n                break;\r\n            }\r\n            case $.HYPHEN_MINUS: {\r\n                token.data += '-';\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndBang(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.HYPHEN_MINUS: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.incorrectlyClosedComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateDoctype(cp) {\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                this._createDoctypeToken(null);\r\n                const token = this.currentToken;\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeName(cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\r\n            this.state = State.DOCTYPE_NAME;\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case $.SPACE:\r\n                case $.LINE_FEED:\r\n                case $.TABULATION:\r\n                case $.FORM_FEED: {\r\n                    // Ignore whitespace\r\n                    break;\r\n                }\r\n                case $.NULL: {\r\n                    this._err(ERR.unexpectedNullCharacter);\r\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\r\n                    this.state = State.DOCTYPE_NAME;\r\n                    break;\r\n                }\r\n                case $.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingDoctypeName);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case $.EOF: {\r\n                    this._err(ERR.eofInDoctype);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._createDoctypeToken(String.fromCodePoint(cp));\r\n                    this.state = State.DOCTYPE_NAME;\r\n                }\r\n            }\r\n    }\r\n    // DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.AFTER_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\r\n                }\r\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\r\n                }\r\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\r\n                //results are no longer valid and we will need to start over.\r\n                else if (!this._ensureHibernation()) {\r\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\r\n                    token.forceQuirks = true;\r\n                    this.state = State.BOGUS_DOCTYPE;\r\n                    this._stateBogusDoctype(cp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Between DOCTYPE public and system identifiers state\r\n    //------------------------------------------------------------------\r\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.SPACE:\r\n            case $.LINE_FEED:\r\n            case $.TABULATION:\r\n            case $.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateBogusDoctype(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    // CDATA section state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSection(cp) {\r\n        switch (cp) {\r\n            case $.RIGHT_SQUARE_BRACKET: {\r\n                this.state = State.CDATA_SECTION_BRACKET;\r\n                break;\r\n            }\r\n            case $.EOF: {\r\n                this._err(ERR.eofInCdata);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // CDATA section bracket state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionBracket(cp) {\r\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\r\n            this.state = State.CDATA_SECTION_END;\r\n        }\r\n        else {\r\n            this._emitChars(']');\r\n            this.state = State.CDATA_SECTION;\r\n            this._stateCdataSection(cp);\r\n        }\r\n    }\r\n    // CDATA section end state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionEnd(cp) {\r\n        switch (cp) {\r\n            case $.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case $.RIGHT_SQUARE_BRACKET: {\r\n                this._emitChars(']');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars(']]');\r\n                this.state = State.CDATA_SECTION;\r\n                this._stateCdataSection(cp);\r\n            }\r\n        }\r\n    }\r\n    // Character reference state\r\n    //------------------------------------------------------------------\r\n    _stateCharacterReference() {\r\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\r\n        if (length < 0) {\r\n            if (this.preprocessor.lastChunkWritten) {\r\n                length = this.entityDecoder.end();\r\n            }\r\n            else {\r\n                // Wait for the rest of the entity.\r\n                this.active = false;\r\n                // Mark the entire buffer as read.\r\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\r\n                this.consumedAfterSnapshot = 0;\r\n                this.preprocessor.endOfChunkHit = true;\r\n                return;\r\n            }\r\n        }\r\n        if (length === 0) {\r\n            // This was not a valid entity. Go back to the beginning, and\r\n            // figure out what to do.\r\n            this.preprocessor.pos = this.entityStartPos;\r\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\r\n            this.state =\r\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\r\n                    ? State.AMBIGUOUS_AMPERSAND\r\n                    : this.returnState;\r\n        }\r\n        else {\r\n            // We successfully parsed an entity. Switch to the return state.\r\n            this.state = this.returnState;\r\n        }\r\n    }\r\n    // Ambiguos ampersand state\r\n    //------------------------------------------------------------------\r\n    _stateAmbiguousAmpersand(cp) {\r\n        if (isAsciiAlphaNumeric(cp)) {\r\n            this._flushCodePointConsumedAsCharacterReference(cp);\r\n        }\r\n        else {\r\n            if (cp === $.SEMICOLON) {\r\n                this._err(ERR.unknownNamedCharacterReference);\r\n            }\r\n            this.state = this.returnState;\r\n            this._callState(cp);\r\n        }\r\n    }\r\n}\r\n", "import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\r\n//Element utils\r\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\r\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\r\n    ...IMPLICIT_END_TAG_REQUIRED,\r\n    $.CAPTION,\r\n    $.COLGROUP,\r\n    $.TBODY,\r\n    $.TD,\r\n    $.TFOOT,\r\n    $.TH,\r\n    $.THEAD,\r\n    $.TR,\r\n]);\r\nconst SCOPING_ELEMENTS_HTML = new Set([\r\n    $.APPLET,\r\n    $.CAPTION,\r\n    $.HTML,\r\n    $.MARQUEE,\r\n    $.OBJECT,\r\n    $.TABLE,\r\n    $.TD,\r\n    $.TEMPLATE,\r\n    $.TH,\r\n]);\r\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\r\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\r\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\r\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\r\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\r\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\r\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\r\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\r\n//Stack of open elements\r\nexport class OpenElementStack {\r\n    get currentTmplContentOrNode() {\r\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\r\n    }\r\n    constructor(document, treeAdapter, handler) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.handler = handler;\r\n        this.items = [];\r\n        this.tagIDs = [];\r\n        this.stackTop = -1;\r\n        this.tmplCount = 0;\r\n        this.currentTagId = $.UNKNOWN;\r\n        this.current = document;\r\n    }\r\n    //Index of element\r\n    _indexOf(element) {\r\n        return this.items.lastIndexOf(element, this.stackTop);\r\n    }\r\n    //Update current element\r\n    _isInTemplate() {\r\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\r\n    }\r\n    _updateCurrentElement() {\r\n        this.current = this.items[this.stackTop];\r\n        this.currentTagId = this.tagIDs[this.stackTop];\r\n    }\r\n    //Mutations\r\n    push(element, tagID) {\r\n        this.stackTop++;\r\n        this.items[this.stackTop] = element;\r\n        this.current = element;\r\n        this.tagIDs[this.stackTop] = tagID;\r\n        this.currentTagId = tagID;\r\n        if (this._isInTemplate()) {\r\n            this.tmplCount++;\r\n        }\r\n        this.handler.onItemPush(element, tagID, true);\r\n    }\r\n    pop() {\r\n        const popped = this.current;\r\n        if (this.tmplCount > 0 && this._isInTemplate()) {\r\n            this.tmplCount--;\r\n        }\r\n        this.stackTop--;\r\n        this._updateCurrentElement();\r\n        this.handler.onItemPop(popped, true);\r\n    }\r\n    replace(oldElement, newElement) {\r\n        const idx = this._indexOf(oldElement);\r\n        this.items[idx] = newElement;\r\n        if (idx === this.stackTop) {\r\n            this.current = newElement;\r\n        }\r\n    }\r\n    insertAfter(referenceElement, newElement, newElementID) {\r\n        const insertionIdx = this._indexOf(referenceElement) + 1;\r\n        this.items.splice(insertionIdx, 0, newElement);\r\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\r\n        this.stackTop++;\r\n        if (insertionIdx === this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\r\n    }\r\n    popUntilTagNamePopped(tagName) {\r\n        let targetIdx = this.stackTop + 1;\r\n        do {\r\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\r\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\r\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\r\n    }\r\n    shortenToLength(idx) {\r\n        while (this.stackTop >= idx) {\r\n            const popped = this.current;\r\n            if (this.tmplCount > 0 && this._isInTemplate()) {\r\n                this.tmplCount -= 1;\r\n            }\r\n            this.stackTop--;\r\n            this._updateCurrentElement();\r\n            this.handler.onItemPop(popped, this.stackTop < idx);\r\n        }\r\n    }\r\n    popUntilElementPopped(element) {\r\n        const idx = this._indexOf(element);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilPopped(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilNumberedHeaderPopped() {\r\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\r\n    }\r\n    popUntilTableCellPopped() {\r\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\r\n    }\r\n    popAllUpToHtmlElement() {\r\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\r\n        //we perform this fast stack clean up.\r\n        this.tmplCount = 0;\r\n        this.shortenToLength(1);\r\n    }\r\n    _indexOfTagNames(tagNames, namespace) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    clearBackTo(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx + 1);\r\n    }\r\n    clearBackToTableContext() {\r\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableBodyContext() {\r\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableRowContext() {\r\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\r\n    }\r\n    remove(element) {\r\n        const idx = this._indexOf(element);\r\n        if (idx >= 0) {\r\n            if (idx === this.stackTop) {\r\n                this.pop();\r\n            }\r\n            else {\r\n                this.items.splice(idx, 1);\r\n                this.tagIDs.splice(idx, 1);\r\n                this.stackTop--;\r\n                this._updateCurrentElement();\r\n                this.handler.onItemPop(element, false);\r\n            }\r\n        }\r\n    }\r\n    //Search\r\n    tryPeekProperlyNestedBodyElement() {\r\n        //Properly nested <body> element (should be second element in stack).\r\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\r\n    }\r\n    contains(element) {\r\n        return this._indexOf(element) > -1;\r\n    }\r\n    getCommonAncestor(element) {\r\n        const elementIdx = this._indexOf(element) - 1;\r\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\r\n    }\r\n    isRootHtmlElementCurrent() {\r\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\r\n    }\r\n    //Element in scope\r\n    hasInDynamicScope(tagName, htmlScope) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\r\n                case NS.HTML: {\r\n                    if (tn === tagName)\r\n                        return true;\r\n                    if (htmlScope.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n                case NS.SVG: {\r\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n                case NS.MATHML: {\r\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInScope(tagName) {\r\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\r\n    }\r\n    hasInListItemScope(tagName) {\r\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\r\n    }\r\n    hasInButtonScope(tagName) {\r\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\r\n    }\r\n    hasNumberedHeaderInScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\r\n                case NS.HTML: {\r\n                    if (NUMBERED_HEADERS.has(tn))\r\n                        return true;\r\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n                case NS.SVG: {\r\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n                case NS.MATHML: {\r\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\r\n                        return false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInTableScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\r\n                continue;\r\n            }\r\n            switch (this.tagIDs[i]) {\r\n                case tagName: {\r\n                    return true;\r\n                }\r\n                case $.TABLE:\r\n                case $.HTML: {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasTableBodyContextInTableScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\r\n                continue;\r\n            }\r\n            switch (this.tagIDs[i]) {\r\n                case $.TBODY:\r\n                case $.THEAD:\r\n                case $.TFOOT: {\r\n                    return true;\r\n                }\r\n                case $.TABLE:\r\n                case $.HTML: {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInSelectScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\r\n                continue;\r\n            }\r\n            switch (this.tagIDs[i]) {\r\n                case tagName: {\r\n                    return true;\r\n                }\r\n                case $.OPTION:\r\n                case $.OPTGROUP: {\r\n                    break;\r\n                }\r\n                default: {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    //Implied end tags\r\n    generateImpliedEndTags() {\r\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsThoroughly() {\r\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsWithExclusion(exclusionId) {\r\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n}\r\n", "//Const\r\nconst NOAH_ARK_CAPACITY = 3;\r\nexport var EntryType;\r\n(function (EntryType) {\r\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\r\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\r\n})(EntryType || (EntryType = {}));\r\nconst MARKER = { type: EntryType.Marker };\r\n//List of formatting elements\r\nexport class FormattingElementList {\r\n    constructor(treeAdapter) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.entries = [];\r\n        this.bookmark = null;\r\n    }\r\n    //Noah Ark's condition\r\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\r\n    //lightweight heuristics without thorough attributes check.\r\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\r\n        const candidates = [];\r\n        const neAttrsLength = neAttrs.length;\r\n        const neTagName = this.treeAdapter.getTagName(newElement);\r\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\r\n        for (let i = 0; i < this.entries.length; i++) {\r\n            const entry = this.entries[i];\r\n            if (entry.type === EntryType.Marker) {\r\n                break;\r\n            }\r\n            const { element } = entry;\r\n            if (this.treeAdapter.getTagName(element) === neTagName &&\r\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\r\n                const elementAttrs = this.treeAdapter.getAttrList(element);\r\n                if (elementAttrs.length === neAttrsLength) {\r\n                    candidates.push({ idx: i, attrs: elementAttrs });\r\n                }\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n    _ensureNoahArkCondition(newElement) {\r\n        if (this.entries.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\r\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\r\n        if (candidates.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\r\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\r\n        let validCandidates = 0;\r\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\r\n        for (let i = 0; i < candidates.length; i++) {\r\n            const candidate = candidates[i];\r\n            // We know that `candidate.attrs.length === neAttrs.length`\r\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\r\n                validCandidates += 1;\r\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\r\n                    this.entries.splice(candidate.idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Mutations\r\n    insertMarker() {\r\n        this.entries.unshift(MARKER);\r\n    }\r\n    pushElement(element, token) {\r\n        this._ensureNoahArkCondition(element);\r\n        this.entries.unshift({\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    insertElementAfterBookmark(element, token) {\r\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\r\n        this.entries.splice(bookmarkIdx, 0, {\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    removeEntry(entry) {\r\n        const entryIndex = this.entries.indexOf(entry);\r\n        if (entryIndex >= 0) {\r\n            this.entries.splice(entryIndex, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the list of formatting elements up to the last marker.\r\n     *\r\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\r\n     */\r\n    clearToLastMarker() {\r\n        const markerIdx = this.entries.indexOf(MARKER);\r\n        if (markerIdx >= 0) {\r\n            this.entries.splice(0, markerIdx + 1);\r\n        }\r\n        else {\r\n            this.entries.length = 0;\r\n        }\r\n    }\r\n    //Search\r\n    getElementEntryInScopeWithTagName(tagName) {\r\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\r\n        return entry && entry.type === EntryType.Element ? entry : null;\r\n    }\r\n    getElementEntry(element) {\r\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\r\n    }\r\n}\r\n", "import { DOCUMENT_MODE } from '../common/html.js';\r\nexport const defaultTreeAdapter = {\r\n    //Node construction\r\n    createDocument() {\r\n        return {\r\n            nodeName: '#document',\r\n            mode: DOCUMENT_MODE.NO_QUIRKS,\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createDocumentFragment() {\r\n        return {\r\n            nodeName: '#document-fragment',\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createElement(tagName, namespaceURI, attrs) {\r\n        return {\r\n            nodeName: tagName,\r\n            tagName,\r\n            attrs,\r\n            namespaceURI,\r\n            childNodes: [],\r\n            parentNode: null,\r\n        };\r\n    },\r\n    createCommentNode(data) {\r\n        return {\r\n            nodeName: '#comment',\r\n            data,\r\n            parentNode: null,\r\n        };\r\n    },\r\n    createTextNode(value) {\r\n        return {\r\n            nodeName: '#text',\r\n            value,\r\n            parentNode: null,\r\n        };\r\n    },\r\n    //Tree mutation\r\n    appendChild(parentNode, newNode) {\r\n        parentNode.childNodes.push(newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    insertBefore(parentNode, newNode, referenceNode) {\r\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\r\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    setTemplateContent(templateElement, contentElement) {\r\n        templateElement.content = contentElement;\r\n    },\r\n    getTemplateContent(templateElement) {\r\n        return templateElement.content;\r\n    },\r\n    setDocumentType(document, name, publicId, systemId) {\r\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\r\n        if (doctypeNode) {\r\n            doctypeNode.name = name;\r\n            doctypeNode.publicId = publicId;\r\n            doctypeNode.systemId = systemId;\r\n        }\r\n        else {\r\n            const node = {\r\n                nodeName: '#documentType',\r\n                name,\r\n                publicId,\r\n                systemId,\r\n                parentNode: null,\r\n            };\r\n            defaultTreeAdapter.appendChild(document, node);\r\n        }\r\n    },\r\n    setDocumentMode(document, mode) {\r\n        document.mode = mode;\r\n    },\r\n    getDocumentMode(document) {\r\n        return document.mode;\r\n    },\r\n    detachNode(node) {\r\n        if (node.parentNode) {\r\n            const idx = node.parentNode.childNodes.indexOf(node);\r\n            node.parentNode.childNodes.splice(idx, 1);\r\n            node.parentNode = null;\r\n        }\r\n    },\r\n    insertText(parentNode, text) {\r\n        if (parentNode.childNodes.length > 0) {\r\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\r\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\r\n                prevNode.value += text;\r\n                return;\r\n            }\r\n        }\r\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\r\n    },\r\n    insertTextBefore(parentNode, text, referenceNode) {\r\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\r\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\r\n            prevNode.value += text;\r\n        }\r\n        else {\r\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\r\n        }\r\n    },\r\n    adoptAttributes(recipient, attrs) {\r\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\r\n        for (let j = 0; j < attrs.length; j++) {\r\n            if (!recipientAttrsMap.has(attrs[j].name)) {\r\n                recipient.attrs.push(attrs[j]);\r\n            }\r\n        }\r\n    },\r\n    //Tree traversing\r\n    getFirstChild(node) {\r\n        return node.childNodes[0];\r\n    },\r\n    getChildNodes(node) {\r\n        return node.childNodes;\r\n    },\r\n    getParentNode(node) {\r\n        return node.parentNode;\r\n    },\r\n    getAttrList(element) {\r\n        return element.attrs;\r\n    },\r\n    //Node data\r\n    getTagName(element) {\r\n        return element.tagName;\r\n    },\r\n    getNamespaceURI(element) {\r\n        return element.namespaceURI;\r\n    },\r\n    getTextNodeContent(textNode) {\r\n        return textNode.value;\r\n    },\r\n    getCommentNodeContent(commentNode) {\r\n        return commentNode.data;\r\n    },\r\n    getDocumentTypeNodeName(doctypeNode) {\r\n        return doctypeNode.name;\r\n    },\r\n    getDocumentTypeNodePublicId(doctypeNode) {\r\n        return doctypeNode.publicId;\r\n    },\r\n    getDocumentTypeNodeSystemId(doctypeNode) {\r\n        return doctypeNode.systemId;\r\n    },\r\n    //Node types\r\n    isTextNode(node) {\r\n        return node.nodeName === '#text';\r\n    },\r\n    isCommentNode(node) {\r\n        return node.nodeName === '#comment';\r\n    },\r\n    isDocumentTypeNode(node) {\r\n        return node.nodeName === '#documentType';\r\n    },\r\n    isElementNode(node) {\r\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\r\n    },\r\n    // Source code location\r\n    setNodeSourceCodeLocation(node, location) {\r\n        node.sourceCodeLocation = location;\r\n    },\r\n    getNodeSourceCodeLocation(node) {\r\n        return node.sourceCodeLocation;\r\n    },\r\n    updateNodeSourceCodeLocation(node, endLocation) {\r\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\r\n    },\r\n};\r\n", "import { DOCUMENT_MODE } from './html.js';\r\n//Const\r\nconst VALID_DOCTYPE_NAME = 'html';\r\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\r\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\r\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\r\n    '+//silmaril//dtd html pro v0r11 19970101//',\r\n    '-//as//dtd html 3.0 aswedit + extensions//',\r\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\r\n    '-//ietf//dtd html 2.0 level 1//',\r\n    '-//ietf//dtd html 2.0 level 2//',\r\n    '-//ietf//dtd html 2.0 strict level 1//',\r\n    '-//ietf//dtd html 2.0 strict level 2//',\r\n    '-//ietf//dtd html 2.0 strict//',\r\n    '-//ietf//dtd html 2.0//',\r\n    '-//ietf//dtd html 2.1e//',\r\n    '-//ietf//dtd html 3.0//',\r\n    '-//ietf//dtd html 3.2 final//',\r\n    '-//ietf//dtd html 3.2//',\r\n    '-//ietf//dtd html 3//',\r\n    '-//ietf//dtd html level 0//',\r\n    '-//ietf//dtd html level 1//',\r\n    '-//ietf//dtd html level 2//',\r\n    '-//ietf//dtd html level 3//',\r\n    '-//ietf//dtd html strict level 0//',\r\n    '-//ietf//dtd html strict level 1//',\r\n    '-//ietf//dtd html strict level 2//',\r\n    '-//ietf//dtd html strict level 3//',\r\n    '-//ietf//dtd html strict//',\r\n    '-//ietf//dtd html//',\r\n    '-//metrius//dtd metrius presentational//',\r\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 2.0 html//',\r\n    '-//microsoft//dtd internet explorer 2.0 tables//',\r\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 3.0 html//',\r\n    '-//microsoft//dtd internet explorer 3.0 tables//',\r\n    '-//netscape comm. corp.//dtd html//',\r\n    '-//netscape comm. corp.//dtd strict html//',\r\n    \"-//o'reilly and associates//dtd html 2.0//\",\r\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\r\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\r\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\r\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\r\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\r\n    '-//spyglass//dtd html 2.0 extended//',\r\n    '-//sun microsystems corp.//dtd hotjava html//',\r\n    '-//sun microsystems corp.//dtd hotjava strict html//',\r\n    '-//w3c//dtd html 3 1995-03-24//',\r\n    '-//w3c//dtd html 3.2 draft//',\r\n    '-//w3c//dtd html 3.2 final//',\r\n    '-//w3c//dtd html 3.2//',\r\n    '-//w3c//dtd html 3.2s draft//',\r\n    '-//w3c//dtd html 4.0 frameset//',\r\n    '-//w3c//dtd html 4.0 transitional//',\r\n    '-//w3c//dtd html experimental 19960712//',\r\n    '-//w3c//dtd html experimental 970421//',\r\n    '-//w3c//dtd w3 html//',\r\n    '-//w3o//dtd w3 html 3.0//',\r\n    '-//webtechs//dtd mozilla html 2.0//',\r\n    '-//webtechs//dtd mozilla html//',\r\n];\r\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\r\n    '-//w3o//dtd w3 html strict 3.0//en//',\r\n    '-/w3c/dtd html 4.0 transitional/en',\r\n    'html',\r\n]);\r\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\r\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\n//Utils\r\nfunction hasPrefix(publicId, prefixes) {\r\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\r\n}\r\n//API\r\nexport function isConforming(token) {\r\n    return (token.name === VALID_DOCTYPE_NAME &&\r\n        token.publicId === null &&\r\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\r\n}\r\nexport function getDocumentMode(token) {\r\n    if (token.name !== VALID_DOCTYPE_NAME) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    const { systemId } = token;\r\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    let { publicId } = token;\r\n    if (publicId !== null) {\r\n        publicId = publicId.toLowerCase();\r\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        prefixes =\r\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\r\n        }\r\n    }\r\n    return DOCUMENT_MODE.NO_QUIRKS;\r\n}\r\n", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\r\n//MIME types\r\nconst MIME_TYPES = {\r\n    TEXT_HTML: 'text/html',\r\n    APPLICATION_XML: 'application/xhtml+xml',\r\n};\r\n//Attributes\r\nconst DEFINITION_URL_ATTR = 'definitionurl';\r\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\r\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    'attributeName',\r\n    'attributeType',\r\n    'baseFrequency',\r\n    'baseProfile',\r\n    'calcMode',\r\n    'clipPathUnits',\r\n    'diffuseConstant',\r\n    'edgeMode',\r\n    'filterUnits',\r\n    'glyphRef',\r\n    'gradientTransform',\r\n    'gradientUnits',\r\n    'kernelMatrix',\r\n    'kernelUnitLength',\r\n    'keyPoints',\r\n    'keySplines',\r\n    'keyTimes',\r\n    'lengthAdjust',\r\n    'limitingConeAngle',\r\n    'markerHeight',\r\n    'markerUnits',\r\n    'markerWidth',\r\n    'maskContentUnits',\r\n    'maskUnits',\r\n    'numOctaves',\r\n    'pathLength',\r\n    'patternContentUnits',\r\n    'patternTransform',\r\n    'patternUnits',\r\n    'pointsAtX',\r\n    'pointsAtY',\r\n    'pointsAtZ',\r\n    'preserveAlpha',\r\n    'preserveAspectRatio',\r\n    'primitiveUnits',\r\n    'refX',\r\n    'refY',\r\n    'repeatCount',\r\n    'repeatDur',\r\n    'requiredExtensions',\r\n    'requiredFeatures',\r\n    'specularConstant',\r\n    'specularExponent',\r\n    'spreadMethod',\r\n    'startOffset',\r\n    'stdDeviation',\r\n    'stitchTiles',\r\n    'surfaceScale',\r\n    'systemLanguage',\r\n    'tableValues',\r\n    'targetX',\r\n    'targetY',\r\n    'textLength',\r\n    'viewBox',\r\n    'viewTarget',\r\n    'xChannelSelector',\r\n    'yChannelSelector',\r\n    'zoomAndPan',\r\n].map((attr) => [attr.toLowerCase(), attr]));\r\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\r\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\r\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\r\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\r\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\r\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\r\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\r\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\r\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\r\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\r\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\r\n]);\r\n//SVG tag names adjustment map\r\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\r\n    'altGlyph',\r\n    'altGlyphDef',\r\n    'altGlyphItem',\r\n    'animateColor',\r\n    'animateMotion',\r\n    'animateTransform',\r\n    'clipPath',\r\n    'feBlend',\r\n    'feColorMatrix',\r\n    'feComponentTransfer',\r\n    'feComposite',\r\n    'feConvolveMatrix',\r\n    'feDiffuseLighting',\r\n    'feDisplacementMap',\r\n    'feDistantLight',\r\n    'feFlood',\r\n    'feFuncA',\r\n    'feFuncB',\r\n    'feFuncG',\r\n    'feFuncR',\r\n    'feGaussianBlur',\r\n    'feImage',\r\n    'feMerge',\r\n    'feMergeNode',\r\n    'feMorphology',\r\n    'feOffset',\r\n    'fePointLight',\r\n    'feSpecularLighting',\r\n    'feSpotLight',\r\n    'feTile',\r\n    'feTurbulence',\r\n    'foreignObject',\r\n    'glyphRef',\r\n    'linearGradient',\r\n    'radialGradient',\r\n    'textPath',\r\n].map((tn) => [tn.toLowerCase(), tn]));\r\n//Tags that causes exit from foreign content\r\nconst EXITS_FOREIGN_CONTENT = new Set([\r\n    $.B,\r\n    $.BIG,\r\n    $.BLOCKQUOTE,\r\n    $.BODY,\r\n    $.BR,\r\n    $.CENTER,\r\n    $.CODE,\r\n    $.DD,\r\n    $.DIV,\r\n    $.DL,\r\n    $.DT,\r\n    $.EM,\r\n    $.EMBED,\r\n    $.H1,\r\n    $.H2,\r\n    $.H3,\r\n    $.H4,\r\n    $.H5,\r\n    $.H6,\r\n    $.HEAD,\r\n    $.HR,\r\n    $.I,\r\n    $.IMG,\r\n    $.LI,\r\n    $.LISTING,\r\n    $.MENU,\r\n    $.META,\r\n    $.NOBR,\r\n    $.OL,\r\n    $.P,\r\n    $.PRE,\r\n    $.RUBY,\r\n    $.S,\r\n    $.SMALL,\r\n    $.SPAN,\r\n    $.STRONG,\r\n    $.STRIKE,\r\n    $.SUB,\r\n    $.SUP,\r\n    $.TABLE,\r\n    $.TT,\r\n    $.U,\r\n    $.UL,\r\n    $.VAR,\r\n]);\r\n//Check exit from foreign content\r\nexport function causesExit(startTagToken) {\r\n    const tn = startTagToken.tagID;\r\n    const isFontWithAttrs = tn === $.FONT &&\r\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\r\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\r\n}\r\n//Token adjustments\r\nexport function adjustTokenMathMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\r\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\r\n            break;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenSVGAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrName != null) {\r\n            token.attrs[i].name = adjustedAttrName;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenXMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrEntry) {\r\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\r\n            token.attrs[i].name = adjustedAttrEntry.name;\r\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\r\n        }\r\n    }\r\n}\r\nexport function adjustTokenSVGTagName(token) {\r\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\r\n    if (adjustedTagName != null) {\r\n        token.tagName = adjustedTagName;\r\n        token.tagID = getTagID(token.tagName);\r\n    }\r\n}\r\n//Integration points\r\nfunction isMathMLTextIntegrationPoint(tn, ns) {\r\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\r\n}\r\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\r\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === ATTRS.ENCODING) {\r\n                const value = attrs[i].value.toLowerCase();\r\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\r\n            }\r\n        }\r\n    }\r\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\r\n}\r\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\r\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\r\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\r\n}\r\n", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\r\nimport { OpenElementStack } from './open-element-stack.js';\r\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\r\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\r\nimport * as doctype from '../common/doctype.js';\r\nimport * as foreignContent from '../common/foreign-content.js';\r\nimport { ERR } from '../common/error-codes.js';\r\nimport * as unicode from '../common/unicode.js';\r\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\r\nimport { TokenType, getTokenAttr, } from '../common/token.js';\r\n//Misc constants\r\nconst HIDDEN_INPUT_TYPE = 'hidden';\r\n//Adoption agency loops iteration count\r\nconst AA_OUTER_LOOP_ITER = 8;\r\nconst AA_INNER_LOOP_ITER = 3;\r\n//Insertion modes\r\nvar InsertionMode;\r\n(function (InsertionMode) {\r\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\r\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\r\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\r\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\r\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\r\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\r\n})(InsertionMode || (InsertionMode = {}));\r\nconst BASE_LOC = {\r\n    startLine: -1,\r\n    startCol: -1,\r\n    startOffset: -1,\r\n    endLine: -1,\r\n    endCol: -1,\r\n    endOffset: -1,\r\n};\r\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\r\nconst defaultParserOptions = {\r\n    scriptingEnabled: true,\r\n    sourceCodeLocationInfo: false,\r\n    treeAdapter: defaultTreeAdapter,\r\n    onParseError: null,\r\n};\r\n//Parser\r\nexport class Parser {\r\n    constructor(options, document, \r\n    /** @internal */\r\n    fragmentContext = null, \r\n    /** @internal */\r\n    scriptHandler = null) {\r\n        this.fragmentContext = fragmentContext;\r\n        this.scriptHandler = scriptHandler;\r\n        this.currentToken = null;\r\n        this.stopped = false;\r\n        /** @internal */\r\n        this.insertionMode = InsertionMode.INITIAL;\r\n        /** @internal */\r\n        this.originalInsertionMode = InsertionMode.INITIAL;\r\n        /** @internal */\r\n        this.headElement = null;\r\n        /** @internal */\r\n        this.formElement = null;\r\n        /** Indicates that the current node is not an element in the HTML namespace */\r\n        this.currentNotInHTML = false;\r\n        /**\r\n         * The template insertion mode stack is maintained from the left.\r\n         * Ie. the topmost element will always have index 0.\r\n         *\r\n         * @internal\r\n         */\r\n        this.tmplInsertionModeStack = [];\r\n        /** @internal */\r\n        this.pendingCharacterTokens = [];\r\n        /** @internal */\r\n        this.hasNonWhitespacePendingCharacterToken = false;\r\n        /** @internal */\r\n        this.framesetOk = true;\r\n        /** @internal */\r\n        this.skipNextNewLine = false;\r\n        /** @internal */\r\n        this.fosterParentingEnabled = false;\r\n        this.options = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        this.treeAdapter = this.options.treeAdapter;\r\n        this.onParseError = this.options.onParseError;\r\n        // Always enable location info if we report parse errors.\r\n        if (this.onParseError) {\r\n            this.options.sourceCodeLocationInfo = true;\r\n        }\r\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\r\n        this.tokenizer = new Tokenizer(this.options, this);\r\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\r\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\r\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\r\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\r\n    }\r\n    // API\r\n    static parse(html, options) {\r\n        const parser = new this(options);\r\n        parser.tokenizer.write(html, true);\r\n        return parser.document;\r\n    }\r\n    static getFragmentParser(fragmentContext, options) {\r\n        const opts = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\r\n        //so we will parse in a \"forgiving\" manner\r\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\r\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\r\n        //This is important for jsdom, where a new `document` cannot be created. This led to\r\n        //fragment parsing messing with the main `document`.\r\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\r\n        const parser = new this(opts, documentMock, fragmentContext);\r\n        if (parser.fragmentContextID === $.TEMPLATE) {\r\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n        }\r\n        parser._initTokenizerForFragmentParsing();\r\n        parser._insertFakeRootElement();\r\n        parser._resetInsertionMode();\r\n        parser._findFormInFragmentContext();\r\n        return parser;\r\n    }\r\n    getFragment() {\r\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\r\n        const fragment = this.treeAdapter.createDocumentFragment();\r\n        this._adoptNodes(rootElement, fragment);\r\n        return fragment;\r\n    }\r\n    //Errors\r\n    /** @internal */\r\n    _err(token, code, beforeToken) {\r\n        var _a;\r\n        if (!this.onParseError)\r\n            return;\r\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\r\n        const err = {\r\n            code,\r\n            startLine: loc.startLine,\r\n            startCol: loc.startCol,\r\n            startOffset: loc.startOffset,\r\n            endLine: beforeToken ? loc.startLine : loc.endLine,\r\n            endCol: beforeToken ? loc.startCol : loc.endCol,\r\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\r\n        };\r\n        this.onParseError(err);\r\n    }\r\n    //Stack events\r\n    /** @internal */\r\n    onItemPush(node, tid, isTop) {\r\n        var _a, _b;\r\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\r\n        if (isTop && this.openElements.stackTop > 0)\r\n            this._setContextModes(node, tid);\r\n    }\r\n    /** @internal */\r\n    onItemPop(node, isTop) {\r\n        var _a, _b;\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this._setEndLocation(node, this.currentToken);\r\n        }\r\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\r\n        if (isTop) {\r\n            let current;\r\n            let currentTagId;\r\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n                current = this.fragmentContext;\r\n                currentTagId = this.fragmentContextID;\r\n            }\r\n            else {\r\n                ({ current, currentTagId } = this.openElements);\r\n            }\r\n            this._setContextModes(current, currentTagId);\r\n        }\r\n    }\r\n    _setContextModes(current, tid) {\r\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\r\n        this.currentNotInHTML = !isHTML;\r\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\r\n    }\r\n    /** @protected */\r\n    _switchToTextParsing(currentToken, nextTokenizerState) {\r\n        this._insertElement(currentToken, NS.HTML);\r\n        this.tokenizer.state = nextTokenizerState;\r\n        this.originalInsertionMode = this.insertionMode;\r\n        this.insertionMode = InsertionMode.TEXT;\r\n    }\r\n    switchToPlaintextParsing() {\r\n        this.insertionMode = InsertionMode.TEXT;\r\n        this.originalInsertionMode = InsertionMode.IN_BODY;\r\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n    }\r\n    //Fragment parsing\r\n    /** @protected */\r\n    _getAdjustedCurrentElement() {\r\n        return this.openElements.stackTop === 0 && this.fragmentContext\r\n            ? this.fragmentContext\r\n            : this.openElements.current;\r\n    }\r\n    /** @protected */\r\n    _findFormInFragmentContext() {\r\n        let node = this.fragmentContext;\r\n        while (node) {\r\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\r\n                this.formElement = node;\r\n                break;\r\n            }\r\n            node = this.treeAdapter.getParentNode(node);\r\n        }\r\n    }\r\n    _initTokenizerForFragmentParsing() {\r\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\r\n            return;\r\n        }\r\n        switch (this.fragmentContextID) {\r\n            case $.TITLE:\r\n            case $.TEXTAREA: {\r\n                this.tokenizer.state = TokenizerMode.RCDATA;\r\n                break;\r\n            }\r\n            case $.STYLE:\r\n            case $.XMP:\r\n            case $.IFRAME:\r\n            case $.NOEMBED:\r\n            case $.NOFRAMES:\r\n            case $.NOSCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\r\n                break;\r\n            }\r\n            case $.SCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\r\n                break;\r\n            }\r\n            case $.PLAINTEXT: {\r\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    //Tree mutation\r\n    /** @protected */\r\n    _setDocumentType(token) {\r\n        const name = token.name || '';\r\n        const publicId = token.publicId || '';\r\n        const systemId = token.systemId || '';\r\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\r\n        if (token.location) {\r\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\r\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\r\n            if (docTypeNode) {\r\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\r\n            }\r\n        }\r\n    }\r\n    /** @protected */\r\n    _attachElementToTree(element, location) {\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            const loc = location && {\r\n                ...location,\r\n                startTag: location,\r\n            };\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\r\n        }\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentElement(element);\r\n        }\r\n        else {\r\n            const parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.appendChild(parent, element);\r\n        }\r\n    }\r\n    /**\r\n     * For self-closing tags. Add an element to the tree, but skip adding it\r\n     * to the stack.\r\n     */\r\n    /** @protected */\r\n    _appendElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n    }\r\n    /** @protected */\r\n    _insertElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n        this.openElements.push(element, token.tagID);\r\n    }\r\n    /** @protected */\r\n    _insertFakeElement(tagName, tagID) {\r\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\r\n        this._attachElementToTree(element, null);\r\n        this.openElements.push(element, tagID);\r\n    }\r\n    /** @protected */\r\n    _insertTemplate(token) {\r\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\r\n        const content = this.treeAdapter.createDocumentFragment();\r\n        this.treeAdapter.setTemplateContent(tmpl, content);\r\n        this._attachElementToTree(tmpl, token.location);\r\n        this.openElements.push(tmpl, token.tagID);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\r\n    }\r\n    /** @protected */\r\n    _insertFakeRootElement() {\r\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\r\n        this.treeAdapter.appendChild(this.openElements.current, element);\r\n        this.openElements.push(element, $.HTML);\r\n    }\r\n    /** @protected */\r\n    _appendCommentNode(token, parent) {\r\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\r\n        this.treeAdapter.appendChild(parent, commentNode);\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _insertCharacters(token) {\r\n        let parent;\r\n        let beforeElement;\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\r\n            if (beforeElement) {\r\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\r\n            }\r\n            else {\r\n                this.treeAdapter.insertText(parent, token.chars);\r\n            }\r\n        }\r\n        else {\r\n            parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.insertText(parent, token.chars);\r\n        }\r\n        if (!token.location)\r\n            return;\r\n        const siblings = this.treeAdapter.getChildNodes(parent);\r\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\r\n        const textNode = siblings[textNodeIdx - 1];\r\n        //NOTE: if we have a location assigned by another token, then just update the end position\r\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\r\n        if (tnLoc) {\r\n            const { endLine, endCol, endOffset } = token.location;\r\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\r\n        }\r\n        else if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _adoptNodes(donor, recipient) {\r\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\r\n            this.treeAdapter.detachNode(child);\r\n            this.treeAdapter.appendChild(recipient, child);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _setEndLocation(element, closingToken) {\r\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\r\n            const ctLoc = closingToken.location;\r\n            const tn = this.treeAdapter.getTagName(element);\r\n            const endLoc = \r\n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\r\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\r\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\r\n                ? {\r\n                    endTag: { ...ctLoc },\r\n                    endLine: ctLoc.endLine,\r\n                    endCol: ctLoc.endCol,\r\n                    endOffset: ctLoc.endOffset,\r\n                }\r\n                : {\r\n                    endLine: ctLoc.startLine,\r\n                    endCol: ctLoc.startCol,\r\n                    endOffset: ctLoc.startOffset,\r\n                };\r\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\r\n        }\r\n    }\r\n    //Token processing\r\n    shouldProcessStartTagTokenInForeignContent(token) {\r\n        // Check that neither current === document, or ns === NS.HTML\r\n        if (!this.currentNotInHTML)\r\n            return false;\r\n        let current;\r\n        let currentTagId;\r\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n            current = this.fragmentContext;\r\n            currentTagId = this.fragmentContextID;\r\n        }\r\n        else {\r\n            ({ current, currentTagId } = this.openElements);\r\n        }\r\n        if (token.tagID === $.SVG &&\r\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\r\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\r\n            return false;\r\n        }\r\n        return (\r\n        // Check that `current` is not an integration point for HTML or MathML elements.\r\n        this.tokenizer.inForeignNode ||\r\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\r\n            // integration point.\r\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\r\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\r\n    }\r\n    /** @protected */\r\n    _processToken(token) {\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                this.onCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.NULL_CHARACTER: {\r\n                this.onNullCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.COMMENT: {\r\n                this.onComment(token);\r\n                break;\r\n            }\r\n            case TokenType.DOCTYPE: {\r\n                this.onDoctype(token);\r\n                break;\r\n            }\r\n            case TokenType.START_TAG: {\r\n                this._processStartTag(token);\r\n                break;\r\n            }\r\n            case TokenType.END_TAG: {\r\n                this.onEndTag(token);\r\n                break;\r\n            }\r\n            case TokenType.EOF: {\r\n                this.onEof(token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                this.onWhitespaceCharacter(token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //Integration points\r\n    /** @protected */\r\n    _isIntegrationPoint(tid, element, foreignNS) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        const attrs = this.treeAdapter.getAttrList(element);\r\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\r\n    }\r\n    //Active formatting elements reconstruction\r\n    /** @protected */\r\n    _reconstructActiveFormattingElements() {\r\n        const listLength = this.activeFormattingElements.entries.length;\r\n        if (listLength) {\r\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\r\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\r\n            for (let i = unopenIdx; i >= 0; i--) {\r\n                const entry = this.activeFormattingElements.entries[i];\r\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\r\n                entry.element = this.openElements.current;\r\n            }\r\n        }\r\n    }\r\n    //Close elements\r\n    /** @protected */\r\n    _closeTableCell() {\r\n        this.openElements.generateImpliedEndTags();\r\n        this.openElements.popUntilTableCellPopped();\r\n        this.activeFormattingElements.clearToLastMarker();\r\n        this.insertionMode = InsertionMode.IN_ROW;\r\n    }\r\n    /** @protected */\r\n    _closePElement() {\r\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\r\n        this.openElements.popUntilTagNamePopped($.P);\r\n    }\r\n    //Insertion modes\r\n    /** @protected */\r\n    _resetInsertionMode() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            //Insertion mode reset map\r\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\r\n                case $.TR: {\r\n                    this.insertionMode = InsertionMode.IN_ROW;\r\n                    return;\r\n                }\r\n                case $.TBODY:\r\n                case $.THEAD:\r\n                case $.TFOOT: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                    return;\r\n                }\r\n                case $.CAPTION: {\r\n                    this.insertionMode = InsertionMode.IN_CAPTION;\r\n                    return;\r\n                }\r\n                case $.COLGROUP: {\r\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n                    return;\r\n                }\r\n                case $.TABLE: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE;\r\n                    return;\r\n                }\r\n                case $.BODY: {\r\n                    this.insertionMode = InsertionMode.IN_BODY;\r\n                    return;\r\n                }\r\n                case $.FRAMESET: {\r\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\r\n                    return;\r\n                }\r\n                case $.SELECT: {\r\n                    this._resetInsertionModeForSelect(i);\r\n                    return;\r\n                }\r\n                case $.TEMPLATE: {\r\n                    this.insertionMode = this.tmplInsertionModeStack[0];\r\n                    return;\r\n                }\r\n                case $.HTML: {\r\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\r\n                    return;\r\n                }\r\n                case $.TD:\r\n                case $.TH: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_CELL;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                case $.HEAD: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_HEAD;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_BODY;\r\n    }\r\n    /** @protected */\r\n    _resetInsertionModeForSelect(selectIdx) {\r\n        if (selectIdx > 0) {\r\n            for (let i = selectIdx - 1; i > 0; i--) {\r\n                const tn = this.openElements.tagIDs[i];\r\n                if (tn === $.TEMPLATE) {\r\n                    break;\r\n                }\r\n                else if (tn === $.TABLE) {\r\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_SELECT;\r\n    }\r\n    //Foster parenting\r\n    /** @protected */\r\n    _isElementCausesFosterParenting(tn) {\r\n        return TABLE_STRUCTURE_TAGS.has(tn);\r\n    }\r\n    /** @protected */\r\n    _shouldFosterParentOnInsertion() {\r\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\r\n    }\r\n    /** @protected */\r\n    _findFosterParentingLocation() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            const openElement = this.openElements.items[i];\r\n            switch (this.openElements.tagIDs[i]) {\r\n                case $.TEMPLATE: {\r\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\r\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\r\n                    }\r\n                    break;\r\n                }\r\n                case $.TABLE: {\r\n                    const parent = this.treeAdapter.getParentNode(openElement);\r\n                    if (parent) {\r\n                        return { parent, beforeElement: openElement };\r\n                    }\r\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\r\n                }\r\n                default:\r\n                // Do nothing\r\n            }\r\n        }\r\n        return { parent: this.openElements.items[0], beforeElement: null };\r\n    }\r\n    /** @protected */\r\n    _fosterParentElement(element) {\r\n        const location = this._findFosterParentingLocation();\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\r\n        }\r\n        else {\r\n            this.treeAdapter.appendChild(location.parent, element);\r\n        }\r\n    }\r\n    //Special elements\r\n    /** @protected */\r\n    _isSpecialElement(element, id) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        return SPECIAL_ELEMENTS[ns].has(id);\r\n    }\r\n    /** @internal */\r\n    onCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            characterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                characterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                characterInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onNullCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            nullCharacterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onComment(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.currentNotInHTML) {\r\n            appendComment(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL:\r\n            case InsertionMode.BEFORE_HTML:\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                appendComment(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                appendCommentToRootHtmlElement(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                appendCommentToDocument(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onDoctype(token) {\r\n        this.skipNextNewLine = false;\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                doctypeInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD: {\r\n                this._err(token, ERR.misplacedDoctype);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onStartTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        this._processStartTag(token);\r\n        if (token.selfClosing && !token.ackSelfClosing) {\r\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\r\n        }\r\n    }\r\n    /**\r\n     * Processes a given start tag.\r\n     *\r\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\r\n     * is moved inbetween multiple insertion modes, this check for self-closing\r\n     * could lead to false positives. To avoid this, `_processStartTag` is used\r\n     * for nested calls.\r\n     *\r\n     * @param token The token to process.\r\n     * @protected\r\n     */\r\n    _processStartTag(token) {\r\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\r\n            startTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._startTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _startTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                startTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                startTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                startTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                startTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                startTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                startTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                startTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                startTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                startTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                startTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                startTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                startTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                startTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                startTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                startTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                startTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                startTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                startTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                startTagAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                startTagAfterAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onEndTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        if (this.currentNotInHTML) {\r\n            endTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._endTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _endTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                endTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                endTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                endTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                endTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                endTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                endTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                endTagInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                endTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                endTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                endTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                endTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                endTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                endTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                endTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                endTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                endTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                endTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                endTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                endTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onEof(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                eofInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                eofInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                eofInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                stopParsing(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onWhitespaceCharacter(token) {\r\n        if (this.skipNextNewLine) {\r\n            this.skipNextNewLine = false;\r\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\r\n                if (token.chars.length === 1) {\r\n                    return;\r\n                }\r\n                token.chars = token.chars.substr(1);\r\n            }\r\n        }\r\n        if (this.tokenizer.inForeignNode) {\r\n            this._insertCharacters(token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                whitespaceCharacterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                whitespaceCharacterInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n}\r\n//Adoption agency algorithm\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\r\n//------------------------------------------------------------------\r\n//Steps 5-8 of the algorithm\r\nfunction aaObtainFormattingElementEntry(p, token) {\r\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\r\n    if (formattingElementEntry) {\r\n        if (!p.openElements.contains(formattingElementEntry.element)) {\r\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n            formattingElementEntry = null;\r\n        }\r\n        else if (!p.openElements.hasInScope(token.tagID)) {\r\n            formattingElementEntry = null;\r\n        }\r\n    }\r\n    else {\r\n        genericEndTagInBody(p, token);\r\n    }\r\n    return formattingElementEntry;\r\n}\r\n//Steps 9 and 10 of the algorithm\r\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\r\n    let furthestBlock = null;\r\n    let idx = p.openElements.stackTop;\r\n    for (; idx >= 0; idx--) {\r\n        const element = p.openElements.items[idx];\r\n        if (element === formattingElementEntry.element) {\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\r\n            furthestBlock = element;\r\n        }\r\n    }\r\n    if (!furthestBlock) {\r\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\r\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    }\r\n    return furthestBlock;\r\n}\r\n//Step 13 of the algorithm\r\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\r\n    let lastElement = furthestBlock;\r\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\r\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\r\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\r\n        nextElement = p.openElements.getCommonAncestor(element);\r\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\r\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\r\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\r\n        if (shouldRemoveFromOpenElements) {\r\n            if (counterOverflow) {\r\n                p.activeFormattingElements.removeEntry(elementEntry);\r\n            }\r\n            p.openElements.remove(element);\r\n        }\r\n        else {\r\n            element = aaRecreateElementFromEntry(p, elementEntry);\r\n            if (lastElement === furthestBlock) {\r\n                p.activeFormattingElements.bookmark = elementEntry;\r\n            }\r\n            p.treeAdapter.detachNode(lastElement);\r\n            p.treeAdapter.appendChild(element, lastElement);\r\n            lastElement = element;\r\n        }\r\n    }\r\n    return lastElement;\r\n}\r\n//Step 13.7 of the algorithm\r\nfunction aaRecreateElementFromEntry(p, elementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\r\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\r\n    p.openElements.replace(elementEntry.element, newElement);\r\n    elementEntry.element = newElement;\r\n    return newElement;\r\n}\r\n//Step 14 of the algorithm\r\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\r\n    const tn = p.treeAdapter.getTagName(commonAncestor);\r\n    const tid = getTagID(tn);\r\n    if (p._isElementCausesFosterParenting(tid)) {\r\n        p._fosterParentElement(lastElement);\r\n    }\r\n    else {\r\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\r\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\r\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\r\n        }\r\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\r\n    }\r\n}\r\n//Steps 15-19 of the algorithm\r\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\r\n    const { token } = formattingElementEntry;\r\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\r\n    p._adoptNodes(furthestBlock, newElement);\r\n    p.treeAdapter.appendChild(furthestBlock, newElement);\r\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\r\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    p.openElements.remove(formattingElementEntry.element);\r\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\r\n}\r\n//Algorithm entry point\r\nfunction callAdoptionAgency(p, token) {\r\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\r\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\r\n        if (!formattingElementEntry) {\r\n            break;\r\n        }\r\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\r\n        if (!furthestBlock) {\r\n            break;\r\n        }\r\n        p.activeFormattingElements.bookmark = formattingElementEntry;\r\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\r\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\r\n        p.treeAdapter.detachNode(lastElement);\r\n        if (commonAncestor)\r\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\r\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\r\n    }\r\n}\r\n//Generic token handlers\r\n//------------------------------------------------------------------\r\nfunction appendComment(p, token) {\r\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\r\n}\r\nfunction appendCommentToRootHtmlElement(p, token) {\r\n    p._appendCommentNode(token, p.openElements.items[0]);\r\n}\r\nfunction appendCommentToDocument(p, token) {\r\n    p._appendCommentNode(token, p.document);\r\n}\r\nfunction stopParsing(p, token) {\r\n    p.stopped = true;\r\n    // NOTE: Set end locations for elements that remain on the open element stack.\r\n    if (token.location) {\r\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\r\n        // This is a problem, as we might overwrite their end position here.\r\n        const target = p.fragmentContext ? 0 : 2;\r\n        for (let i = p.openElements.stackTop; i >= target; i--) {\r\n            p._setEndLocation(p.openElements.items[i], token);\r\n        }\r\n        // Handle `html` and `body`\r\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\r\n            const htmlElement = p.openElements.items[0];\r\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\r\n            if (htmlLocation && !htmlLocation.endTag) {\r\n                p._setEndLocation(htmlElement, token);\r\n                if (p.openElements.stackTop >= 1) {\r\n                    const bodyElement = p.openElements.items[1];\r\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\r\n                    if (bodyLocation && !bodyLocation.endTag) {\r\n                        p._setEndLocation(bodyElement, token);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// The \"initial\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction doctypeInInitialMode(p, token) {\r\n    p._setDocumentType(token);\r\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\r\n    if (!doctype.isConforming(token)) {\r\n        p._err(token, ERR.nonConformingDoctype);\r\n    }\r\n    p.treeAdapter.setDocumentMode(p.document, mode);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n}\r\nfunction tokenInInitialMode(p, token) {\r\n    p._err(token, ERR.missingDoctype, true);\r\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n    p._processToken(token);\r\n}\r\n// The \"before html\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHtml(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    }\r\n    else {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction endTagBeforeHtml(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction tokenBeforeHtml(p, token) {\r\n    p._insertFakeRootElement();\r\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"before head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.headElement = p.openElements.current;\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        default: {\r\n            tokenBeforeHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagBeforeHead(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\r\n        tokenBeforeHead(p, token);\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenBeforeHead(p, token) {\r\n    p._insertFakeElement(TN.HEAD, $.HEAD);\r\n    p.headElement = p.openElements.current;\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TITLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            }\r\n            else {\r\n                p._insertElement(token, NS.HTML);\r\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\r\n            }\r\n            break;\r\n        }\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            break;\r\n        }\r\n        case $.SCRIPT: {\r\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            p._insertTemplate(token);\r\n            p.activeFormattingElements.insertMarker();\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\r\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HEAD: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.AFTER_HEAD;\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.BR:\r\n        case $.HTML: {\r\n            tokenInHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction templateEndTagInHead(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.generateImpliedEndTagsThoroughly();\r\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\r\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\r\n        }\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenInHead(p, token) {\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.AFTER_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head no script\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.HEAD:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            p._err(token, ERR.nestedNoscriptInHead);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHeadNoScript(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.NOSCRIPT: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            tokenInHeadNoScript(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenInHeadNoScript(p, token) {\r\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\r\n    p._err(token, errCode);\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"after head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_FRAMESET;\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            p._err(token, ERR.abandonedHeadElementChild);\r\n            p.openElements.push(p.headElement, $.HEAD);\r\n            startTagInHead(p, token);\r\n            p.openElements.remove(p.headElement);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenAfterHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.BODY:\r\n        case $.HTML:\r\n        case $.BR: {\r\n            tokenAfterHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenAfterHead(p, token) {\r\n    p._insertFakeElement(TN.BODY, $.BODY);\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction modeInBody(p, token) {\r\n    switch (token.type) {\r\n        case TokenType.CHARACTER: {\r\n            characterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.WHITESPACE_CHARACTER: {\r\n            whitespaceCharacterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.COMMENT: {\r\n            appendComment(p, token);\r\n            break;\r\n        }\r\n        case TokenType.START_TAG: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.END_TAG: {\r\n            endTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.EOF: {\r\n            eofInBody(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction whitespaceCharacterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction htmlStartTagInBody(p, token) {\r\n    if (p.openElements.tmplCount === 0) {\r\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\r\n    }\r\n}\r\nfunction bodyStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (bodyElement && p.openElements.tmplCount === 0) {\r\n        p.framesetOk = false;\r\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\r\n    }\r\n}\r\nfunction framesetStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (p.framesetOk && bodyElement) {\r\n        p.treeAdapter.detachNode(bodyElement);\r\n        p.openElements.popAllUpToHtmlElement();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.IN_FRAMESET;\r\n    }\r\n}\r\nfunction addressStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction numberedHeaderStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\r\n        p.openElements.pop();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction preStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.framesetOk = false;\r\n}\r\nfunction formStartTagInBody(p, token) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    if (!p.formElement || inTemplate) {\r\n        if (p.openElements.hasInButtonScope($.P)) {\r\n            p._closePElement();\r\n        }\r\n        p._insertElement(token, NS.HTML);\r\n        if (!inTemplate) {\r\n            p.formElement = p.openElements.current;\r\n        }\r\n    }\r\n}\r\nfunction listItemStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    const tn = token.tagID;\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const elementId = p.openElements.tagIDs[i];\r\n        if ((tn === $.LI && elementId === $.LI) ||\r\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\r\n            p.openElements.popUntilTagNamePopped(elementId);\r\n            break;\r\n        }\r\n        if (elementId !== $.ADDRESS &&\r\n            elementId !== $.DIV &&\r\n            elementId !== $.P &&\r\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\r\n            break;\r\n        }\r\n    }\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction plaintextStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n}\r\nfunction buttonStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BUTTON)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped($.BUTTON);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n}\r\nfunction aStartTagInBody(p, token) {\r\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\r\n    if (activeElementEntry) {\r\n        callAdoptionAgency(p, token);\r\n        p.openElements.remove(activeElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(activeElementEntry);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction bStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction nobrStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    if (p.openElements.hasInScope($.NOBR)) {\r\n        callAdoptionAgency(p, token);\r\n        p._reconstructActiveFormattingElements();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction appletStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.insertMarker();\r\n    p.framesetOk = false;\r\n}\r\nfunction tableStartTagInBody(p, token) {\r\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.IN_TABLE;\r\n}\r\nfunction areaStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction isHiddenInput(token) {\r\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\r\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\r\n}\r\nfunction inputStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    if (!isHiddenInput(token)) {\r\n        p.framesetOk = false;\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction paramStartTagInBody(p, token) {\r\n    p._appendElement(token, NS.HTML);\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction hrStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction imageStartTagInBody(p, token) {\r\n    token.tagName = TN.IMG;\r\n    token.tagID = $.IMG;\r\n    areaStartTagInBody(p, token);\r\n}\r\nfunction textareaStartTagInBody(p, token) {\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.tokenizer.state = TokenizerMode.RCDATA;\r\n    p.originalInsertionMode = p.insertionMode;\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.TEXT;\r\n}\r\nfunction xmpStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction iframeStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\r\n//<noembed>/<noframes> as rawtext.\r\nfunction rawTextStartTagInBody(p, token) {\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction selectStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode =\r\n        p.insertionMode === InsertionMode.IN_TABLE ||\r\n            p.insertionMode === InsertionMode.IN_CAPTION ||\r\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\r\n            p.insertionMode === InsertionMode.IN_ROW ||\r\n            p.insertionMode === InsertionMode.IN_CELL\r\n            ? InsertionMode.IN_SELECT_IN_TABLE\r\n            : InsertionMode.IN_SELECT;\r\n}\r\nfunction optgroupStartTagInBody(p, token) {\r\n    if (p.openElements.currentTagId === $.OPTION) {\r\n        p.openElements.pop();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rbStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTags();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rtStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction mathStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenMathMLAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.MATHML);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.MATHML);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction svgStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenSVGAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.SVG);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.SVG);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction genericStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction startTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.I:\r\n        case $.S:\r\n        case $.B:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            bStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.A: {\r\n            aStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.P:\r\n        case $.DL:\r\n        case $.OL:\r\n        case $.UL:\r\n        case $.DIV:\r\n        case $.DIR:\r\n        case $.NAV:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.DETAILS:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.SEARCH:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI:\r\n        case $.DD:\r\n        case $.DT: {\r\n            listItemStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BR:\r\n        case $.IMG:\r\n        case $.WBR:\r\n        case $.AREA:\r\n        case $.EMBED:\r\n        case $.KEYGEN: {\r\n            areaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HR: {\r\n            hrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RB:\r\n        case $.RTC: {\r\n            rbStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RT:\r\n        case $.RP: {\r\n            rtStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PRE:\r\n        case $.LISTING: {\r\n            preStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.XMP: {\r\n            xmpStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SVG: {\r\n            svgStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.STYLE:\r\n        case $.TITLE:\r\n        case $.SCRIPT:\r\n        case $.BGSOUND:\r\n        case $.BASEFONT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOBR: {\r\n            nobrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.MATH: {\r\n            mathStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PARAM:\r\n        case $.TRACK:\r\n        case $.SOURCE: {\r\n            paramStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IMAGE: {\r\n            imageStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BUTTON: {\r\n            buttonStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IFRAME: {\r\n            iframeStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            selectStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION:\r\n        case $.OPTGROUP: {\r\n            optgroupStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOEMBED:\r\n        case $.NOFRAMES: {\r\n            rawTextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            framesetStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEXTAREA: {\r\n            textareaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                rawTextStartTagInBody(p, token);\r\n            }\r\n            else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.PLAINTEXT: {\r\n            plaintextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL:\r\n        case $.TH:\r\n        case $.TD:\r\n        case $.TR:\r\n        case $.HEAD:\r\n        case $.FRAME:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.CAPTION:\r\n        case $.COLGROUP: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            genericStartTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction bodyEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        //NOTE: <body> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo) {\r\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n            if (bodyElement) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction htmlEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        endTagAfterBody(p, token);\r\n    }\r\n}\r\nfunction addressEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction formEndTagInBody(p) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    const { formElement } = p;\r\n    if (!inTemplate) {\r\n        p.formElement = null;\r\n    }\r\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        if (inTemplate) {\r\n            p.openElements.popUntilTagNamePopped($.FORM);\r\n        }\r\n        else if (formElement) {\r\n            p.openElements.remove(formElement);\r\n        }\r\n    }\r\n}\r\nfunction pEndTagInBody(p) {\r\n    if (!p.openElements.hasInButtonScope($.P)) {\r\n        p._insertFakeElement(TN.P, $.P);\r\n    }\r\n    p._closePElement();\r\n}\r\nfunction liEndTagInBody(p) {\r\n    if (p.openElements.hasInListItemScope($.LI)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\r\n        p.openElements.popUntilTagNamePopped($.LI);\r\n    }\r\n}\r\nfunction ddEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction numberedHeaderEndTagInBody(p) {\r\n    if (p.openElements.hasNumberedHeaderInScope()) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilNumberedHeaderPopped();\r\n    }\r\n}\r\nfunction appletEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n    }\r\n}\r\nfunction brEndTagInBody(p) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertFakeElement(TN.BR, $.BR);\r\n    p.openElements.pop();\r\n    p.framesetOk = false;\r\n}\r\nfunction genericEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n    const tid = token.tagID;\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        const elementId = p.openElements.tagIDs[i];\r\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\r\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\r\n            if (p.openElements.stackTop >= i)\r\n                p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, elementId)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction endTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.A:\r\n        case $.B:\r\n        case $.I:\r\n        case $.S:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.NOBR:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            callAdoptionAgency(p, token);\r\n            break;\r\n        }\r\n        case $.P: {\r\n            pEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DL:\r\n        case $.UL:\r\n        case $.OL:\r\n        case $.DIR:\r\n        case $.DIV:\r\n        case $.NAV:\r\n        case $.PRE:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.BUTTON:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.DETAILS:\r\n        case $.SEARCH:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.LISTING:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI: {\r\n            liEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DD:\r\n        case $.DT: {\r\n            ddEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            brEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            genericEndTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction eofInBody(p, token) {\r\n    if (p.tmplInsertionModeStack.length > 0) {\r\n        eofInTemplate(p, token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction endTagInText(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.SCRIPT) {\r\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\r\n    }\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n}\r\nfunction eofInText(p, token) {\r\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p.onEof(token);\r\n}\r\n// The \"in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction characterInTable(p, token) {\r\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\r\n        p.pendingCharacterTokens.length = 0;\r\n        p.hasNonWhitespacePendingCharacterToken = false;\r\n        p.originalInsertionMode = p.insertionMode;\r\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                characterInTableText(p, token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                whitespaceCharacterInTableText(p, token);\r\n                break;\r\n            }\r\n            // Ignore null\r\n        }\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\nfunction captionStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p.activeFormattingElements.insertMarker();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_CAPTION;\r\n}\r\nfunction colgroupStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n}\r\nfunction colStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n    startTagInColumnGroup(p, token);\r\n}\r\nfunction tbodyStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n}\r\nfunction tdStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.TBODY, $.TBODY);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n    startTagInTableBody(p, token);\r\n}\r\nfunction tableStartTagInTable(p, token) {\r\n    if (p.openElements.hasInTableScope($.TABLE)) {\r\n        p.openElements.popUntilTagNamePopped($.TABLE);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n}\r\nfunction inputStartTagInTable(p, token) {\r\n    if (isHiddenInput(token)) {\r\n        p._appendElement(token, NS.HTML);\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction formStartTagInTable(p, token) {\r\n    if (!p.formElement && p.openElements.tmplCount === 0) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.formElement = p.openElements.current;\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            tdStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.STYLE:\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            colStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            tbodyStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION: {\r\n            captionStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COLGROUP: {\r\n            colgroupStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TABLE)) {\r\n                p.openElements.popUntilTagNamePopped($.TABLE);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInTable(p, token) {\r\n    const savedFosterParentingState = p.fosterParentingEnabled;\r\n    p.fosterParentingEnabled = true;\r\n    // Process token in `In Body` mode\r\n    modeInBody(p, token);\r\n    p.fosterParentingEnabled = savedFosterParentingState;\r\n}\r\n// The \"in table text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n}\r\nfunction characterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n    p.hasNonWhitespacePendingCharacterToken = true;\r\n}\r\nfunction tokenInTableText(p, token) {\r\n    let i = 0;\r\n    if (p.hasNonWhitespacePendingCharacterToken) {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            tokenInTable(p, p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            p._insertCharacters(p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n// The \"in caption\" insertion mode\r\n//------------------------------------------------------------------\r\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\r\nfunction startTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped($.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.CAPTION:\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.CAPTION)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped($.CAPTION);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                if (tn === $.TABLE) {\r\n                    endTagInTable(p, token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in column group\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.COLGROUP: {\r\n            if (p.openElements.currentTagId === $.COLGROUP) {\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInColumnGroup(p, token) {\r\n    if (p.openElements.currentTagId === $.COLGROUP) {\r\n        p.openElements.pop();\r\n        p.insertionMode = InsertionMode.IN_TABLE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n// The \"in table body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTableBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            break;\r\n        }\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertFakeElement(TN.TR, $.TR);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                startTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTableBody(p, token) {\r\n    const tn = token.tagID;\r\n    switch (token.tagID) {\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                endTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in row\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_CELL;\r\n            p.activeFormattingElements.insertMarker();\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                startTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH: {\r\n            // Ignore end tag\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in cell\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\r\n            p._closeTableCell();\r\n            startTagInRow(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.TD:\r\n        case $.TH: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped(tn);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_ROW;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p._closeTableCell();\r\n                endTagInRow(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in select\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.HR: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.INPUT:\r\n        case $.KEYGEN:\r\n        case $.TEXTAREA:\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n                if (token.tagID !== $.SELECT) {\r\n                    p._processStartTag(token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.stackTop > 0 &&\r\n                p.openElements.currentTagId === $.OPTION &&\r\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The \"in select in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        p.openElements.popUntilTagNamePopped($.SELECT);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n    else {\r\n        startTagInSelect(p, token);\r\n    }\r\n}\r\nfunction endTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.popUntilTagNamePopped($.SELECT);\r\n            p._resetInsertionMode();\r\n            p.onEndTag(token);\r\n        }\r\n    }\r\n    else {\r\n        endTagInSelect(p, token);\r\n    }\r\n}\r\n// The \"in template\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTemplate(p, token) {\r\n    switch (token.tagID) {\r\n        // First, handle tags that can start without a mode change\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Re-process the token in the appropriate mode\r\n        case $.CAPTION:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\r\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n            startTagInColumnGroup(p, token);\r\n            break;\r\n        }\r\n        case $.TR: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\r\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            startTagInTableBody(p, token);\r\n            break;\r\n        }\r\n        case $.TD:\r\n        case $.TH: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            startTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTemplate(p, token) {\r\n    if (token.tagID === $.TEMPLATE) {\r\n        templateEndTagInHead(p, token);\r\n    }\r\n}\r\nfunction eofInTemplate(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n        p.onEof(token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction endTagAfterBody(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.HTML) {\r\n        if (!p.fragmentContext) {\r\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\r\n        }\r\n        //NOTE: <html> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\r\n            p._setEndLocation(p.openElements.items[0], token);\r\n            // Update the body element, if it doesn't have an end tag\r\n            const bodyElement = p.openElements.items[1];\r\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.FRAME: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInFrameset(p, token) {\r\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\r\n        p.openElements.pop();\r\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\r\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\r\n        }\r\n    }\r\n}\r\n// The \"after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagAfterFrameset(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\r\n    }\r\n}\r\n// The \"after after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"after after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The rules for parsing tokens in foreign content\r\n//------------------------------------------------------------------\r\nfunction nullCharacterInForeignContent(p, token) {\r\n    token.chars = unicode.REPLACEMENT_CHARACTER;\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInForeignContent(p, token) {\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction popUntilHtmlOrIntegrationPoint(p) {\r\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\r\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInForeignContent(p, token) {\r\n    if (foreignContent.causesExit(token)) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._startTagOutsideForeignContent(token);\r\n    }\r\n    else {\r\n        const current = p._getAdjustedCurrentElement();\r\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\r\n        if (currentNs === NS.MATHML) {\r\n            foreignContent.adjustTokenMathMLAttrs(token);\r\n        }\r\n        else if (currentNs === NS.SVG) {\r\n            foreignContent.adjustTokenSVGTagName(token);\r\n            foreignContent.adjustTokenSVGAttrs(token);\r\n        }\r\n        foreignContent.adjustTokenXMLAttrs(token);\r\n        if (token.selfClosing) {\r\n            p._appendElement(token, currentNs);\r\n        }\r\n        else {\r\n            p._insertElement(token, currentNs);\r\n        }\r\n        token.ackSelfClosing = true;\r\n    }\r\n}\r\nfunction endTagInForeignContent(p, token) {\r\n    if (token.tagID === $.P || token.tagID === $.BR) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._endTagOutsideForeignContent(token);\r\n        return;\r\n    }\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\r\n            p._endTagOutsideForeignContent(token);\r\n            break;\r\n        }\r\n        const tagName = p.treeAdapter.getTagName(element);\r\n        if (tagName.toLowerCase() === token.tagName) {\r\n            //NOTE: update the token tag name for `_setEndLocation`.\r\n            token.tagName = tagName;\r\n            p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n", null, "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\r\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\r\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\r\n// Sets\r\nconst VOID_ELEMENTS = new Set([\r\n    $.AREA,\r\n    $.BASE,\r\n    $.BASEFONT,\r\n    $.BGSOUND,\r\n    $.BR,\r\n    $.COL,\r\n    $.EMBED,\r\n    $.FRAME,\r\n    $.HR,\r\n    $.IMG,\r\n    $.INPUT,\r\n    $.KEYGEN,\r\n    $.LINK,\r\n    $.META,\r\n    $.PARAM,\r\n    $.SOURCE,\r\n    $.TRACK,\r\n    $.WBR,\r\n]);\r\nfunction isVoidElement(node, options) {\r\n    return (options.treeAdapter.isElementNode(node) &&\r\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\r\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\r\n}\r\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\r\n/**\r\n * Serializes an AST node to an HTML string.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\r\n *\r\n * // Serializes a document.\r\n * const html = parse5.serialize(document);\r\n *\r\n * // Serializes the <html> element content.\r\n * const str = parse5.serialize(document.childNodes[1]);\r\n *\r\n * console.log(str); //> '<head></head><body>Hi there!</body>'\r\n * ```\r\n *\r\n * @param node Node to serialize.\r\n * @param options Serialization options.\r\n */\r\nexport function serialize(node, options) {\r\n    const opts = { ...defaultOpts, ...options };\r\n    if (isVoidElement(node, opts)) {\r\n        return '';\r\n    }\r\n    return serializeChildNodes(node, opts);\r\n}\r\n/**\r\n * Serializes an AST element node to an HTML string, including the element node.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\r\n *\r\n * // Serializes the <div> element.\r\n * const str = parse5.serializeOuter(document.childNodes[0]);\r\n *\r\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\r\n * ```\r\n *\r\n * @param node Node to serialize.\r\n * @param options Serialization options.\r\n */\r\nexport function serializeOuter(node, options) {\r\n    const opts = { ...defaultOpts, ...options };\r\n    return serializeNode(node, opts);\r\n}\r\nfunction serializeChildNodes(parentNode, options) {\r\n    let html = '';\r\n    // Get container of the child nodes\r\n    const container = options.treeAdapter.isElementNode(parentNode) &&\r\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\r\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\r\n        ? options.treeAdapter.getTemplateContent(parentNode)\r\n        : parentNode;\r\n    const childNodes = options.treeAdapter.getChildNodes(container);\r\n    if (childNodes) {\r\n        for (const currentNode of childNodes) {\r\n            html += serializeNode(currentNode, options);\r\n        }\r\n    }\r\n    return html;\r\n}\r\nfunction serializeNode(node, options) {\r\n    if (options.treeAdapter.isElementNode(node)) {\r\n        return serializeElement(node, options);\r\n    }\r\n    if (options.treeAdapter.isTextNode(node)) {\r\n        return serializeTextNode(node, options);\r\n    }\r\n    if (options.treeAdapter.isCommentNode(node)) {\r\n        return serializeCommentNode(node, options);\r\n    }\r\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\r\n        return serializeDocumentTypeNode(node, options);\r\n    }\r\n    // Return an empty string for unknown nodes\r\n    return '';\r\n}\r\nfunction serializeElement(node, options) {\r\n    const tn = options.treeAdapter.getTagName(node);\r\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\r\n}\r\nfunction serializeAttributes(node, { treeAdapter }) {\r\n    let html = '';\r\n    for (const attr of treeAdapter.getAttrList(node)) {\r\n        html += ' ';\r\n        if (attr.namespace) {\r\n            switch (attr.namespace) {\r\n                case NS.XML: {\r\n                    html += `xml:${attr.name}`;\r\n                    break;\r\n                }\r\n                case NS.XMLNS: {\r\n                    if (attr.name !== 'xmlns') {\r\n                        html += 'xmlns:';\r\n                    }\r\n                    html += attr.name;\r\n                    break;\r\n                }\r\n                case NS.XLINK: {\r\n                    html += `xlink:${attr.name}`;\r\n                    break;\r\n                }\r\n                default: {\r\n                    html += `${attr.prefix}:${attr.name}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            html += attr.name;\r\n        }\r\n        html += `=\"${escapeAttribute(attr.value)}\"`;\r\n    }\r\n    return html;\r\n}\r\nfunction serializeTextNode(node, options) {\r\n    const { treeAdapter } = options;\r\n    const content = treeAdapter.getTextNodeContent(node);\r\n    const parent = treeAdapter.getParentNode(node);\r\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\r\n    return parentTn &&\r\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\r\n        hasUnescapedText(parentTn, options.scriptingEnabled)\r\n        ? content\r\n        : escapeText(content);\r\n}\r\nfunction serializeCommentNode(node, { treeAdapter }) {\r\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\r\n}\r\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\r\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\r\n}\r\n", "import { Parser } from './parser/index.js';\r\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\r\nexport { /** @internal */ Parser } from './parser/index.js';\r\nexport { serialize, serializeOuter } from './serializer/index.js';\r\nexport { ERR as ErrorCodes } from './common/error-codes.js';\r\n/** @internal */\r\nexport * as foreignContent from './common/foreign-content.js';\r\nexport * as html from './common/html.js';\r\nexport * as Token from './common/token.js';\r\n/** @internal */\r\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\r\n// Shorthands\r\n/**\r\n * Parses an HTML string.\r\n *\r\n * @param html Input HTML string.\r\n * @param options Parsing options.\r\n * @returns Document\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\r\n *\r\n * console.log(document.childNodes[1].tagName); //> 'html'\r\n *```\r\n */\r\nexport function parse(html, options) {\r\n    return Parser.parse(html, options);\r\n}\r\nexport function parseFragment(fragmentContext, html, options) {\r\n    if (typeof fragmentContext === 'string') {\r\n        options = html;\r\n        html = fragmentContext;\r\n        fragmentContext = null;\r\n    }\r\n    const parser = Parser.getFragmentParser(fragmentContext, options);\r\n    parser.tokenizer.write(html, true);\r\n    return parser.getFragment();\r\n}\r\n", "/**\r\n * @typedef ErrorInfo\r\n *   Info on a `parse5` error.\r\n * @property {string} reason\r\n *   Reason of error.\r\n * @property {string} description\r\n *   More info on error.\r\n * @property {false} [url]\r\n *   Turn off if this is not documented in the html5 spec (optional).\r\n */\r\n\r\nexport const errors = {\r\n  /** @type {ErrorInfo} */\r\n  abandonedHeadElementChild: {\r\n    reason: 'Unexpected metadata element after head',\r\n    description:\r\n      'Unexpected element after head. Expected the element before `</head>`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptClosingOfEmptyComment: {\r\n    reason: 'Unexpected abruptly closed empty comment',\r\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptDoctypePublicIdentifier: {\r\n    reason: 'Unexpected abruptly closed public identifier',\r\n    description:\r\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  abruptDoctypeSystemIdentifier: {\r\n    reason: 'Unexpected abruptly closed system identifier',\r\n    description:\r\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  absenceOfDigitsInNumericCharacterReference: {\r\n    reason: 'Unexpected non-digit at start of numeric character reference',\r\n    description:\r\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  cdataInHtmlContent: {\r\n    reason: 'Unexpected CDATA section in HTML',\r\n    description:\r\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  characterReferenceOutsideUnicodeRange: {\r\n    reason: 'Unexpected too big numeric character reference',\r\n    description:\r\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  closingOfElementWithOpenChildElements: {\r\n    reason: 'Unexpected closing tag with open child elements',\r\n    description:\r\n      'Unexpectedly closing tag. Expected other tags to be closed first',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  controlCharacterInInputStream: {\r\n    reason: 'Unexpected control character',\r\n    description:\r\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  controlCharacterReference: {\r\n    reason: 'Unexpected control character reference',\r\n    description:\r\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  disallowedContentInNoscriptInHead: {\r\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\r\n    description:\r\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  duplicateAttribute: {\r\n    reason: 'Unexpected duplicate attribute',\r\n    description:\r\n      'Unexpectedly double attribute. Expected attributes to occur only once'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithAttributes: {\r\n    reason: 'Unexpected attribute on closing tag',\r\n    description: 'Unexpected attribute. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithTrailingSolidus: {\r\n    reason: 'Unexpected slash at end of closing tag',\r\n    description: 'Unexpected `%c-1`. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  endTagWithoutMatchingOpenElement: {\r\n    reason: 'Unexpected unopened end tag',\r\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofBeforeTagName: {\r\n    reason: 'Unexpected end of file',\r\n    description: 'Unexpected end of file. Expected tag name instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInCdata: {\r\n    reason: 'Unexpected end of file in CDATA',\r\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInComment: {\r\n    reason: 'Unexpected end of file in comment',\r\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInDoctype: {\r\n    reason: 'Unexpected end of file in doctype',\r\n    description:\r\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInElementThatCanContainOnlyText: {\r\n    reason: 'Unexpected end of file in element that can only contain text',\r\n    description: 'Unexpected end of file. Expected text or a closing tag',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInScriptHtmlCommentLikeText: {\r\n    reason: 'Unexpected end of file in comment inside script',\r\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  eofInTag: {\r\n    reason: 'Unexpected end of file in tag',\r\n    description: 'Unexpected end of file. Expected `>` to close the tag'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  incorrectlyClosedComment: {\r\n    reason: 'Incorrectly closed comment',\r\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  incorrectlyOpenedComment: {\r\n    reason: 'Incorrectly opened comment',\r\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  invalidCharacterSequenceAfterDoctypeName: {\r\n    reason: 'Invalid sequence after doctype name',\r\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  invalidFirstCharacterOfTagName: {\r\n    reason: 'Invalid first character in tag name',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  misplacedDoctype: {\r\n    reason: 'Misplaced doctype',\r\n    description: 'Unexpected doctype. Expected doctype before head',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  misplacedStartTagForHeadElement: {\r\n    reason: 'Misplaced `<head>` start tag',\r\n    description:\r\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingAttributeValue: {\r\n    reason: 'Missing attribute value',\r\n    description:\r\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctype: {\r\n    reason: 'Missing doctype before other content',\r\n    description: 'Expected a `<!doctype html>` before anything else',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypeName: {\r\n    reason: 'Missing doctype name',\r\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypePublicIdentifier: {\r\n    reason: 'Missing public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingDoctypeSystemIdentifier: {\r\n    reason: 'Missing system identifier in doctype',\r\n    description:\r\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingEndTagName: {\r\n    reason: 'Missing name in end tag',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingQuoteBeforeDoctypePublicIdentifier: {\r\n    reason: 'Missing quote before public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingQuoteBeforeDoctypeSystemIdentifier: {\r\n    reason: 'Missing quote before system identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingSemicolonAfterCharacterReference: {\r\n    reason: 'Missing semicolon after character reference',\r\n    description: 'Unexpected `%c`. Expected `;` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceAfterDoctypePublicKeyword: {\r\n    reason: 'Missing whitespace after public identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceAfterDoctypeSystemKeyword: {\r\n    reason: 'Missing whitespace after system identifier in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBeforeDoctypeName: {\r\n    reason: 'Missing whitespace before doctype name',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBetweenAttributes: {\r\n    reason: 'Missing whitespace between attributes',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\r\n    reason:\r\n      'Missing whitespace between public and system identifiers in doctype',\r\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nestedComment: {\r\n    reason: 'Unexpected nested comment',\r\n    description: 'Unexpected `<!--`. Expected `-->`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nestedNoscriptInHead: {\r\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\r\n    description:\r\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nonConformingDoctype: {\r\n    reason: 'Unexpected non-conforming doctype declaration',\r\n    description:\r\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\r\n    reason: 'Unexpected trailing slash on start tag of non-void element',\r\n    description: 'Unexpected `/`. Expected `>` instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  noncharacterCharacterReference: {\r\n    reason:\r\n      'Unexpected noncharacter code point referenced by character reference',\r\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  noncharacterInInputStream: {\r\n    reason: 'Unexpected noncharacter character',\r\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  nullCharacterReference: {\r\n    reason: 'Unexpected NULL character referenced by character reference',\r\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  openElementsLeftAfterEof: {\r\n    reason: 'Unexpected end of file',\r\n    description: 'Unexpected end of file. Expected closing tag instead',\r\n    url: false\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  surrogateCharacterReference: {\r\n    reason: 'Unexpected surrogate character referenced by character reference',\r\n    description:\r\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  surrogateInInputStream: {\r\n    reason: 'Unexpected surrogate character',\r\n    description:\r\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\r\n    reason: 'Invalid character after system identifier in doctype',\r\n    description: 'Unexpected character at `%c`. Expected `>`'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterInAttributeName: {\r\n    reason: 'Unexpected character in attribute name',\r\n    description:\r\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedCharacterInUnquotedAttributeValue: {\r\n    reason: 'Unexpected character in unquoted attribute value',\r\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedEqualsSignBeforeAttributeName: {\r\n    reason: 'Unexpected equals sign before attribute name',\r\n    description: 'Unexpected `%c`. Add an attribute name before it'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedNullCharacter: {\r\n    reason: 'Unexpected NULL character',\r\n    description:\r\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedQuestionMarkInsteadOfTagName: {\r\n    reason: 'Unexpected question mark instead of tag name',\r\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unexpectedSolidusInTag: {\r\n    reason: 'Unexpected slash in tag',\r\n    description:\r\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\r\n  },\r\n  /** @type {ErrorInfo} */\r\n  unknownNamedCharacterReference: {\r\n    reason: 'Unexpected unknown named character reference',\r\n    description:\r\n      'Unexpected character reference. Expected known named character references'\r\n  }\r\n}\r\n", "/**\r\n * @import {Root} from 'hast'\r\n * @import {ParserError} from 'parse5'\r\n * @import {Value} from 'vfile'\r\n * @import {ErrorCode, Options} from './types.js'\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {fromParse5} from 'hast-util-from-parse5'\r\nimport {parse, parseFragment} from 'parse5'\r\nimport {VFile} from 'vfile'\r\nimport {VFileMessage} from 'vfile-message'\r\nimport {errors} from './errors.js'\r\n\r\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\r\n\r\nconst dashToCamelRe = /-[a-z]/g\r\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\r\nconst formatXRe = /%x/g\r\n\r\nconst fatalities = {2: true, 1: false, 0: null}\r\n\r\n/** @type {Readonly<Options>} */\r\nconst emptyOptions = {}\r\n\r\n/**\r\n * Turn serialized HTML into a hast tree.\r\n *\r\n * @param {VFile | Value} value\r\n *   Serialized HTML to parse.\r\n * @param {Readonly<Options> | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {Root}\r\n *   Tree.\r\n */\r\nexport function fromHtml(value, options) {\r\n  const settings = options || emptyOptions\r\n  const onerror = settings.onerror\r\n  const file = value instanceof VFile ? value : new VFile(value)\r\n  const parseFunction = settings.fragment ? parseFragment : parse\r\n  const document = String(file)\r\n  const p5Document = parseFunction(document, {\r\n    sourceCodeLocationInfo: true,\r\n    // Note `parse5` types currently do not allow `undefined`.\r\n    onParseError: settings.onerror ? internalOnerror : null,\r\n    scriptingEnabled: false\r\n  })\r\n\r\n  // `parse5` returns document which are always mapped to roots.\r\n  return /** @type {Root} */ (\r\n    fromParse5(p5Document, {\r\n      file,\r\n      space: settings.space,\r\n      verbose: settings.verbose\r\n    })\r\n  )\r\n\r\n  /**\r\n   * Handle a parse error.\r\n   *\r\n   * @param {ParserError} error\r\n   *   Parse5 error.\r\n   * @returns {undefined}\r\n   *   Nothing.\r\n   */\r\n  function internalOnerror(error) {\r\n    const code = error.code\r\n    const name = camelcase(code)\r\n    const setting = settings[name]\r\n    const config = setting === null || setting === undefined ? true : setting\r\n    const level = typeof config === 'number' ? config : config ? 1 : 0\r\n\r\n    if (level) {\r\n      const info = errors[name]\r\n      assert(info, 'expected known error from `parse5`')\r\n\r\n      const message = new VFileMessage(format(info.reason), {\r\n        place: {\r\n          start: {\r\n            line: error.startLine,\r\n            column: error.startCol,\r\n            offset: error.startOffset\r\n          },\r\n          end: {\r\n            line: error.endLine,\r\n            column: error.endCol,\r\n            offset: error.endOffset\r\n          }\r\n        },\r\n        ruleId: code,\r\n        source: 'hast-util-from-html'\r\n      })\r\n\r\n      if (file.path) {\r\n        message.file = file.path\r\n        message.name = file.path + ':' + message.name\r\n      }\r\n\r\n      message.fatal = fatalities[level]\r\n      message.note = format(info.description)\r\n      message.url = info.url === false ? undefined : base + code\r\n\r\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\r\n      onerror(message)\r\n    }\r\n\r\n    /**\r\n     * Format a human readable string about an error.\r\n     *\r\n     * @param {string} value\r\n     *   Value to format.\r\n     * @returns {string}\r\n     *   Formatted.\r\n     */\r\n    function format(value) {\r\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\r\n\r\n      /**\r\n       * Format the character.\r\n       *\r\n       * @param {string} _\r\n       *   Match.\r\n       * @param {string} $1\r\n       *   Sign (`-` or `+`, optional).\r\n       * @param {string} $2\r\n       *   Offset.\r\n       * @returns {string}\r\n       *   Formatted.\r\n       */\r\n      function formatC(_, $1, $2) {\r\n        const offset =\r\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\r\n        const char = document.charAt(error.startOffset + offset)\r\n        return visualizeCharacter(char)\r\n      }\r\n\r\n      /**\r\n       * Format the character code.\r\n       *\r\n       * @returns {string}\r\n       *   Formatted.\r\n       */\r\n      function formatX() {\r\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} value\r\n *   Error code in dash case.\r\n * @returns {ErrorCode}\r\n *   Error code in camelcase.\r\n */\r\nfunction camelcase(value) {\r\n  // This should match an error code.\r\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n *   Match.\r\n * @returns {string}\r\n *   Camelcased.\r\n */\r\nfunction dashToCamel($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n\r\n/**\r\n * @param {string} char\r\n *   Character.\r\n * @returns {string}\r\n *   Formatted.\r\n */\r\nfunction visualizeCharacter(char) {\r\n  return char === '`' ? '` ` `' : char\r\n}\r\n\r\n/**\r\n * @param {number} charCode\r\n *   Character code.\r\n * @returns {string}\r\n *   Formatted.\r\n */\r\nfunction visualizeCharacterCode(charCode) {\r\n  return '0x' + charCode.toString(16).toUpperCase()\r\n}\r\n", "/**\r\n * @import {Root} from 'hast'\r\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\r\n * @import {Parser, Processor} from 'unified'\r\n */\r\n\r\n/**\r\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\r\n *   Configuration.\r\n *\r\n * @typedef RehypeParseFields\r\n *   Extra fields.\r\n * @property {boolean | null | undefined} [emitParseErrors=false]\r\n *   Whether to emit parse errors while parsing (default: `false`).\r\n *\r\n *   > 👉 **Note**: parse errors are currently being added to HTML.\r\n *   > Not all errors emitted by parse5 (or us) are specced yet.\r\n *   > Some documentation may still be missing.\r\n */\r\n\r\nimport {fromHtml} from 'hast-util-from-html'\r\n\r\n/**\r\n * Plugin to add support for parsing from HTML.\r\n *\r\n * > 👉 **Note**: this is not an XML parser.\r\n * > It supports SVG as embedded in HTML.\r\n * > It does not support the features available in XML.\r\n * > Passing SVG files might break but fragments of modern SVG should be fine.\r\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\r\n *\r\n * @param {Options | null | undefined} [options]\r\n *   Configuration (optional).\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nexport default function rehypeParse(options) {\r\n  /** @type {Processor<Root>} */\r\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\r\n  const self = this\r\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\r\n\r\n  self.parser = parser\r\n\r\n  /**\r\n   * @type {Parser<Root>}\r\n   */\r\n  function parser(document, file) {\r\n    return fromHtml(document, {\r\n      ...settings,\r\n      onerror: emitParseErrors\r\n        ? function (message) {\r\n            if (file.path) {\r\n              message.name = file.path + ':' + message.name\r\n              message.file = file.path\r\n            }\r\n\r\n            file.messages.push(message)\r\n          }\r\n        : undefined\r\n    })\r\n  }\r\n}\r\n", "export var emptyMulticharIndex = {};\r\nexport var emptyRegularIndex = {};\r\nfunction extendIndex(item, index) {\r\n    var currentIndex = index;\r\n    for (var pos = 0; pos < item.length; pos++) {\r\n        var isLast = pos === item.length - 1;\r\n        var char = item.charAt(pos);\r\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\r\n        if (isLast) {\r\n            charIndex.self = item;\r\n        }\r\n        currentIndex = charIndex.chars;\r\n    }\r\n}\r\nexport function createMulticharIndex(items) {\r\n    if (items.length === 0) {\r\n        return emptyMulticharIndex;\r\n    }\r\n    var index = {};\r\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n        var item = items_1[_i];\r\n        extendIndex(item, index);\r\n    }\r\n    return index;\r\n}\r\nexport function createRegularIndex(items) {\r\n    if (items.length === 0) {\r\n        return emptyRegularIndex;\r\n    }\r\n    var result = {};\r\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\r\n        var item = items_2[_i];\r\n        result[item] = true;\r\n    }\r\n    return result;\r\n}\r\n", "export var emptyPseudoSignatures = {};\r\nexport var defaultPseudoSignature = {\r\n    type: 'String',\r\n    optional: true\r\n};\r\nfunction calculatePseudoSignature(types) {\r\n    var result = {\r\n        type: 'NoArgument',\r\n        optional: false\r\n    };\r\n    function setResultType(type) {\r\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\r\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\r\n        }\r\n        result.type = type;\r\n    }\r\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\r\n        var type = types_1[_i];\r\n        if (type === 'NoArgument') {\r\n            result.optional = true;\r\n        }\r\n        if (type === 'Formula') {\r\n            setResultType('Formula');\r\n        }\r\n        if (type === 'FormulaOfSelector') {\r\n            setResultType('Formula');\r\n            result.ofSelector = true;\r\n        }\r\n        if (type === 'String') {\r\n            setResultType('String');\r\n        }\r\n        if (type === 'Selector') {\r\n            setResultType('Selector');\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function inverseCategories(obj) {\r\n    var result = {};\r\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\r\n        var category = _a[_i];\r\n        var items = obj[category];\r\n        if (items) {\r\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\r\n                var item = _c[_b];\r\n                (result[item] || (result[item] = [])).push(category);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function calculatePseudoSignatures(definitions) {\r\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\r\n    var result = {};\r\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\r\n        var pseudoClass = _a[_i];\r\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\r\n        if (argumentTypes) {\r\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar emptyXmlOptions = {};\r\nvar defaultXmlOptions = { wildcard: true };\r\nexport function getXmlOptions(param) {\r\n    if (param) {\r\n        if (typeof param === 'boolean') {\r\n            return defaultXmlOptions;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    else {\r\n        return emptyXmlOptions;\r\n    }\r\n}\r\nfunction withMigration(migration, merge) {\r\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\r\n}\r\nfunction withNoNegative(merge) {\r\n    return function (base, extension) {\r\n        var result = merge(base, extension);\r\n        if (!result) {\r\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction withPositive(positive, merge) {\r\n    return function (base, extension) {\r\n        if (extension === true) {\r\n            return positive;\r\n        }\r\n        return merge(base === true ? positive : base, extension);\r\n    };\r\n}\r\nfunction mergeSection(values) {\r\n    return function (base, extension) {\r\n        if (!extension || !base) {\r\n            return extension;\r\n        }\r\n        if (typeof extension !== 'object' || extension === null) {\r\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\r\n        }\r\n        var result = __assign({}, base);\r\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\r\n            var _b = _a[_i], key = _b[0], value = _b[1];\r\n            if (key === 'latest') {\r\n                continue;\r\n            }\r\n            var mergeSchema = values[key];\r\n            result[key] = mergeSchema(base[key], value);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction replaceValueIfSpecified(base, extension) {\r\n    if (extension !== undefined) {\r\n        return extension;\r\n    }\r\n    return base;\r\n}\r\nfunction concatArray(base, extension) {\r\n    if (!extension) {\r\n        return base;\r\n    }\r\n    if (!base) {\r\n        return extension;\r\n    }\r\n    return base.concat(extension);\r\n}\r\nfunction mergeDefinitions(base, extension) {\r\n    if (!extension) {\r\n        return base;\r\n    }\r\n    if (!base) {\r\n        return extension;\r\n    }\r\n    var result = __assign({}, base);\r\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\r\n        var _b = _a[_i], key = _b[0], value = _b[1];\r\n        if (!value) {\r\n            delete result[key];\r\n            continue;\r\n        }\r\n        var baseValue = base[key];\r\n        if (!baseValue) {\r\n            result[key] = value;\r\n            continue;\r\n        }\r\n        result[key] = baseValue.concat(value);\r\n    }\r\n    return result;\r\n}\r\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\r\n    baseSyntax: replaceValueIfSpecified,\r\n    modules: concatArray,\r\n    tag: withPositive(defaultXmlOptions, mergeSection({\r\n        wildcard: replaceValueIfSpecified\r\n    })),\r\n    ids: replaceValueIfSpecified,\r\n    classNames: replaceValueIfSpecified,\r\n    namespace: withPositive(defaultXmlOptions, mergeSection({\r\n        wildcard: replaceValueIfSpecified\r\n    })),\r\n    combinators: concatArray,\r\n    attributes: mergeSection({\r\n        operators: concatArray,\r\n        caseSensitivityModifiers: concatArray,\r\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\r\n    }),\r\n    pseudoClasses: mergeSection({\r\n        unknown: replaceValueIfSpecified,\r\n        definitions: mergeDefinitions\r\n    }),\r\n    pseudoElements: mergeSection({\r\n        unknown: replaceValueIfSpecified,\r\n        notation: replaceValueIfSpecified,\r\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\r\n    })\r\n}));\r\nvar css1SyntaxDefinition = {\r\n    tag: {},\r\n    ids: true,\r\n    classNames: true,\r\n    combinators: [],\r\n    pseudoElements: {\r\n        unknown: 'reject',\r\n        notation: 'singleColon',\r\n        definitions: ['first-letter', 'first-line']\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'reject',\r\n        definitions: {\r\n            NoArgument: ['link', 'visited', 'active']\r\n        }\r\n    }\r\n};\r\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\r\n    tag: { wildcard: true },\r\n    combinators: ['>', '+'],\r\n    attributes: {\r\n        unknownCaseSensitivityModifiers: 'reject',\r\n        operators: ['=', '~=', '|=']\r\n    },\r\n    pseudoElements: {\r\n        definitions: ['before', 'after']\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'reject',\r\n        definitions: {\r\n            NoArgument: ['hover', 'focus', 'first-child'],\r\n            String: ['lang']\r\n        }\r\n    }\r\n});\r\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\r\n    namespace: {\r\n        wildcard: true\r\n    },\r\n    combinators: ['~'],\r\n    attributes: {\r\n        operators: ['^=', '$=', '*=']\r\n    },\r\n    pseudoElements: {\r\n        notation: 'both'\r\n    },\r\n    pseudoClasses: {\r\n        definitions: {\r\n            NoArgument: [\r\n                'root',\r\n                'last-child',\r\n                'first-of-type',\r\n                'last-of-type',\r\n                'only-child',\r\n                'only-of-type',\r\n                'empty',\r\n                'target',\r\n                'enabled',\r\n                'disabled',\r\n                'checked',\r\n                'indeterminate'\r\n            ],\r\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\r\n            Selector: ['not']\r\n        }\r\n    }\r\n});\r\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\r\n    combinators: ['||'],\r\n    attributes: {\r\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\r\n    },\r\n    pseudoClasses: {\r\n        definitions: {\r\n            NoArgument: [\r\n                'any-link',\r\n                'local-link',\r\n                'target-within',\r\n                'scope',\r\n                'current',\r\n                'past',\r\n                'future',\r\n                'focus-within',\r\n                'focus-visible',\r\n                'read-write',\r\n                'read-only',\r\n                'placeholder-shown',\r\n                'default',\r\n                'valid',\r\n                'invalid',\r\n                'in-range',\r\n                'out-of-range',\r\n                'required',\r\n                'optional',\r\n                'blank',\r\n                'user-invalid',\r\n                'playing',\r\n                'paused',\r\n                'autofill',\r\n                'modal',\r\n                'fullscreen',\r\n                'picture-in-picture',\r\n                'defined',\r\n                'loading',\r\n                'popover-open'\r\n            ],\r\n            Formula: ['nth-col', 'nth-last-col'],\r\n            String: ['dir'],\r\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\r\n            Selector: ['current', 'is', 'where', 'has', 'state']\r\n        }\r\n    },\r\n    pseudoElements: {\r\n        definitions: {\r\n            NoArgument: ['marker'],\r\n            Selector: ['part']\r\n        }\r\n    }\r\n});\r\n/**\r\n * CSS Modules with their syntax definitions.\r\n * These can be used to extend the parser with specific CSS modules.\r\n *\r\n * @example\r\n * // Using the css-position-3 module\r\n * createParser({ modules: ['css-position-3'] })\r\n */\r\nexport var cssModules = {\r\n    'css-position-1': {\r\n        latest: false,\r\n        pseudoClasses: {\r\n            definitions: {\r\n                NoArgument: ['static', 'relative', 'absolute']\r\n            }\r\n        }\r\n    },\r\n    'css-position-2': {\r\n        latest: false,\r\n        pseudoClasses: {\r\n            definitions: {\r\n                NoArgument: ['static', 'relative', 'absolute', 'fixed']\r\n            }\r\n        }\r\n    },\r\n    'css-position-3': {\r\n        latest: false,\r\n        pseudoClasses: {\r\n            definitions: {\r\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static']\r\n            }\r\n        }\r\n    },\r\n    'css-position-4': {\r\n        latest: true,\r\n        pseudoClasses: {\r\n            definitions: {\r\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static', 'initial']\r\n            }\r\n        }\r\n    },\r\n    'css-scoping-1': {\r\n        latest: true,\r\n        pseudoClasses: {\r\n            definitions: {\r\n                NoArgument: ['host', 'host-context'],\r\n                Selector: ['host', 'host-context']\r\n            }\r\n        },\r\n        pseudoElements: {\r\n            definitions: {\r\n                Selector: ['slotted']\r\n            }\r\n        }\r\n    },\r\n    'css-pseudo-4': {\r\n        latest: true,\r\n        pseudoElements: {\r\n            definitions: {\r\n                NoArgument: [\r\n                    'marker',\r\n                    'selection',\r\n                    'target-text',\r\n                    'search-text',\r\n                    'spelling-error',\r\n                    'grammar-error',\r\n                    'backdrop',\r\n                    'file-selector-button',\r\n                    'prefix',\r\n                    'postfix',\r\n                    'placeholder',\r\n                    'details-content'\r\n                ],\r\n                String: ['highlight']\r\n            }\r\n        }\r\n    },\r\n    'css-shadow-parts-1': {\r\n        latest: true,\r\n        pseudoElements: {\r\n            definitions: {\r\n                Selector: ['part']\r\n            }\r\n        }\r\n    }\r\n};\r\nvar latestSyntaxDefinition = __assign(__assign({}, selectors4SyntaxDefinition), { modules: Object.entries(cssModules)\r\n        .filter(function (_a) {\r\n        var latest = _a[1].latest;\r\n        return latest;\r\n    })\r\n        .map(function (_a) {\r\n        var name = _a[0];\r\n        return name;\r\n    }) });\r\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(latestSyntaxDefinition, {\r\n    pseudoElements: {\r\n        unknown: 'accept'\r\n    },\r\n    pseudoClasses: {\r\n        unknown: 'accept'\r\n    },\r\n    attributes: {\r\n        unknownCaseSensitivityModifiers: 'accept'\r\n    }\r\n});\r\nexport var cssSyntaxDefinitions = {\r\n    css1: css1SyntaxDefinition,\r\n    css2: css2SyntaxDefinition,\r\n    css3: selectors3SyntaxDefinition,\r\n    'selectors-3': selectors3SyntaxDefinition,\r\n    'selectors-4': selectors4SyntaxDefinition,\r\n    latest: latestSyntaxDefinition,\r\n    progressive: progressiveSyntaxDefinition\r\n};\r\n/**\r\n * Builds an index of where each pseudo-class and pseudo-element is defined\r\n * (in which CSS Level or CSS Module)\r\n */\r\nexport function buildPseudoLocationIndex() {\r\n    var index = {\r\n        pseudoClasses: {},\r\n        pseudoElements: {}\r\n    };\r\n    // Add CSS Levels (excluding 'latest' and 'progressive')\r\n    var cssLevels = ['css1', 'css2', 'css3', 'selectors-3', 'selectors-4'];\r\n    for (var _i = 0, cssLevels_1 = cssLevels; _i < cssLevels_1.length; _i++) {\r\n        var level = cssLevels_1[_i];\r\n        var syntax = cssSyntaxDefinitions[level];\r\n        // Process pseudo-classes\r\n        if (syntax.pseudoClasses && typeof syntax.pseudoClasses === 'object') {\r\n            var definitions = syntax.pseudoClasses.definitions;\r\n            if (definitions) {\r\n                for (var _a = 0, _b = Object.entries(definitions); _a < _b.length; _a++) {\r\n                    var _c = _b[_a], names = _c[1];\r\n                    for (var _d = 0, names_1 = names; _d < names_1.length; _d++) {\r\n                        var name_1 = names_1[_d];\r\n                        if (!index.pseudoClasses[name_1]) {\r\n                            index.pseudoClasses[name_1] = [];\r\n                        }\r\n                        if (!index.pseudoClasses[name_1].includes(level)) {\r\n                            index.pseudoClasses[name_1].push(level);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Process pseudo-elements\r\n        if (syntax.pseudoElements && typeof syntax.pseudoElements === 'object') {\r\n            var definitions = syntax.pseudoElements.definitions;\r\n            if (definitions) {\r\n                if (Array.isArray(definitions)) {\r\n                    for (var _e = 0, definitions_1 = definitions; _e < definitions_1.length; _e++) {\r\n                        var name_2 = definitions_1[_e];\r\n                        if (!index.pseudoElements[name_2]) {\r\n                            index.pseudoElements[name_2] = [];\r\n                        }\r\n                        if (!index.pseudoElements[name_2].includes(level)) {\r\n                            index.pseudoElements[name_2].push(level);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (var _f = 0, _g = Object.values(definitions); _f < _g.length; _f++) {\r\n                        var names = _g[_f];\r\n                        for (var _h = 0, names_2 = names; _h < names_2.length; _h++) {\r\n                            var name_3 = names_2[_h];\r\n                            if (!index.pseudoElements[name_3]) {\r\n                                index.pseudoElements[name_3] = [];\r\n                            }\r\n                            if (!index.pseudoElements[name_3].includes(level)) {\r\n                                index.pseudoElements[name_3].push(level);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Add CSS Modules\r\n    for (var _j = 0, _k = Object.entries(cssModules); _j < _k.length; _j++) {\r\n        var _l = _k[_j], moduleName = _l[0], moduleSyntax = _l[1];\r\n        // Process pseudo-classes\r\n        if (moduleSyntax.pseudoClasses && typeof moduleSyntax.pseudoClasses === 'object') {\r\n            var definitions = moduleSyntax.pseudoClasses.definitions;\r\n            if (definitions) {\r\n                for (var _m = 0, _o = Object.values(definitions); _m < _o.length; _m++) {\r\n                    var names = _o[_m];\r\n                    for (var _p = 0, names_3 = names; _p < names_3.length; _p++) {\r\n                        var name_4 = names_3[_p];\r\n                        if (!index.pseudoClasses[name_4]) {\r\n                            index.pseudoClasses[name_4] = [];\r\n                        }\r\n                        if (!index.pseudoClasses[name_4].includes(moduleName)) {\r\n                            index.pseudoClasses[name_4].push(moduleName);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Process pseudo-elements\r\n        if (moduleSyntax.pseudoElements && typeof moduleSyntax.pseudoElements === 'object') {\r\n            var definitions = moduleSyntax.pseudoElements.definitions;\r\n            if (definitions) {\r\n                if (Array.isArray(definitions)) {\r\n                    for (var _q = 0, definitions_2 = definitions; _q < definitions_2.length; _q++) {\r\n                        var name_5 = definitions_2[_q];\r\n                        if (!index.pseudoElements[name_5]) {\r\n                            index.pseudoElements[name_5] = [];\r\n                        }\r\n                        if (!index.pseudoElements[name_5].includes(moduleName)) {\r\n                            index.pseudoElements[name_5].push(moduleName);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (var _r = 0, _s = Object.values(definitions); _r < _s.length; _r++) {\r\n                        var names = _s[_r];\r\n                        for (var _t = 0, names_4 = names; _t < names_4.length; _t++) {\r\n                            var name_6 = names_4[_t];\r\n                            if (!index.pseudoElements[name_6]) {\r\n                                index.pseudoElements[name_6] = [];\r\n                            }\r\n                            if (!index.pseudoElements[name_6].includes(moduleName)) {\r\n                                index.pseudoElements[name_6].push(moduleName);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return index;\r\n}\r\n// Pre-build the index for faster lookup\r\nexport var pseudoLocationIndex = buildPseudoLocationIndex();\r\n", "export function isIdentStart(c) {\r\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\' || c >= '\\u00a0';\r\n}\r\nexport function isIdent(c) {\r\n    return ((c >= 'a' && c <= 'z') ||\r\n        (c >= 'A' && c <= 'Z') ||\r\n        (c >= '0' && c <= '9') ||\r\n        c === '-' ||\r\n        c === '_' ||\r\n        c >= '\\u00a0');\r\n}\r\nexport function isHex(c) {\r\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\r\n}\r\nexport var identEscapeChars = {\r\n    '!': true,\r\n    '\"': true,\r\n    '#': true,\r\n    $: true,\r\n    '%': true,\r\n    '&': true,\r\n    \"'\": true,\r\n    '(': true,\r\n    ')': true,\r\n    '*': true,\r\n    '+': true,\r\n    ',': true,\r\n    '.': true,\r\n    '/': true,\r\n    ';': true,\r\n    '<': true,\r\n    '=': true,\r\n    '>': true,\r\n    '?': true,\r\n    '@': true,\r\n    '[': true,\r\n    '\\\\': true,\r\n    ']': true,\r\n    '^': true,\r\n    '`': true,\r\n    '{': true,\r\n    '|': true,\r\n    '}': true,\r\n    '~': true\r\n};\r\nexport var stringRenderEscapeChars = {\r\n    '\\n': true,\r\n    '\\r': true,\r\n    '\\t': true,\r\n    '\\f': true,\r\n    '\\v': true\r\n};\r\nexport var whitespaceChars = {\r\n    ' ': true,\r\n    '\\t': true,\r\n    '\\n': true,\r\n    '\\r': true,\r\n    '\\f': true\r\n};\r\nexport var quoteChars = {\r\n    '\"': true,\r\n    \"'\": true\r\n};\r\nexport var digitsChars = {\r\n    0: true,\r\n    1: true,\r\n    2: true,\r\n    3: true,\r\n    4: true,\r\n    5: true,\r\n    6: true,\r\n    7: true,\r\n    8: true,\r\n    9: true\r\n};\r\nexport var maxHexLength = 6;\r\nexport function escapeIdentifier(s) {\r\n    var len = s.length;\r\n    var result = '';\r\n    var i = 0;\r\n    while (i < len) {\r\n        var chr = s.charAt(i);\r\n        if (identEscapeChars[chr] || (chr === '-' && i === 1 && s.charAt(0) === '-')) {\r\n            result += '\\\\' + chr;\r\n        }\r\n        else {\r\n            if (chr === '-' ||\r\n                chr === '_' ||\r\n                (chr >= 'A' && chr <= 'Z') ||\r\n                (chr >= 'a' && chr <= 'z') ||\r\n                (chr >= '0' && chr <= '9' && i !== 0 && !(i === 1 && s.charAt(0) === '-'))) {\r\n                result += chr;\r\n            }\r\n            else {\r\n                var charCode = chr.charCodeAt(0);\r\n                if ((charCode & 0xf800) === 0xd800) {\r\n                    var extraCharCode = s.charCodeAt(i++);\r\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\r\n                        throw Error('UCS-2(decode): illegal sequence');\r\n                    }\r\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\r\n                }\r\n                result += '\\\\' + charCode.toString(16) + ' ';\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    return result.trim();\r\n}\r\nexport function escapeString(s) {\r\n    var len = s.length;\r\n    var result = '';\r\n    var i = 0;\r\n    while (i < len) {\r\n        var chr = s.charAt(i);\r\n        if (chr === '\"') {\r\n            chr = '\\\\\"';\r\n        }\r\n        else if (chr === '\\\\') {\r\n            chr = '\\\\\\\\';\r\n        }\r\n        else if (stringRenderEscapeChars[chr]) {\r\n            chr = '\\\\' + chr.charCodeAt(0).toString(16) + (i === len - 1 ? '' : ' ');\r\n        }\r\n        result += chr;\r\n        i++;\r\n    }\r\n    return \"\\\"\".concat(result, \"\\\"\");\r\n}\r\n", "import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\r\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\r\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions, cssModules, pseudoLocationIndex } from './syntax-definitions.js';\r\nimport { digitsChars, isHex, isIdent, isIdentStart, maxHexLength, quoteChars, whitespaceChars } from './utils.js';\r\nvar errorPrefix = \"css-selector-parser parse error: \";\r\n/**\r\n * Creates a parse function to be used later to parse CSS selectors.\r\n */\r\nexport function createParser(options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b, modules = options.modules;\r\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\r\n    if (syntaxDefinition.baseSyntax) {\r\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\r\n    }\r\n    // Apply modules from syntax definition\r\n    if (syntaxDefinition.modules && syntaxDefinition.modules.length > 0) {\r\n        for (var _i = 0, _c = syntaxDefinition.modules; _i < _c.length; _i++) {\r\n            var module_1 = _c[_i];\r\n            var moduleSyntax = cssModules[module_1];\r\n            if (moduleSyntax) {\r\n                syntaxDefinition = extendSyntaxDefinition(moduleSyntax, syntaxDefinition);\r\n            }\r\n        }\r\n    }\r\n    // Apply additional modules if specified from options\r\n    if (modules && modules.length > 0) {\r\n        for (var _d = 0, modules_1 = modules; _d < modules_1.length; _d++) {\r\n            var module_2 = modules_1[_d];\r\n            var moduleSyntax = cssModules[module_2];\r\n            if (moduleSyntax) {\r\n                syntaxDefinition = extendSyntaxDefinition(moduleSyntax, syntaxDefinition);\r\n            }\r\n        }\r\n    }\r\n    var _e = syntaxDefinition.tag\r\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\r\n        : [false, false], tagNameEnabled = _e[0], tagNameWildcardEnabled = _e[1];\r\n    var idEnabled = Boolean(syntaxDefinition.ids);\r\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\r\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\r\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\r\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\r\n    if (namespaceEnabled && !tagNameEnabled) {\r\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\r\n    }\r\n    var substitutesEnabled = Boolean(substitutes);\r\n    var combinatorsIndex = syntaxDefinition.combinators\r\n        ? createMulticharIndex(syntaxDefinition.combinators)\r\n        : emptyMulticharIndex;\r\n    var _f = syntaxDefinition.attributes\r\n        ? [\r\n            true,\r\n            syntaxDefinition.attributes.operators\r\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\r\n                : emptyMulticharIndex,\r\n            syntaxDefinition.attributes.caseSensitivityModifiers\r\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\r\n                : emptyRegularIndex,\r\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\r\n        ]\r\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _f[0], attributesOperatorsIndex = _f[1], attributesCaseSensitivityModifiers = _f[2], attributesAcceptUnknownCaseSensitivityModifiers = _f[3];\r\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\r\n    var _g = syntaxDefinition.pseudoClasses\r\n        ? [\r\n            true,\r\n            syntaxDefinition.pseudoClasses.definitions\r\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\r\n                : emptyPseudoSignatures,\r\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\r\n        ]\r\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _g[0], pseudoClassesDefinitions = _g[1], pseudoClassesAcceptUnknown = _g[2];\r\n    var _h = syntaxDefinition.pseudoElements\r\n        ? [\r\n            true,\r\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\r\n                syntaxDefinition.pseudoElements.notation === 'both',\r\n            !syntaxDefinition.pseudoElements.notation ||\r\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\r\n                syntaxDefinition.pseudoElements.notation === 'both',\r\n            syntaxDefinition.pseudoElements.definitions\r\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\r\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\r\n                    : syntaxDefinition.pseudoElements.definitions)\r\n                : emptyPseudoSignatures,\r\n            syntaxDefinition.pseudoElements.unknown === 'accept'\r\n        ]\r\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _h[0], pseudoElementsSingleColonNotationEnabled = _h[1], pseudoElementsDoubleColonNotationEnabled = _h[2], pseudoElementsDefinitions = _h[3], pseudoElementsAcceptUnknown = _h[4];\r\n    var str = '';\r\n    var l = str.length;\r\n    var pos = 0;\r\n    var chr = '';\r\n    var is = function (comparison) { return chr === comparison; };\r\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\r\n    var rewind = function (newPos) {\r\n        pos = newPos;\r\n        chr = str.charAt(pos);\r\n    };\r\n    var next = function () {\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n    };\r\n    var readAndNext = function () {\r\n        var current = chr;\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n        return current;\r\n    };\r\n    /** @throws ParserError */\r\n    function fail(errorMessage) {\r\n        var position = Math.min(l - 1, pos);\r\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\r\n        error.position = position;\r\n        error.name = 'ParserError';\r\n        throw error;\r\n    }\r\n    function assert(condition, errorMessage) {\r\n        if (!condition) {\r\n            return fail(errorMessage);\r\n        }\r\n    }\r\n    var assertNonEof = function () {\r\n        assert(pos < l, 'Unexpected end of input.');\r\n    };\r\n    var isEof = function () { return pos >= l; };\r\n    var pass = function (character) {\r\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\r\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\r\n        pos++;\r\n        chr = str.charAt(pos);\r\n    };\r\n    function matchMulticharIndex(index) {\r\n        var match = matchMulticharIndexPos(index, pos);\r\n        if (match) {\r\n            pos += match.length;\r\n            chr = str.charAt(pos);\r\n            return match;\r\n        }\r\n    }\r\n    function matchMulticharIndexPos(index, subPos) {\r\n        var char = str.charAt(subPos);\r\n        var charIndex = index[char];\r\n        if (charIndex) {\r\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\r\n            if (subMatch) {\r\n                return subMatch;\r\n            }\r\n            if (charIndex.self) {\r\n                return charIndex.self;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#hex-digit-diagram\r\n     */\r\n    function parseHex() {\r\n        var hex = readAndNext();\r\n        var count = 1;\r\n        while (isHex(chr) && count < maxHexLength) {\r\n            hex += readAndNext();\r\n            count++;\r\n        }\r\n        skipSingleWhitespace();\r\n        return String.fromCharCode(parseInt(hex, 16));\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#string-token-diagram\r\n     */\r\n    function parseString(quote) {\r\n        var result = '';\r\n        pass(quote);\r\n        while (pos < l) {\r\n            if (is(quote)) {\r\n                next();\r\n                return result;\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                if (is(quote)) {\r\n                    result += quote;\r\n                    next();\r\n                }\r\n                else if (chr === '\\n' || chr === '\\f') {\r\n                    next();\r\n                }\r\n                else if (chr === '\\r') {\r\n                    next();\r\n                    if (is('\\n')) {\r\n                        next();\r\n                    }\r\n                }\r\n                else if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += chr;\r\n                    next();\r\n                }\r\n            }\r\n            else {\r\n                result += chr;\r\n                next();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @see https://www.w3.org/TR/css-syntax/#ident-token-diagram\r\n     */\r\n    function parseIdentifier() {\r\n        if (!isIdentStart(chr)) {\r\n            return null;\r\n        }\r\n        var result = '';\r\n        while (is('-')) {\r\n            result += chr;\r\n            next();\r\n        }\r\n        if (result === '-' && !isIdent(chr) && !is('\\\\')) {\r\n            fail('Identifiers cannot consist of a single hyphen.');\r\n        }\r\n        if (strict && result.length >= 2) {\r\n            // Checking this only for strict mode since browsers work fine with these identifiers.\r\n            fail('Identifiers cannot start with two hyphens with strict mode on.');\r\n        }\r\n        if (digitsChars[chr]) {\r\n            fail('Identifiers cannot start with hyphens followed by digits.');\r\n        }\r\n        while (pos < l) {\r\n            if (isIdent(chr)) {\r\n                result += readAndNext();\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                assertNonEof();\r\n                if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += readAndNext();\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function parsePseudoClassString() {\r\n        var result = '';\r\n        while (pos < l) {\r\n            if (is(')')) {\r\n                break;\r\n            }\r\n            else if (is('\\\\')) {\r\n                next();\r\n                if (isEof() && !strict) {\r\n                    return (result + '\\\\').trim();\r\n                }\r\n                assertNonEof();\r\n                if (isHex(chr)) {\r\n                    result += parseHex();\r\n                }\r\n                else {\r\n                    result += readAndNext();\r\n                }\r\n            }\r\n            else {\r\n                result += readAndNext();\r\n            }\r\n        }\r\n        return result.trim();\r\n    }\r\n    function skipSingleWhitespace() {\r\n        if (chr === ' ' || chr === '\\t' || chr === '\\f' || chr === '\\n') {\r\n            next();\r\n            return;\r\n        }\r\n        if (chr === '\\r') {\r\n            next();\r\n        }\r\n        if (chr === '\\n') {\r\n            next();\r\n        }\r\n    }\r\n    function skipWhitespace() {\r\n        while (whitespaceChars[chr]) {\r\n            next();\r\n        }\r\n    }\r\n    function parseSelector(relative) {\r\n        if (relative === void 0) { relative = false; }\r\n        skipWhitespace();\r\n        var rules = [parseRule(relative)];\r\n        while (is(',')) {\r\n            next();\r\n            skipWhitespace();\r\n            rules.push(parseRule(relative));\r\n        }\r\n        return {\r\n            type: 'Selector',\r\n            rules: rules\r\n        };\r\n    }\r\n    function parseAttribute() {\r\n        pass('[');\r\n        skipWhitespace();\r\n        var attr;\r\n        if (is('|')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            next();\r\n            var name_1 = parseIdentifier();\r\n            assert(name_1, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: name_1,\r\n                namespace: { type: 'NoNamespace' }\r\n            };\r\n        }\r\n        else if (is('*')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\r\n            next();\r\n            pass('|');\r\n            var name_2 = parseIdentifier();\r\n            assert(name_2, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: name_2,\r\n                namespace: { type: 'WildcardNamespace' }\r\n            };\r\n        }\r\n        else {\r\n            var identifier = parseIdentifier();\r\n            assert(identifier, 'Expected attribute name.');\r\n            attr = {\r\n                type: 'Attribute',\r\n                name: identifier\r\n            };\r\n            if (is('|')) {\r\n                var savedPos = pos;\r\n                next();\r\n                if (isIdentStart(chr)) {\r\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n                    var name_3 = parseIdentifier();\r\n                    assert(name_3, 'Expected attribute name.');\r\n                    attr = {\r\n                        type: 'Attribute',\r\n                        name: name_3,\r\n                        namespace: { type: 'NamespaceName', name: identifier }\r\n                    };\r\n                }\r\n                else {\r\n                    rewind(savedPos);\r\n                }\r\n            }\r\n        }\r\n        assert(attr.name, 'Expected attribute name.');\r\n        skipWhitespace();\r\n        if (isEof() && !strict) {\r\n            return attr;\r\n        }\r\n        if (is(']')) {\r\n            next();\r\n        }\r\n        else {\r\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\r\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\r\n            skipWhitespace();\r\n            assertNonEof();\r\n            if (quoteChars[chr]) {\r\n                attr.value = {\r\n                    type: 'String',\r\n                    value: parseString(chr)\r\n                };\r\n            }\r\n            else if (substitutesEnabled && is('$')) {\r\n                next();\r\n                var name_4 = parseIdentifier();\r\n                assert(name_4, 'Expected substitute name.');\r\n                attr.value = {\r\n                    type: 'Substitution',\r\n                    name: name_4\r\n                };\r\n            }\r\n            else {\r\n                var value = parseIdentifier();\r\n                assert(value, 'Expected attribute value.');\r\n                attr.value = {\r\n                    type: 'String',\r\n                    value: value\r\n                };\r\n            }\r\n            skipWhitespace();\r\n            if (isEof() && !strict) {\r\n                return attr;\r\n            }\r\n            if (!is(']')) {\r\n                var caseSensitivityModifier = parseIdentifier();\r\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\r\n                attr.caseSensitivityModifier = caseSensitivityModifier;\r\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\r\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\r\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\r\n                skipWhitespace();\r\n                if (isEof() && !strict) {\r\n                    return attr;\r\n                }\r\n            }\r\n            pass(']');\r\n        }\r\n        return attr;\r\n    }\r\n    function parseNumber() {\r\n        var result = '';\r\n        while (digitsChars[chr]) {\r\n            result += readAndNext();\r\n        }\r\n        assert(result !== '', 'Formula parse error.');\r\n        return parseInt(result);\r\n    }\r\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\r\n    function parseFormula() {\r\n        if (is('e') || is('o')) {\r\n            var ident = parseIdentifier();\r\n            if (ident === 'even') {\r\n                skipWhitespace();\r\n                return [2, 0];\r\n            }\r\n            if (ident === 'odd') {\r\n                skipWhitespace();\r\n                return [2, 1];\r\n            }\r\n        }\r\n        var firstNumber = null;\r\n        var firstNumberMultiplier = 1;\r\n        if (is('-')) {\r\n            next();\r\n            firstNumberMultiplier = -1;\r\n        }\r\n        if (isNumberStart()) {\r\n            if (is('+')) {\r\n                next();\r\n            }\r\n            firstNumber = parseNumber();\r\n            if (!is('\\\\') && !is('n')) {\r\n                return [0, firstNumber * firstNumberMultiplier];\r\n            }\r\n        }\r\n        if (firstNumber === null) {\r\n            firstNumber = 1;\r\n        }\r\n        firstNumber *= firstNumberMultiplier;\r\n        var identifier;\r\n        if (is('\\\\')) {\r\n            next();\r\n            if (isHex(chr)) {\r\n                identifier = parseHex();\r\n            }\r\n            else {\r\n                identifier = readAndNext();\r\n            }\r\n        }\r\n        else {\r\n            identifier = readAndNext();\r\n        }\r\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\r\n        skipWhitespace();\r\n        if (is('+') || is('-')) {\r\n            var sign = is('+') ? 1 : -1;\r\n            next();\r\n            skipWhitespace();\r\n            return [firstNumber, sign * parseNumber()];\r\n        }\r\n        else {\r\n            return [firstNumber, 0];\r\n        }\r\n    }\r\n    function parsePseudoArgument(pseudoName, type, signature) {\r\n        var argument;\r\n        if (is('(')) {\r\n            next();\r\n            skipWhitespace();\r\n            if (substitutesEnabled && is('$')) {\r\n                next();\r\n                var name_5 = parseIdentifier();\r\n                assert(name_5, 'Expected substitute name.');\r\n                argument = {\r\n                    type: 'Substitution',\r\n                    name: name_5\r\n                };\r\n            }\r\n            else if (signature.type === 'String') {\r\n                argument = {\r\n                    type: 'String',\r\n                    value: parsePseudoClassString()\r\n                };\r\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\r\n            }\r\n            else if (signature.type === 'Selector') {\r\n                argument = parseSelector(true);\r\n            }\r\n            else if (signature.type === 'Formula') {\r\n                var _a = parseFormula(), a = _a[0], b = _a[1];\r\n                argument = {\r\n                    type: 'Formula',\r\n                    a: a,\r\n                    b: b\r\n                };\r\n                if (signature.ofSelector) {\r\n                    skipWhitespace();\r\n                    if (is('o') || is('\\\\')) {\r\n                        var ident = parseIdentifier();\r\n                        assert(ident === 'of', 'Formula of selector parse error.');\r\n                        skipWhitespace();\r\n                        argument = {\r\n                            type: 'FormulaOfSelector',\r\n                            a: a,\r\n                            b: b,\r\n                            selector: parseRule()\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return fail(\"Invalid \".concat(type, \" signature.\"));\r\n            }\r\n            skipWhitespace();\r\n            if (isEof() && !strict) {\r\n                return argument;\r\n            }\r\n            pass(')');\r\n        }\r\n        else {\r\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\r\n        }\r\n        return argument;\r\n    }\r\n    function parseTagName() {\r\n        if (is('*')) {\r\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\r\n            next();\r\n            return { type: 'WildcardTag' };\r\n        }\r\n        else if (isIdentStart(chr)) {\r\n            assert(tagNameEnabled, 'Tag names are not enabled.');\r\n            var name_6 = parseIdentifier();\r\n            assert(name_6, 'Expected tag name.');\r\n            return {\r\n                type: 'TagName',\r\n                name: name_6\r\n            };\r\n        }\r\n        else {\r\n            return fail('Expected tag name.');\r\n        }\r\n    }\r\n    function parseTagNameWithNamespace() {\r\n        if (is('*')) {\r\n            var savedPos = pos;\r\n            next();\r\n            if (!is('|')) {\r\n                rewind(savedPos);\r\n                return parseTagName();\r\n            }\r\n            next();\r\n            if (!isTagStart()) {\r\n                rewind(savedPos);\r\n                return parseTagName();\r\n            }\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'WildcardNamespace' };\r\n            return tagName;\r\n        }\r\n        else if (is('|')) {\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            next();\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'NoNamespace' };\r\n            return tagName;\r\n        }\r\n        else if (isIdentStart(chr)) {\r\n            var identifier = parseIdentifier();\r\n            assert(identifier, 'Expected tag name.');\r\n            if (!is('|')) {\r\n                assert(tagNameEnabled, 'Tag names are not enabled.');\r\n                return {\r\n                    type: 'TagName',\r\n                    name: identifier\r\n                };\r\n            }\r\n            var savedPos = pos;\r\n            next();\r\n            if (!isTagStart()) {\r\n                rewind(savedPos);\r\n                return {\r\n                    type: 'TagName',\r\n                    name: identifier\r\n                };\r\n            }\r\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\r\n            var tagName = parseTagName();\r\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\r\n            return tagName;\r\n        }\r\n        else {\r\n            return fail('Expected tag name.');\r\n        }\r\n    }\r\n    function parseRule(relative) {\r\n        var _a, _b;\r\n        if (relative === void 0) { relative = false; }\r\n        var rule = { type: 'Rule', items: [] };\r\n        if (relative) {\r\n            var combinator = matchMulticharIndex(combinatorsIndex);\r\n            if (combinator) {\r\n                rule.combinator = combinator;\r\n                skipWhitespace();\r\n            }\r\n        }\r\n        while (pos < l) {\r\n            if (isTagStart()) {\r\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\r\n                rule.items.push(parseTagNameWithNamespace());\r\n            }\r\n            else if (is('|')) {\r\n                var savedPos = pos;\r\n                next();\r\n                if (isTagStart()) {\r\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\r\n                    rewind(savedPos);\r\n                    rule.items.push(parseTagNameWithNamespace());\r\n                }\r\n                else {\r\n                    rewind(savedPos);\r\n                    break;\r\n                }\r\n            }\r\n            else if (is('.')) {\r\n                assert(classNamesEnabled, 'Class names are not enabled.');\r\n                next();\r\n                var className = parseIdentifier();\r\n                assert(className, 'Expected class name.');\r\n                rule.items.push({ type: 'ClassName', name: className });\r\n            }\r\n            else if (is('#')) {\r\n                assert(idEnabled, 'IDs are not enabled.');\r\n                next();\r\n                var idName = parseIdentifier();\r\n                assert(idName, 'Expected ID name.');\r\n                rule.items.push({ type: 'Id', name: idName });\r\n            }\r\n            else if (is('[')) {\r\n                assert(attributesEnabled, 'Attributes are not enabled.');\r\n                rule.items.push(parseAttribute());\r\n            }\r\n            else if (is(':')) {\r\n                var isDoubleColon = false;\r\n                var isPseudoElement = false;\r\n                next();\r\n                if (is(':')) {\r\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\r\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\r\n                    isDoubleColon = true;\r\n                    next();\r\n                }\r\n                var pseudoName = parseIdentifier();\r\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\r\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\r\n                assert(pseudoName, 'Expected pseudo-class name.');\r\n                if (!isDoubleColon ||\r\n                    pseudoElementsAcceptUnknown ||\r\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)) {\r\n                    // All good\r\n                }\r\n                else {\r\n                    // Generate a helpful error message with location information\r\n                    var locations = pseudoLocationIndex.pseudoElements[pseudoName];\r\n                    var errorMessage = \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\"\");\r\n                    if (locations && locations.length > 0) {\r\n                        errorMessage += \". It is defined in: \".concat(locations.join(', '));\r\n                    }\r\n                    fail(errorMessage + '.');\r\n                }\r\n                isPseudoElement =\r\n                    pseudoElementsEnabled &&\r\n                        (isDoubleColon ||\r\n                            (!isDoubleColon &&\r\n                                pseudoElementsSingleColonNotationEnabled &&\r\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\r\n                if (isPseudoElement) {\r\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\r\n                    var pseudoElement = {\r\n                        type: 'PseudoElement',\r\n                        name: pseudoName\r\n                    };\r\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\r\n                    if (argument) {\r\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\r\n                        pseudoElement.argument = argument;\r\n                    }\r\n                    rule.items.push(pseudoElement);\r\n                }\r\n                else {\r\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\r\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\r\n                    if (signature) {\r\n                        // All good\r\n                    }\r\n                    else {\r\n                        // Generate a helpful error message with location information\r\n                        var locations = pseudoLocationIndex.pseudoClasses[pseudoName];\r\n                        var errorMessage = \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\"\");\r\n                        if (locations && locations.length > 0) {\r\n                            errorMessage += \". It is defined in: \".concat(locations.join(', '));\r\n                        }\r\n                        fail(errorMessage + '.');\r\n                    }\r\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\r\n                    var pseudoClass = {\r\n                        type: 'PseudoClass',\r\n                        name: pseudoName\r\n                    };\r\n                    if (argument) {\r\n                        pseudoClass.argument = argument;\r\n                    }\r\n                    rule.items.push(pseudoClass);\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (rule.items.length === 0) {\r\n            if (isEof()) {\r\n                return fail('Expected rule but end of input reached.');\r\n            }\r\n            else {\r\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\r\n            }\r\n        }\r\n        skipWhitespace();\r\n        if (!isEof() && !is(',') && !is(')')) {\r\n            var combinator = matchMulticharIndex(combinatorsIndex);\r\n            skipWhitespace();\r\n            rule.nestedRule = parseRule();\r\n            rule.nestedRule.combinator = combinator;\r\n        }\r\n        return rule;\r\n    }\r\n    return function (input) {\r\n        // noinspection SuspiciousTypeOfGuard\r\n        if (typeof input !== 'string') {\r\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\r\n        }\r\n        str = input;\r\n        l = str.length;\r\n        pos = 0;\r\n        chr = str.charAt(0);\r\n        return parseSelector();\r\n    };\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nfunction astMethods(type) {\r\n    return function (generatorName, checkerName) {\r\n        var _a;\r\n        return (_a = {},\r\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\r\n            _a[checkerName] = function (entity) {\r\n                return typeof entity === 'object' && entity !== null && entity.type === type;\r\n            },\r\n            _a);\r\n    };\r\n}\r\n/**\r\n * AST structure generators and matchers.\r\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\r\n * AstSelector was specified.\r\n *\r\n * @example\r\n *\r\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\r\n * const selector = ast.selector({\r\n *     rules: [\r\n *         ast.rule({\r\n *             items: [\r\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\r\n *                 ast.id({name: 'user-34'}),\r\n *                 ast.className({name: 'user'}),\r\n *                 ast.className({name: 'user-active'}),\r\n *                 ast.attribute({\r\n *                     name: 'role',\r\n *                     operator: '=',\r\n *                     value: ast.string({value: 'button'})\r\n *                 }),\r\n *                 ast.pseudoClass({\r\n *                     name: 'lang',\r\n *                     argument: ast.string({value: 'en'})\r\n *                 }),\r\n *                 ast.pseudoElement({name: 'before'})\r\n *             ],\r\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\r\n *         })\r\n *     ]\r\n * });\r\n * console.log(ast.isSelector(selector)); // prints true\r\n * console.log(ast.isRule(selector)); // prints false\r\n */\r\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\r\n */\r\n\r\nimport {createParser} from 'css-selector-parser'\r\n\r\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\r\n\r\n/**\r\n * @param {string} selector\r\n * @returns {AstSelector}\r\n */\r\nexport function parse(selector) {\r\n  if (typeof selector !== 'string') {\r\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\r\n  }\r\n\r\n  return cssSelectorParse(selector)\r\n}\r\n", "/**\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n */\r\n\r\nimport {unreachable} from 'devlop'\r\n\r\n/**\r\n * TypeScript helper to check if something is indexable (any object is\r\n * indexable in JavaScript).\r\n *\r\n * @param {unknown} value\r\n *   Thing to check.\r\n * @returns {asserts value is Record<string, unknown>}\r\n *   Nothing.\r\n * @throws {Error}\r\n *   When `value` is not an object.\r\n */\r\nexport function indexable(value) {\r\n  // Always called when something is an object, this is just for TS.\r\n  /* c8 ignore next 3 */\r\n  if (!value || typeof value !== 'object') {\r\n    unreachable('Expected object')\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node\r\n * @returns {node is Parent}\r\n */\r\nexport function parent(node) {\r\n  indexable(node)\r\n  return Array.isArray(node.children)\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\r\n * @typedef {import('css-selector-parser').AstRule} AstRule\r\n * @typedef {import('./types.js').Node} Node\r\n */\r\n\r\nimport {ok as assert} from 'devlop'\r\nimport {indexable} from './util.js'\r\n\r\n/**\r\n * @param {AstAttribute} query\r\n *   Query.\r\n * @param {Node} node\r\n *   Node.\r\n * @returns {boolean}\r\n *   Whether `node` matches `query`.\r\n */\r\n\r\nexport function attribute(query, node) {\r\n  indexable(node)\r\n  const value = node[query.name]\r\n\r\n  // Exists.\r\n  if (!query.value) {\r\n    return value !== null && value !== undefined\r\n  }\r\n\r\n  assert(query.value.type === 'String', 'expected plain string')\r\n  let key = query.value.value\r\n  let normal = value === null || value === undefined ? undefined : String(value)\r\n\r\n  // Case-sensitivity.\r\n  if (query.caseSensitivityModifier === 'i') {\r\n    key = key.toLowerCase()\r\n\r\n    if (normal) {\r\n      normal = normal.toLowerCase()\r\n    }\r\n  }\r\n\r\n  if (value !== undefined) {\r\n    switch (query.operator) {\r\n      // Exact.\r\n      case '=': {\r\n        return typeof normal === 'string' && key === normal\r\n      }\r\n\r\n      // Ends.\r\n      case '$=': {\r\n        return typeof value === 'string' && value.slice(-key.length) === key\r\n      }\r\n\r\n      // Contains.\r\n      case '*=': {\r\n        return typeof value === 'string' && value.includes(key)\r\n      }\r\n\r\n      // Begins.\r\n      case '^=': {\r\n        return typeof value === 'string' && key === value.slice(0, key.length)\r\n      }\r\n\r\n      // Space-separated list.\r\n      case '~=': {\r\n        // type-coverage:ignore-next-line -- some bug with TS.\r\n        return (Array.isArray(value) && value.includes(key)) || normal === key\r\n      }\r\n      // Other values are not yet supported by CSS.\r\n      // No default\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n", null, null, null, "/**\r\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('./types.js').SelectState} SelectState\r\n */\r\n\r\nimport {ok as assert, unreachable} from 'devlop'\r\nimport fauxEsmNthCheck from 'nth-check'\r\nimport {zwitch} from 'zwitch'\r\nimport {parent} from './util.js'\r\nimport {walk} from './walk.js'\r\n\r\n/** @type {import('nth-check').default} */\r\n// @ts-expect-error: `nth-check` types are wrong.\r\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\r\n\r\n/** @type {(rule: AstPseudoClass, node: Node, index: number | undefined, parent: Parent | undefined, state: SelectState) => boolean} */\r\nexport const pseudo = zwitch('name', {\r\n  // @ts-expect-error: always known.\r\n  unknown: unknownPseudo,\r\n  invalid: invalidPseudo,\r\n  handlers: {\r\n    is,\r\n    blank: empty,\r\n    empty,\r\n    'first-child': firstChild,\r\n    'first-of-type': firstOfType,\r\n    has,\r\n    'last-child': lastChild,\r\n    'last-of-type': lastOfType,\r\n    not,\r\n    'nth-child': nthChild,\r\n    'nth-last-child': nthLastChild,\r\n    'nth-of-type': nthOfType,\r\n    'nth-last-of-type': nthLastOfType,\r\n    'only-child': onlyChild,\r\n    'only-of-type': onlyOfType,\r\n    root,\r\n    scope\r\n  }\r\n})\r\n\r\n/**\r\n * Check whether a node matches an `:empty` pseudo.\r\n *\r\n * @param {AstPseudoClass} _1\r\n * @param {Node} node\r\n * @returns {boolean}\r\n */\r\nfunction empty(_1, node) {\r\n  return parent(node) ? node.children.length === 0 : !('value' in node)\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:first-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction firstChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.nodeIndex === 0 // Specifically `0`, not falsey.\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:first-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction firstOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.typeIndex === 0\r\n}\r\n\r\n/**\r\n * @param {AstPseudoClass} query\r\n * @param {Node} node\r\n * @param {number | undefined} _1\r\n * @param {Parent | undefined} _2\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction has(query, node, _1, _2, state) {\r\n  const argument = query.argument\r\n\r\n  /* c8 ignore next 3 -- never happens with our config */\r\n  if (!argument || argument.type !== 'Selector') {\r\n    unreachable('`:has` has selectors')\r\n  }\r\n\r\n  const fragment = {type: 'root', children: parent(node) ? node.children : []}\r\n  /** @type {SelectState} */\r\n  const childState = {\r\n    ...state,\r\n    // Not found yet.\r\n    found: false,\r\n    // Do walk deep.\r\n    shallow: false,\r\n    // One result is enough.\r\n    one: true,\r\n    scopeNodes: [node],\r\n    results: [],\r\n    rootQuery: argument\r\n  }\r\n\r\n  walk(childState, fragment)\r\n\r\n  return childState.results.length > 0\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:last-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction lastChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.nodeCount === 'number' &&\r\n    state.nodeIndex === state.nodeCount - 1\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:last-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction lastOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.typeCount === 'number' &&\r\n    state.typeIndex === state.typeCount - 1\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether a node `:is` further selectors.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} node\r\n * @param {number | undefined} _1\r\n * @param {Parent | undefined} _2\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction is(query, node, _1, _2, state) {\r\n  const argument = query.argument\r\n\r\n  /* c8 ignore next 3 -- never happens with our config */\r\n  if (!argument || argument.type !== 'Selector') {\r\n    unreachable('`:is` has selectors')\r\n  }\r\n\r\n  /** @type {SelectState} */\r\n  const childState = {\r\n    ...state,\r\n    // Not found yet.\r\n    found: false,\r\n    // Do walk deep.\r\n    shallow: false,\r\n    // One result is enough.\r\n    one: true,\r\n    scopeNodes: [node],\r\n    results: [],\r\n    rootQuery: argument\r\n  }\r\n\r\n  walk(childState, node)\r\n\r\n  return childState.results[0] === node\r\n}\r\n\r\n/**\r\n * Check whether a node does `:not` match further selectors.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} node\r\n * @param {number | undefined} index\r\n * @param {Parent | undefined} parent\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction not(query, node, index, parent, state) {\r\n  return !is(query, node, index, parent, state)\r\n}\r\n\r\n/**\r\n * Check whether a node matches an `:nth-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction nthChild(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return typeof state.nodeIndex === 'number' && fn(state.nodeIndex)\r\n}\r\n\r\n/**\r\n * Check whether a node matches an `:nth-last-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction nthLastChild(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.nodeCount === 'number' &&\r\n    typeof state.nodeIndex === 'number' &&\r\n    fn(state.nodeCount - state.nodeIndex - 1)\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:nth-last-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction nthLastOfType(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return (\r\n    typeof state.typeIndex === 'number' &&\r\n    typeof state.typeCount === 'number' &&\r\n    fn(state.typeCount - 1 - state.typeIndex)\r\n  )\r\n}\r\n\r\n/**\r\n * Check whether a node matches an `:nth-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction nthOfType(query, _1, _2, _3, state) {\r\n  const fn = getCachedNthCheck(query)\r\n  assertDeep(state, query)\r\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\r\n}\r\n\r\n/**\r\n * Check whether a node matches an `:only-child` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction onlyChild(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.nodeCount === 1\r\n}\r\n\r\n/**\r\n * Check whether a node matches an `:only-of-type` pseudo.\r\n *\r\n * @param {AstPseudoClass} query\r\n * @param {Node} _1\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction onlyOfType(query, _1, _2, _3, state) {\r\n  assertDeep(state, query)\r\n  return state.typeCount === 1\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:root` pseudo.\r\n *\r\n * @param {AstPseudoClass} _1\r\n * @param {Node} node\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} parent\r\n * @returns {boolean}\r\n */\r\nfunction root(_1, node, _2, parent) {\r\n  return node && !parent\r\n}\r\n\r\n/**\r\n * Check whether a node matches a `:scope` pseudo.\r\n *\r\n * @param {AstPseudoClass} _1\r\n * @param {Node} node\r\n * @param {number | undefined} _2\r\n * @param {Parent | undefined} _3\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nfunction scope(_1, node, _2, _3, state) {\r\n  return node && state.scopeNodes.includes(node)\r\n}\r\n\r\n// Shouldn’t be called, parser gives correct data.\r\n/* c8 ignore next 3 */\r\nfunction invalidPseudo() {\r\n  throw new Error('Invalid pseudo-selector')\r\n}\r\n\r\n/**\r\n * @param {AstPseudoClass} query\r\n * @returns {never}\r\n */\r\nfunction unknownPseudo(query) {\r\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\r\n}\r\n\r\n/**\r\n * @param {SelectState} state\r\n * @param {AstPseudoClass} query\r\n */\r\nfunction assertDeep(state, query) {\r\n  if (state.shallow) {\r\n    throw new Error('Cannot use `:' + query.name + '` without parent')\r\n  }\r\n}\r\n\r\n/**\r\n * @param {AstPseudoClass} query\r\n * @returns {(value: number) => boolean}\r\n */\r\nfunction getCachedNthCheck(query) {\r\n  /** @type {(value: number) => boolean} */\r\n  // @ts-expect-error: cache.\r\n  let fn = query._cachedFn\r\n\r\n  if (!fn) {\r\n    const value = query.argument\r\n    assert(value, 'expected `argument`')\r\n\r\n    if (value.type !== 'Formula') {\r\n      throw new Error(\r\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\r\n      )\r\n    }\r\n\r\n    fn = nthCheck(value.a + 'n+' + value.b)\r\n    // @ts-expect-error: cache.\r\n    query._cachedFn = fn\r\n  }\r\n\r\n  return fn\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstRule} AstRule\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('./types.js').SelectState} SelectState\r\n */\r\n\r\nimport {attribute} from './attribute.js'\r\nimport {pseudo} from './pseudo.js'\r\n\r\n/**\r\n * @param {AstRule} query\r\n * @param {Node} node\r\n * @param {number | undefined} index\r\n * @param {Parent | undefined} parent\r\n * @param {SelectState} state\r\n * @returns {boolean}\r\n */\r\nexport function test(query, node, index, parent, state) {\r\n  for (const item of query.items) {\r\n    // eslint-disable-next-line unicorn/prefer-switch\r\n    if (item.type === 'Attribute') {\r\n      if (!attribute(item, node)) return false\r\n    } else if (item.type === 'Id') {\r\n      throw new Error('Invalid selector: id')\r\n    } else if (item.type === 'ClassName') {\r\n      throw new Error('Invalid selector: class')\r\n    } else if (item.type === 'PseudoClass') {\r\n      if (!pseudo(item, node, index, parent, state)) return false\r\n    } else if (item.type === 'PseudoElement') {\r\n      throw new Error('Invalid selector: `::' + item.name + '`')\r\n    } else if (item.type === 'TagName') {\r\n      if (item.name !== node.type) return false\r\n    } else {\r\n      // Otherwise `item.type` is `WildcardTag`, which matches.\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n", "/**\r\n * @typedef {import('css-selector-parser').AstRule} AstRule\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('unist').Parent} Parent\r\n * @typedef {import('./types.js').SelectState} SelectState\r\n *\r\n * @typedef Nest\r\n *   Rule sets by nesting.\r\n * @property {Array<AstRule> | undefined} descendant\r\n *   `a b`\r\n * @property {Array<AstRule> | undefined} directChild\r\n *   `a > b`\r\n * @property {Array<AstRule> | undefined} adjacentSibling\r\n *   `a + b`\r\n * @property {Array<AstRule> | undefined} generalSibling\r\n *   `a ~ b`\r\n *\r\n * @typedef Counts\r\n *   Info on nodes in a parent.\r\n * @property {number} count\r\n *   Number of nodes.\r\n * @property {Map<string, number>} types\r\n *   Number of nodes by type.\r\n */\r\n\r\nimport {test} from './test.js'\r\nimport {parent} from './util.js'\r\n\r\n/** @type {Array<never>} */\r\nconst empty = []\r\n\r\n/**\r\n * Walk a tree.\r\n *\r\n * @param {SelectState} state\r\n * @param {Node | undefined} tree\r\n */\r\nexport function walk(state, tree) {\r\n  if (tree) {\r\n    one(state, [], tree, undefined, undefined, tree)\r\n  }\r\n}\r\n\r\n/**\r\n * Check a node.\r\n *\r\n * @param {SelectState} state\r\n * @param {Array<AstRule>} currentRules\r\n * @param {Node} node\r\n * @param {number | undefined} index\r\n * @param {Parent | undefined} parentNode\r\n * @param {Node} tree\r\n * @returns {Nest}\r\n */\r\nfunction one(state, currentRules, node, index, parentNode, tree) {\r\n  /** @type {Nest} */\r\n  let nestResult = {\r\n    directChild: undefined,\r\n    descendant: undefined,\r\n    adjacentSibling: undefined,\r\n    generalSibling: undefined\r\n  }\r\n\r\n  let rootRules = state.rootQuery.rules\r\n\r\n  // Remove direct child rules if this is the root.\r\n  // This only happens for a `:has()` rule, which can be like\r\n  // `a:has(> b)`.\r\n  if (parentNode && parentNode !== tree) {\r\n    rootRules = state.rootQuery.rules.filter(\r\n      (d) =>\r\n        d.combinator === undefined ||\r\n        (d.combinator === '>' && parentNode === tree)\r\n    )\r\n  }\r\n\r\n  nestResult = applySelectors(\r\n    state,\r\n    // Try the root rules for this node too.\r\n    combine(currentRules, rootRules),\r\n    node,\r\n    index,\r\n    parentNode\r\n  )\r\n\r\n  // If this is a parent, and we want to delve into them, and we haven’t found\r\n  // our single result yet.\r\n  if (parent(node) && !state.shallow && !(state.one && state.found)) {\r\n    all(state, nestResult, node, tree)\r\n  }\r\n\r\n  return nestResult\r\n}\r\n\r\n/**\r\n * Check a node.\r\n *\r\n * @param {SelectState} state\r\n * @param {Nest} nest\r\n * @param {Parent} node\r\n * @param {Node} tree\r\n * @returns {undefined}\r\n */\r\nfunction all(state, nest, node, tree) {\r\n  const fromParent = combine(nest.descendant, nest.directChild)\r\n  /** @type {Array<AstRule> | undefined} */\r\n  let fromSibling\r\n  let index = -1\r\n  /**\r\n   * Total counts.\r\n   * @type {Counts}\r\n   */\r\n  const total = {count: 0, types: new Map()}\r\n  /**\r\n   * Counts of previous siblings.\r\n   * @type {Counts}\r\n   */\r\n  const before = {count: 0, types: new Map()}\r\n\r\n  while (++index < node.children.length) {\r\n    count(total, node.children[index])\r\n  }\r\n\r\n  index = -1\r\n\r\n  while (++index < node.children.length) {\r\n    const child = node.children[index]\r\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\r\n    const name = child.type.toUpperCase()\r\n    // Before counting further nodes:\r\n    state.nodeIndex = before.count\r\n    state.typeIndex = before.types.get(name) || 0\r\n    // After counting all nodes.\r\n    state.nodeCount = total.count\r\n    state.typeCount = total.types.get(name)\r\n\r\n    // Only apply if this is a parent.\r\n    const forSibling = combine(fromParent, fromSibling)\r\n    const nest = one(state, forSibling, node.children[index], index, node, tree)\r\n    fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\r\n\r\n    // We found one thing, and one is enough.\r\n    if (state.one && state.found) {\r\n      break\r\n    }\r\n\r\n    count(before, node.children[index])\r\n  }\r\n}\r\n\r\n/**\r\n * Apply selectors to a node.\r\n *\r\n * @param {SelectState} state\r\n *   Current state.\r\n * @param {Array<AstRule>} rules\r\n *   Rules to apply.\r\n * @param {Node} node\r\n *   Node to apply rules to.\r\n * @param {number | undefined} index\r\n *   Index of node in parent.\r\n * @param {Parent | undefined} parent\r\n *   Parent of node.\r\n * @returns {Nest}\r\n *   Further rules.\r\n */\r\nfunction applySelectors(state, rules, node, index, parent) {\r\n  /** @type {Nest} */\r\n  const nestResult = {\r\n    directChild: undefined,\r\n    descendant: undefined,\r\n    adjacentSibling: undefined,\r\n    generalSibling: undefined\r\n  }\r\n  let selectorIndex = -1\r\n\r\n  while (++selectorIndex < rules.length) {\r\n    const rule = rules[selectorIndex]\r\n\r\n    // We found one thing, and one is enough.\r\n    if (state.one && state.found) {\r\n      break\r\n    }\r\n\r\n    // When shallow, we don’t allow nested rules.\r\n    // Idea: we could allow a stack of parents?\r\n    // Might get quite complex though.\r\n    if (state.shallow && rule.nestedRule) {\r\n      throw new Error('Expected selector without nesting')\r\n    }\r\n\r\n    // If this rule matches:\r\n    if (test(rule, node, index, parent, state)) {\r\n      const nest = rule.nestedRule\r\n\r\n      // Are there more?\r\n      if (nest) {\r\n        /** @type {keyof Nest} */\r\n        const label =\r\n          nest.combinator === '+'\r\n            ? 'adjacentSibling'\r\n            : nest.combinator === '~'\r\n            ? 'generalSibling'\r\n            : nest.combinator === '>'\r\n            ? 'directChild'\r\n            : 'descendant'\r\n        add(nestResult, label, nest)\r\n      } else {\r\n        // We have a match!\r\n        state.found = true\r\n\r\n        if (!state.results.includes(node)) {\r\n          state.results.push(node)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Descendant.\r\n    if (rule.combinator === undefined) {\r\n      add(nestResult, 'descendant', rule)\r\n    }\r\n    // Adjacent.\r\n    else if (rule.combinator === '~') {\r\n      add(nestResult, 'generalSibling', rule)\r\n    }\r\n    // Drop direct child (`>`), adjacent sibling (`+`).\r\n  }\r\n\r\n  return nestResult\r\n}\r\n\r\n/**\r\n * Combine two lists, if needed.\r\n *\r\n * This is optimized to create as few lists as possible.\r\n *\r\n * @param {Array<AstRule> | undefined} left\r\n * @param {Array<AstRule> | undefined} right\r\n * @returns {Array<AstRule>}\r\n */\r\nfunction combine(left, right) {\r\n  return left && right && left.length > 0 && right.length > 0\r\n    ? [...left, ...right]\r\n    : left && left.length > 0\r\n    ? left\r\n    : right && right.length > 0\r\n    ? right\r\n    : empty\r\n}\r\n\r\n/**\r\n * Add a rule to a nesting map.\r\n *\r\n * @param {Nest} nest\r\n * @param {keyof Nest} field\r\n * @param {AstRule} rule\r\n */\r\nfunction add(nest, field, rule) {\r\n  const list = nest[field]\r\n  if (list) {\r\n    list.push(rule)\r\n  } else {\r\n    nest[field] = [rule]\r\n  }\r\n}\r\n\r\n/**\r\n * Count a node.\r\n *\r\n * @param {Counts} counts\r\n *   Counts.\r\n * @param {Node} node\r\n *   Node.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction count(counts, node) {\r\n  // Uppercase to prevent prototype polution, injecting `constructor` or so.\r\n  // Normalize because HTML is insensitive.\r\n  const name = node.type.toUpperCase()\r\n  const count = (counts.types.get(name) || 0) + 1\r\n  counts.count++\r\n  counts.types.set(name, count)\r\n}\r\n", "/**\r\n * @typedef {import('unist').Position} Position\r\n * @typedef {import('unist').Node} Node\r\n * @typedef {import('./lib/types.js').SelectState} SelectState\r\n */\r\n\r\n/**\r\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\r\n */\r\n\r\nimport {parse} from './lib/parse.js'\r\nimport {parent} from './lib/util.js'\r\nimport {walk} from './lib/walk.js'\r\n\r\n/**\r\n * Check that the given `node` matches `selector`.\r\n *\r\n * This only checks the node itself, not the surrounding tree.\r\n * Thus, nesting in selectors is not supported (`paragraph strong`,\r\n * `paragraph > strong`), neither are selectors like `:first-child`, etc.\r\n * This only checks that the given node matches the selector.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`heading`, `link, linkReference`).\r\n * @param {Node | NodeLike | null | undefined} [node]\r\n *   Node that might match `selector`.\r\n * @returns {boolean}\r\n *   Whether `node` matches `selector`.\r\n */\r\nexport function matches(selector, node) {\r\n  const state = createState(selector, node)\r\n  state.one = true\r\n  state.shallow = true\r\n  walk(state, node || undefined)\r\n  return state.results.length > 0\r\n}\r\n\r\n/**\r\n * Select the first node that matches `selector` in the given `tree`.\r\n *\r\n * Searches the tree in *preorder*.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`heading`, `link, linkReference`).\r\n * @param {Node | NodeLike | null | undefined} [tree]\r\n *   Tree to search.\r\n * @returns {Node | undefined}\r\n *   First node in `tree` that matches `selector` or `null` if nothing is\r\n *   found.\r\n *\r\n *   This could be `tree` itself.\r\n */\r\nexport function select(selector, tree) {\r\n  const state = createState(selector, tree)\r\n  state.one = true\r\n  walk(state, tree || undefined)\r\n  return state.results[0]\r\n}\r\n\r\n/**\r\n * Select all nodes that match `selector` in the given `tree`.\r\n *\r\n * Searches the tree in *preorder*.\r\n *\r\n * @param {string} selector\r\n *   CSS selector, such as (`heading`, `link, linkReference`).\r\n * @param {Node | NodeLike | null | undefined} [tree]\r\n *   Tree to search.\r\n * @returns {Array<Node>}\r\n *   Nodes in `tree` that match `selector`.\r\n *\r\n *   This could include `tree` itself.\r\n */\r\nexport function selectAll(selector, tree) {\r\n  const state = createState(selector, tree)\r\n  walk(state, tree || undefined)\r\n  return state.results\r\n}\r\n\r\n/**\r\n * @param {string} selector\r\n *   Selector to parse.\r\n * @param {Node | null | undefined} tree\r\n *   Tree to search.\r\n * @returns {SelectState}\r\n *   State.\r\n */\r\nfunction createState(selector, tree) {\r\n  return {\r\n    // State of the query.\r\n    rootQuery: parse(selector),\r\n    results: [],\r\n    scopeNodes: tree\r\n      ? parent(tree) &&\r\n        // Root in nlcst.\r\n        (tree.type === 'RootNode' || tree.type === 'root')\r\n        ? tree.children\r\n        : [tree]\r\n      : [],\r\n    one: false,\r\n    shallow: false,\r\n    found: false,\r\n    // State in the tree.\r\n    typeIndex: undefined,\r\n    nodeIndex: undefined,\r\n    typeCount: undefined,\r\n    nodeCount: undefined\r\n  }\r\n}\r\n", "export function appendClassName(node, className) {\r\n    if (!node.properties)\r\n        node.properties = {};\r\n    if (!node.properties.className)\r\n        node.properties.className = [];\r\n    if (typeof node.properties.className === 'string')\r\n        node.properties.className = [node.properties.className];\r\n    if (typeof node.properties.className === 'number')\r\n        node.properties.className = [node.properties.className];\r\n    if (typeof node.properties.className === 'boolean')\r\n        node.properties.className = [];\r\n    node.properties.className.push(className);\r\n}\r\n", "export function getLang(node) {\r\n    const lang = node.properties?.className?.[0] || '';\r\n    return lang.replace(/^language-/, '');\r\n}\r\n", "/**\r\n * @typedef {import('./info.js').Info} Info\r\n * @typedef {Record<string, Info>} Properties\r\n * @typedef {Record<string, string>} Normal\r\n */\r\n\r\nexport class Schema {\r\n  /**\r\n   * @constructor\r\n   * @param {Properties} property\r\n   * @param {Normal} normal\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, normal, space) {\r\n    this.property = property\r\n    this.normal = normal\r\n    if (space) {\r\n      this.space = space\r\n    }\r\n  }\r\n}\r\n\r\n/** @type {Properties} */\r\nSchema.prototype.property = {}\r\n/** @type {Normal} */\r\nSchema.prototype.normal = {}\r\n/** @type {string|null} */\r\nSchema.prototype.space = null\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n */\r\n\r\nimport {Schema} from './schema.js'\r\n\r\n/**\r\n * @param {Schema[]} definitions\r\n * @param {string} [space]\r\n * @returns {Schema}\r\n */\r\nexport function merge(definitions, space) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  let index = -1\r\n\r\n  while (++index < definitions.length) {\r\n    Object.assign(property, definitions[index].property)\r\n    Object.assign(normal, definitions[index].normal)\r\n  }\r\n\r\n  return new Schema(property, normal, space)\r\n}\r\n", "/**\r\n * @param {string} value\r\n * @returns {string}\r\n */\r\nexport function normalize(value) {\r\n  return value.toLowerCase()\r\n}\r\n", "export class Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   */\r\n  constructor(property, attribute) {\r\n    /** @type {string} */\r\n    this.property = property\r\n    /** @type {string} */\r\n    this.attribute = attribute\r\n  }\r\n}\r\n\r\n/** @type {string|null} */\r\nInfo.prototype.space = null\r\nInfo.prototype.boolean = false\r\nInfo.prototype.booleanish = false\r\nInfo.prototype.overloadedBoolean = false\r\nInfo.prototype.number = false\r\nInfo.prototype.commaSeparated = false\r\nInfo.prototype.spaceSeparated = false\r\nInfo.prototype.commaOrSpaceSeparated = false\r\nInfo.prototype.mustUseProperty = false\r\nInfo.prototype.defined = false\r\n", "let powers = 0\r\n\r\nexport const boolean = increment()\r\nexport const booleanish = increment()\r\nexport const overloadedBoolean = increment()\r\nexport const number = increment()\r\nexport const spaceSeparated = increment()\r\nexport const commaSeparated = increment()\r\nexport const commaOrSpaceSeparated = increment()\r\n\r\nfunction increment() {\r\n  return 2 ** ++powers\r\n}\r\n", "import {Info} from './info.js'\r\nimport * as types from './types.js'\r\n\r\n/** @type {Array<keyof types>} */\r\n// @ts-expect-error: hush.\r\nconst checks = Object.keys(types)\r\n\r\nexport class DefinedInfo extends Info {\r\n  /**\r\n   * @constructor\r\n   * @param {string} property\r\n   * @param {string} attribute\r\n   * @param {number|null} [mask]\r\n   * @param {string} [space]\r\n   */\r\n  constructor(property, attribute, mask, space) {\r\n    let index = -1\r\n\r\n    super(property, attribute)\r\n\r\n    mark(this, 'space', space)\r\n\r\n    if (typeof mask === 'number') {\r\n      while (++index < checks.length) {\r\n        const check = checks[index]\r\n        mark(this, checks[index], (mask & types[check]) === types[check])\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nDefinedInfo.prototype.defined = true\r\n\r\n/**\r\n * @param {DefinedInfo} values\r\n * @param {string} key\r\n * @param {unknown} value\r\n */\r\nfunction mark(values, key, value) {\r\n  if (value) {\r\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\r\n    values[key] = value\r\n  }\r\n}\r\n", "/**\r\n * @typedef {import('./schema.js').Properties} Properties\r\n * @typedef {import('./schema.js').Normal} Normal\r\n *\r\n * @typedef {Record<string, string>} Attributes\r\n *\r\n * @typedef {Object} Definition\r\n * @property {Record<string, number|null>} properties\r\n * @property {(attributes: Attributes, property: string) => string} transform\r\n * @property {string} [space]\r\n * @property {Attributes} [attributes]\r\n * @property {Array<string>} [mustUseProperty]\r\n */\r\n\r\nimport {normalize} from '../normalize.js'\r\nimport {Schema} from './schema.js'\r\nimport {DefinedInfo} from './defined-info.js'\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Definition} definition\r\n * @returns {Schema}\r\n */\r\nexport function create(definition) {\r\n  /** @type {Properties} */\r\n  const property = {}\r\n  /** @type {Normal} */\r\n  const normal = {}\r\n  /** @type {string} */\r\n  let prop\r\n\r\n  for (prop in definition.properties) {\r\n    if (own.call(definition.properties, prop)) {\r\n      const value = definition.properties[prop]\r\n      const info = new DefinedInfo(\r\n        prop,\r\n        definition.transform(definition.attributes || {}, prop),\r\n        value,\r\n        definition.space\r\n      )\r\n\r\n      if (\r\n        definition.mustUseProperty &&\r\n        definition.mustUseProperty.includes(prop)\r\n      ) {\r\n        info.mustUseProperty = true\r\n      }\r\n\r\n      property[prop] = info\r\n\r\n      normal[normalize(prop)] = prop\r\n      normal[normalize(info.attribute)] = prop\r\n    }\r\n  }\r\n\r\n  return new Schema(property, normal, definition.space)\r\n}\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xlink = create({\r\n  space: 'xlink',\r\n  transform(_, prop) {\r\n    return 'xlink:' + prop.slice(5).toLowerCase()\r\n  },\r\n  properties: {\r\n    xLinkActuate: null,\r\n    xLinkArcRole: null,\r\n    xLinkHref: null,\r\n    xLinkRole: null,\r\n    xLinkShow: null,\r\n    xLinkTitle: null,\r\n    xLinkType: null\r\n  }\r\n})\r\n", "import {create} from './util/create.js'\r\n\r\nexport const xml = create({\r\n  space: 'xml',\r\n  transform(_, prop) {\r\n    return 'xml:' + prop.slice(3).toLowerCase()\r\n  },\r\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\r\n})\r\n", "/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} attribute\r\n * @returns {string}\r\n */\r\nexport function caseSensitiveTransform(attributes, attribute) {\r\n  return attribute in attributes ? attributes[attribute] : attribute\r\n}\r\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\r\n\r\n/**\r\n * @param {Record<string, string>} attributes\r\n * @param {string} property\r\n * @returns {string}\r\n */\r\nexport function caseInsensitiveTransform(attributes, property) {\r\n  return caseSensitiveTransform(attributes, property.toLowerCase())\r\n}\r\n", "import {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const xmlns = create({\r\n  space: 'xmlns',\r\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\r\n  transform: caseInsensitiveTransform,\r\n  properties: {xmlns: null, xmlnsXLink: null}\r\n})\r\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\r\nimport {create} from './util/create.js'\r\n\r\nexport const aria = create({\r\n  transform(_, prop) {\r\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\r\n  },\r\n  properties: {\r\n    ariaActiveDescendant: null,\r\n    ariaAtomic: booleanish,\r\n    ariaAutoComplete: null,\r\n    ariaBusy: booleanish,\r\n    ariaChecked: booleanish,\r\n    ariaColCount: number,\r\n    ariaColIndex: number,\r\n    ariaColSpan: number,\r\n    ariaControls: spaceSeparated,\r\n    ariaCurrent: null,\r\n    ariaDescribedBy: spaceSeparated,\r\n    ariaDetails: null,\r\n    ariaDisabled: booleanish,\r\n    ariaDropEffect: spaceSeparated,\r\n    ariaErrorMessage: null,\r\n    ariaExpanded: booleanish,\r\n    ariaFlowTo: spaceSeparated,\r\n    ariaGrabbed: booleanish,\r\n    ariaHasPopup: null,\r\n    ariaHidden: booleanish,\r\n    ariaInvalid: null,\r\n    ariaKeyShortcuts: null,\r\n    ariaLabel: null,\r\n    ariaLabelledBy: spaceSeparated,\r\n    ariaLevel: number,\r\n    ariaLive: null,\r\n    ariaModal: booleanish,\r\n    ariaMultiLine: booleanish,\r\n    ariaMultiSelectable: booleanish,\r\n    ariaOrientation: null,\r\n    ariaOwns: spaceSeparated,\r\n    ariaPlaceholder: null,\r\n    ariaPosInSet: number,\r\n    ariaPressed: booleanish,\r\n    ariaReadOnly: booleanish,\r\n    ariaRelevant: null,\r\n    ariaRequired: booleanish,\r\n    ariaRoleDescription: spaceSeparated,\r\n    ariaRowCount: number,\r\n    ariaRowIndex: number,\r\n    ariaRowSpan: number,\r\n    ariaSelected: booleanish,\r\n    ariaSetSize: number,\r\n    ariaSort: null,\r\n    ariaValueMax: number,\r\n    ariaValueMin: number,\r\n    ariaValueNow: number,\r\n    ariaValueText: null,\r\n    role: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  overloadedBoolean,\r\n  booleanish,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\r\n\r\nexport const html = create({\r\n  space: 'html',\r\n  attributes: {\r\n    acceptcharset: 'accept-charset',\r\n    classname: 'class',\r\n    htmlfor: 'for',\r\n    httpequiv: 'http-equiv'\r\n  },\r\n  transform: caseInsensitiveTransform,\r\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\r\n  properties: {\r\n    // Standard Properties.\r\n    abbr: null,\r\n    accept: commaSeparated,\r\n    acceptCharset: spaceSeparated,\r\n    accessKey: spaceSeparated,\r\n    action: null,\r\n    allow: null,\r\n    allowFullScreen: boolean,\r\n    allowPaymentRequest: boolean,\r\n    allowUserMedia: boolean,\r\n    alt: null,\r\n    as: null,\r\n    async: boolean,\r\n    autoCapitalize: null,\r\n    autoComplete: spaceSeparated,\r\n    autoFocus: boolean,\r\n    autoPlay: boolean,\r\n    blocking: spaceSeparated,\r\n    capture: null,\r\n    charSet: null,\r\n    checked: boolean,\r\n    cite: null,\r\n    className: spaceSeparated,\r\n    cols: number,\r\n    colSpan: null,\r\n    content: null,\r\n    contentEditable: booleanish,\r\n    controls: boolean,\r\n    controlsList: spaceSeparated,\r\n    coords: number | commaSeparated,\r\n    crossOrigin: null,\r\n    data: null,\r\n    dateTime: null,\r\n    decoding: null,\r\n    default: boolean,\r\n    defer: boolean,\r\n    dir: null,\r\n    dirName: null,\r\n    disabled: boolean,\r\n    download: overloadedBoolean,\r\n    draggable: booleanish,\r\n    encType: null,\r\n    enterKeyHint: null,\r\n    fetchPriority: null,\r\n    form: null,\r\n    formAction: null,\r\n    formEncType: null,\r\n    formMethod: null,\r\n    formNoValidate: boolean,\r\n    formTarget: null,\r\n    headers: spaceSeparated,\r\n    height: number,\r\n    hidden: boolean,\r\n    high: number,\r\n    href: null,\r\n    hrefLang: null,\r\n    htmlFor: spaceSeparated,\r\n    httpEquiv: spaceSeparated,\r\n    id: null,\r\n    imageSizes: null,\r\n    imageSrcSet: null,\r\n    inert: boolean,\r\n    inputMode: null,\r\n    integrity: null,\r\n    is: null,\r\n    isMap: boolean,\r\n    itemId: null,\r\n    itemProp: spaceSeparated,\r\n    itemRef: spaceSeparated,\r\n    itemScope: boolean,\r\n    itemType: spaceSeparated,\r\n    kind: null,\r\n    label: null,\r\n    lang: null,\r\n    language: null,\r\n    list: null,\r\n    loading: null,\r\n    loop: boolean,\r\n    low: number,\r\n    manifest: null,\r\n    max: null,\r\n    maxLength: number,\r\n    media: null,\r\n    method: null,\r\n    min: null,\r\n    minLength: number,\r\n    multiple: boolean,\r\n    muted: boolean,\r\n    name: null,\r\n    nonce: null,\r\n    noModule: boolean,\r\n    noValidate: boolean,\r\n    onAbort: null,\r\n    onAfterPrint: null,\r\n    onAuxClick: null,\r\n    onBeforeMatch: null,\r\n    onBeforePrint: null,\r\n    onBeforeToggle: null,\r\n    onBeforeUnload: null,\r\n    onBlur: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onContextLost: null,\r\n    onContextMenu: null,\r\n    onContextRestored: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFormData: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLanguageChange: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadEnd: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMessageError: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRejectionHandled: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onScrollEnd: null,\r\n    onSecurityPolicyViolation: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onSlotChange: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnhandledRejection: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onWheel: null,\r\n    open: boolean,\r\n    optimum: number,\r\n    pattern: null,\r\n    ping: spaceSeparated,\r\n    placeholder: null,\r\n    playsInline: boolean,\r\n    popover: null,\r\n    popoverTarget: null,\r\n    popoverTargetAction: null,\r\n    poster: null,\r\n    preload: null,\r\n    readOnly: boolean,\r\n    referrerPolicy: null,\r\n    rel: spaceSeparated,\r\n    required: boolean,\r\n    reversed: boolean,\r\n    rows: number,\r\n    rowSpan: number,\r\n    sandbox: spaceSeparated,\r\n    scope: null,\r\n    scoped: boolean,\r\n    seamless: boolean,\r\n    selected: boolean,\r\n    shadowRootClonable: boolean,\r\n    shadowRootDelegatesFocus: boolean,\r\n    shadowRootMode: null,\r\n    shape: null,\r\n    size: number,\r\n    sizes: null,\r\n    slot: null,\r\n    span: number,\r\n    spellCheck: booleanish,\r\n    src: null,\r\n    srcDoc: null,\r\n    srcLang: null,\r\n    srcSet: null,\r\n    start: number,\r\n    step: null,\r\n    style: null,\r\n    tabIndex: number,\r\n    target: null,\r\n    title: null,\r\n    translate: null,\r\n    type: null,\r\n    typeMustMatch: boolean,\r\n    useMap: null,\r\n    value: booleanish,\r\n    width: number,\r\n    wrap: null,\r\n    writingSuggestions: null,\r\n\r\n    // Legacy.\r\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\r\n    align: null, // Several. Use CSS `text-align` instead,\r\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\r\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\r\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\r\n    background: null, // `<body>`. Use CSS `background-image` instead\r\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\r\n    border: number, // `<table>`. Use CSS `border-width` instead,\r\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\r\n    bottomMargin: number, // `<body>`\r\n    cellPadding: null, // `<table>`\r\n    cellSpacing: null, // `<table>`\r\n    char: null, // Several table elements. When `align=char`, sets the character to align on\r\n    charOff: null, // Several table elements. When `char`, offsets the alignment\r\n    classId: null, // `<object>`\r\n    clear: null, // `<br>`. Use CSS `clear` instead\r\n    code: null, // `<object>`\r\n    codeBase: null, // `<object>`\r\n    codeType: null, // `<object>`\r\n    color: null, // `<font>` and `<hr>`. Use CSS instead\r\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\r\n    declare: boolean, // `<object>`\r\n    event: null, // `<script>`\r\n    face: null, // `<font>`. Use CSS instead\r\n    frame: null, // `<table>`\r\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\r\n    hSpace: number, // `<img>` and `<object>`\r\n    leftMargin: number, // `<body>`\r\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\r\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\r\n    lowSrc: null, // `<img>`. Use a `<picture>`\r\n    marginHeight: number, // `<body>`\r\n    marginWidth: number, // `<body>`\r\n    noResize: boolean, // `<frame>`\r\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\r\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\r\n    noWrap: boolean, // `<td>` and `<th>`\r\n    object: null, // `<applet>`\r\n    profile: null, // `<head>`\r\n    prompt: null, // `<isindex>`\r\n    rev: null, // `<link>`\r\n    rightMargin: number, // `<body>`\r\n    rules: null, // `<table>`\r\n    scheme: null, // `<meta>`\r\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\r\n    standby: null, // `<object>`\r\n    summary: null, // `<table>`\r\n    text: null, // `<body>`. Use CSS `color` instead\r\n    topMargin: number, // `<body>`\r\n    valueType: null, // `<param>`\r\n    version: null, // `<html>`. Use a doctype.\r\n    vAlign: null, // Several. Use CSS `vertical-align` instead\r\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\r\n    vSpace: number, // `<img>` and `<object>`\r\n\r\n    // Non-standard Properties.\r\n    allowTransparency: null,\r\n    autoCorrect: null,\r\n    autoSave: null,\r\n    disablePictureInPicture: boolean,\r\n    disableRemotePlayback: boolean,\r\n    prefix: null,\r\n    property: null,\r\n    results: number,\r\n    security: null,\r\n    unselectable: null\r\n  }\r\n})\r\n", "import {\r\n  boolean,\r\n  number,\r\n  spaceSeparated,\r\n  commaSeparated,\r\n  commaOrSpaceSeparated\r\n} from './util/types.js'\r\nimport {create} from './util/create.js'\r\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\r\n\r\nexport const svg = create({\r\n  space: 'svg',\r\n  attributes: {\r\n    accentHeight: 'accent-height',\r\n    alignmentBaseline: 'alignment-baseline',\r\n    arabicForm: 'arabic-form',\r\n    baselineShift: 'baseline-shift',\r\n    capHeight: 'cap-height',\r\n    className: 'class',\r\n    clipPath: 'clip-path',\r\n    clipRule: 'clip-rule',\r\n    colorInterpolation: 'color-interpolation',\r\n    colorInterpolationFilters: 'color-interpolation-filters',\r\n    colorProfile: 'color-profile',\r\n    colorRendering: 'color-rendering',\r\n    crossOrigin: 'crossorigin',\r\n    dataType: 'datatype',\r\n    dominantBaseline: 'dominant-baseline',\r\n    enableBackground: 'enable-background',\r\n    fillOpacity: 'fill-opacity',\r\n    fillRule: 'fill-rule',\r\n    floodColor: 'flood-color',\r\n    floodOpacity: 'flood-opacity',\r\n    fontFamily: 'font-family',\r\n    fontSize: 'font-size',\r\n    fontSizeAdjust: 'font-size-adjust',\r\n    fontStretch: 'font-stretch',\r\n    fontStyle: 'font-style',\r\n    fontVariant: 'font-variant',\r\n    fontWeight: 'font-weight',\r\n    glyphName: 'glyph-name',\r\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\r\n    glyphOrientationVertical: 'glyph-orientation-vertical',\r\n    hrefLang: 'hreflang',\r\n    horizAdvX: 'horiz-adv-x',\r\n    horizOriginX: 'horiz-origin-x',\r\n    horizOriginY: 'horiz-origin-y',\r\n    imageRendering: 'image-rendering',\r\n    letterSpacing: 'letter-spacing',\r\n    lightingColor: 'lighting-color',\r\n    markerEnd: 'marker-end',\r\n    markerMid: 'marker-mid',\r\n    markerStart: 'marker-start',\r\n    navDown: 'nav-down',\r\n    navDownLeft: 'nav-down-left',\r\n    navDownRight: 'nav-down-right',\r\n    navLeft: 'nav-left',\r\n    navNext: 'nav-next',\r\n    navPrev: 'nav-prev',\r\n    navRight: 'nav-right',\r\n    navUp: 'nav-up',\r\n    navUpLeft: 'nav-up-left',\r\n    navUpRight: 'nav-up-right',\r\n    onAbort: 'onabort',\r\n    onActivate: 'onactivate',\r\n    onAfterPrint: 'onafterprint',\r\n    onBeforePrint: 'onbeforeprint',\r\n    onBegin: 'onbegin',\r\n    onCancel: 'oncancel',\r\n    onCanPlay: 'oncanplay',\r\n    onCanPlayThrough: 'oncanplaythrough',\r\n    onChange: 'onchange',\r\n    onClick: 'onclick',\r\n    onClose: 'onclose',\r\n    onCopy: 'oncopy',\r\n    onCueChange: 'oncuechange',\r\n    onCut: 'oncut',\r\n    onDblClick: 'ondblclick',\r\n    onDrag: 'ondrag',\r\n    onDragEnd: 'ondragend',\r\n    onDragEnter: 'ondragenter',\r\n    onDragExit: 'ondragexit',\r\n    onDragLeave: 'ondragleave',\r\n    onDragOver: 'ondragover',\r\n    onDragStart: 'ondragstart',\r\n    onDrop: 'ondrop',\r\n    onDurationChange: 'ondurationchange',\r\n    onEmptied: 'onemptied',\r\n    onEnd: 'onend',\r\n    onEnded: 'onended',\r\n    onError: 'onerror',\r\n    onFocus: 'onfocus',\r\n    onFocusIn: 'onfocusin',\r\n    onFocusOut: 'onfocusout',\r\n    onHashChange: 'onhashchange',\r\n    onInput: 'oninput',\r\n    onInvalid: 'oninvalid',\r\n    onKeyDown: 'onkeydown',\r\n    onKeyPress: 'onkeypress',\r\n    onKeyUp: 'onkeyup',\r\n    onLoad: 'onload',\r\n    onLoadedData: 'onloadeddata',\r\n    onLoadedMetadata: 'onloadedmetadata',\r\n    onLoadStart: 'onloadstart',\r\n    onMessage: 'onmessage',\r\n    onMouseDown: 'onmousedown',\r\n    onMouseEnter: 'onmouseenter',\r\n    onMouseLeave: 'onmouseleave',\r\n    onMouseMove: 'onmousemove',\r\n    onMouseOut: 'onmouseout',\r\n    onMouseOver: 'onmouseover',\r\n    onMouseUp: 'onmouseup',\r\n    onMouseWheel: 'onmousewheel',\r\n    onOffline: 'onoffline',\r\n    onOnline: 'ononline',\r\n    onPageHide: 'onpagehide',\r\n    onPageShow: 'onpageshow',\r\n    onPaste: 'onpaste',\r\n    onPause: 'onpause',\r\n    onPlay: 'onplay',\r\n    onPlaying: 'onplaying',\r\n    onPopState: 'onpopstate',\r\n    onProgress: 'onprogress',\r\n    onRateChange: 'onratechange',\r\n    onRepeat: 'onrepeat',\r\n    onReset: 'onreset',\r\n    onResize: 'onresize',\r\n    onScroll: 'onscroll',\r\n    onSeeked: 'onseeked',\r\n    onSeeking: 'onseeking',\r\n    onSelect: 'onselect',\r\n    onShow: 'onshow',\r\n    onStalled: 'onstalled',\r\n    onStorage: 'onstorage',\r\n    onSubmit: 'onsubmit',\r\n    onSuspend: 'onsuspend',\r\n    onTimeUpdate: 'ontimeupdate',\r\n    onToggle: 'ontoggle',\r\n    onUnload: 'onunload',\r\n    onVolumeChange: 'onvolumechange',\r\n    onWaiting: 'onwaiting',\r\n    onZoom: 'onzoom',\r\n    overlinePosition: 'overline-position',\r\n    overlineThickness: 'overline-thickness',\r\n    paintOrder: 'paint-order',\r\n    panose1: 'panose-1',\r\n    pointerEvents: 'pointer-events',\r\n    referrerPolicy: 'referrerpolicy',\r\n    renderingIntent: 'rendering-intent',\r\n    shapeRendering: 'shape-rendering',\r\n    stopColor: 'stop-color',\r\n    stopOpacity: 'stop-opacity',\r\n    strikethroughPosition: 'strikethrough-position',\r\n    strikethroughThickness: 'strikethrough-thickness',\r\n    strokeDashArray: 'stroke-dasharray',\r\n    strokeDashOffset: 'stroke-dashoffset',\r\n    strokeLineCap: 'stroke-linecap',\r\n    strokeLineJoin: 'stroke-linejoin',\r\n    strokeMiterLimit: 'stroke-miterlimit',\r\n    strokeOpacity: 'stroke-opacity',\r\n    strokeWidth: 'stroke-width',\r\n    tabIndex: 'tabindex',\r\n    textAnchor: 'text-anchor',\r\n    textDecoration: 'text-decoration',\r\n    textRendering: 'text-rendering',\r\n    transformOrigin: 'transform-origin',\r\n    typeOf: 'typeof',\r\n    underlinePosition: 'underline-position',\r\n    underlineThickness: 'underline-thickness',\r\n    unicodeBidi: 'unicode-bidi',\r\n    unicodeRange: 'unicode-range',\r\n    unitsPerEm: 'units-per-em',\r\n    vAlphabetic: 'v-alphabetic',\r\n    vHanging: 'v-hanging',\r\n    vIdeographic: 'v-ideographic',\r\n    vMathematical: 'v-mathematical',\r\n    vectorEffect: 'vector-effect',\r\n    vertAdvY: 'vert-adv-y',\r\n    vertOriginX: 'vert-origin-x',\r\n    vertOriginY: 'vert-origin-y',\r\n    wordSpacing: 'word-spacing',\r\n    writingMode: 'writing-mode',\r\n    xHeight: 'x-height',\r\n    // These were camelcased in Tiny. Now lowercased in SVG 2\r\n    playbackOrder: 'playbackorder',\r\n    timelineBegin: 'timelinebegin'\r\n  },\r\n  transform: caseSensitiveTransform,\r\n  properties: {\r\n    about: commaOrSpaceSeparated,\r\n    accentHeight: number,\r\n    accumulate: null,\r\n    additive: null,\r\n    alignmentBaseline: null,\r\n    alphabetic: number,\r\n    amplitude: number,\r\n    arabicForm: null,\r\n    ascent: number,\r\n    attributeName: null,\r\n    attributeType: null,\r\n    azimuth: number,\r\n    bandwidth: null,\r\n    baselineShift: null,\r\n    baseFrequency: null,\r\n    baseProfile: null,\r\n    bbox: null,\r\n    begin: null,\r\n    bias: number,\r\n    by: null,\r\n    calcMode: null,\r\n    capHeight: number,\r\n    className: spaceSeparated,\r\n    clip: null,\r\n    clipPath: null,\r\n    clipPathUnits: null,\r\n    clipRule: null,\r\n    color: null,\r\n    colorInterpolation: null,\r\n    colorInterpolationFilters: null,\r\n    colorProfile: null,\r\n    colorRendering: null,\r\n    content: null,\r\n    contentScriptType: null,\r\n    contentStyleType: null,\r\n    crossOrigin: null,\r\n    cursor: null,\r\n    cx: null,\r\n    cy: null,\r\n    d: null,\r\n    dataType: null,\r\n    defaultAction: null,\r\n    descent: number,\r\n    diffuseConstant: number,\r\n    direction: null,\r\n    display: null,\r\n    dur: null,\r\n    divisor: number,\r\n    dominantBaseline: null,\r\n    download: boolean,\r\n    dx: null,\r\n    dy: null,\r\n    edgeMode: null,\r\n    editable: null,\r\n    elevation: number,\r\n    enableBackground: null,\r\n    end: null,\r\n    event: null,\r\n    exponent: number,\r\n    externalResourcesRequired: null,\r\n    fill: null,\r\n    fillOpacity: number,\r\n    fillRule: null,\r\n    filter: null,\r\n    filterRes: null,\r\n    filterUnits: null,\r\n    floodColor: null,\r\n    floodOpacity: null,\r\n    focusable: null,\r\n    focusHighlight: null,\r\n    fontFamily: null,\r\n    fontSize: null,\r\n    fontSizeAdjust: null,\r\n    fontStretch: null,\r\n    fontStyle: null,\r\n    fontVariant: null,\r\n    fontWeight: null,\r\n    format: null,\r\n    fr: null,\r\n    from: null,\r\n    fx: null,\r\n    fy: null,\r\n    g1: commaSeparated,\r\n    g2: commaSeparated,\r\n    glyphName: commaSeparated,\r\n    glyphOrientationHorizontal: null,\r\n    glyphOrientationVertical: null,\r\n    glyphRef: null,\r\n    gradientTransform: null,\r\n    gradientUnits: null,\r\n    handler: null,\r\n    hanging: number,\r\n    hatchContentUnits: null,\r\n    hatchUnits: null,\r\n    height: null,\r\n    href: null,\r\n    hrefLang: null,\r\n    horizAdvX: number,\r\n    horizOriginX: number,\r\n    horizOriginY: number,\r\n    id: null,\r\n    ideographic: number,\r\n    imageRendering: null,\r\n    initialVisibility: null,\r\n    in: null,\r\n    in2: null,\r\n    intercept: number,\r\n    k: number,\r\n    k1: number,\r\n    k2: number,\r\n    k3: number,\r\n    k4: number,\r\n    kernelMatrix: commaOrSpaceSeparated,\r\n    kernelUnitLength: null,\r\n    keyPoints: null, // SEMI_COLON_SEPARATED\r\n    keySplines: null, // SEMI_COLON_SEPARATED\r\n    keyTimes: null, // SEMI_COLON_SEPARATED\r\n    kerning: null,\r\n    lang: null,\r\n    lengthAdjust: null,\r\n    letterSpacing: null,\r\n    lightingColor: null,\r\n    limitingConeAngle: number,\r\n    local: null,\r\n    markerEnd: null,\r\n    markerMid: null,\r\n    markerStart: null,\r\n    markerHeight: null,\r\n    markerUnits: null,\r\n    markerWidth: null,\r\n    mask: null,\r\n    maskContentUnits: null,\r\n    maskUnits: null,\r\n    mathematical: null,\r\n    max: null,\r\n    media: null,\r\n    mediaCharacterEncoding: null,\r\n    mediaContentEncodings: null,\r\n    mediaSize: number,\r\n    mediaTime: null,\r\n    method: null,\r\n    min: null,\r\n    mode: null,\r\n    name: null,\r\n    navDown: null,\r\n    navDownLeft: null,\r\n    navDownRight: null,\r\n    navLeft: null,\r\n    navNext: null,\r\n    navPrev: null,\r\n    navRight: null,\r\n    navUp: null,\r\n    navUpLeft: null,\r\n    navUpRight: null,\r\n    numOctaves: null,\r\n    observer: null,\r\n    offset: null,\r\n    onAbort: null,\r\n    onActivate: null,\r\n    onAfterPrint: null,\r\n    onBeforePrint: null,\r\n    onBegin: null,\r\n    onCancel: null,\r\n    onCanPlay: null,\r\n    onCanPlayThrough: null,\r\n    onChange: null,\r\n    onClick: null,\r\n    onClose: null,\r\n    onCopy: null,\r\n    onCueChange: null,\r\n    onCut: null,\r\n    onDblClick: null,\r\n    onDrag: null,\r\n    onDragEnd: null,\r\n    onDragEnter: null,\r\n    onDragExit: null,\r\n    onDragLeave: null,\r\n    onDragOver: null,\r\n    onDragStart: null,\r\n    onDrop: null,\r\n    onDurationChange: null,\r\n    onEmptied: null,\r\n    onEnd: null,\r\n    onEnded: null,\r\n    onError: null,\r\n    onFocus: null,\r\n    onFocusIn: null,\r\n    onFocusOut: null,\r\n    onHashChange: null,\r\n    onInput: null,\r\n    onInvalid: null,\r\n    onKeyDown: null,\r\n    onKeyPress: null,\r\n    onKeyUp: null,\r\n    onLoad: null,\r\n    onLoadedData: null,\r\n    onLoadedMetadata: null,\r\n    onLoadStart: null,\r\n    onMessage: null,\r\n    onMouseDown: null,\r\n    onMouseEnter: null,\r\n    onMouseLeave: null,\r\n    onMouseMove: null,\r\n    onMouseOut: null,\r\n    onMouseOver: null,\r\n    onMouseUp: null,\r\n    onMouseWheel: null,\r\n    onOffline: null,\r\n    onOnline: null,\r\n    onPageHide: null,\r\n    onPageShow: null,\r\n    onPaste: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onPlaying: null,\r\n    onPopState: null,\r\n    onProgress: null,\r\n    onRateChange: null,\r\n    onRepeat: null,\r\n    onReset: null,\r\n    onResize: null,\r\n    onScroll: null,\r\n    onSeeked: null,\r\n    onSeeking: null,\r\n    onSelect: null,\r\n    onShow: null,\r\n    onStalled: null,\r\n    onStorage: null,\r\n    onSubmit: null,\r\n    onSuspend: null,\r\n    onTimeUpdate: null,\r\n    onToggle: null,\r\n    onUnload: null,\r\n    onVolumeChange: null,\r\n    onWaiting: null,\r\n    onZoom: null,\r\n    opacity: null,\r\n    operator: null,\r\n    order: null,\r\n    orient: null,\r\n    orientation: null,\r\n    origin: null,\r\n    overflow: null,\r\n    overlay: null,\r\n    overlinePosition: number,\r\n    overlineThickness: number,\r\n    paintOrder: null,\r\n    panose1: null,\r\n    path: null,\r\n    pathLength: number,\r\n    patternContentUnits: null,\r\n    patternTransform: null,\r\n    patternUnits: null,\r\n    phase: null,\r\n    ping: spaceSeparated,\r\n    pitch: null,\r\n    playbackOrder: null,\r\n    pointerEvents: null,\r\n    points: null,\r\n    pointsAtX: number,\r\n    pointsAtY: number,\r\n    pointsAtZ: number,\r\n    preserveAlpha: null,\r\n    preserveAspectRatio: null,\r\n    primitiveUnits: null,\r\n    propagate: null,\r\n    property: commaOrSpaceSeparated,\r\n    r: null,\r\n    radius: null,\r\n    referrerPolicy: null,\r\n    refX: null,\r\n    refY: null,\r\n    rel: commaOrSpaceSeparated,\r\n    rev: commaOrSpaceSeparated,\r\n    renderingIntent: null,\r\n    repeatCount: null,\r\n    repeatDur: null,\r\n    requiredExtensions: commaOrSpaceSeparated,\r\n    requiredFeatures: commaOrSpaceSeparated,\r\n    requiredFonts: commaOrSpaceSeparated,\r\n    requiredFormats: commaOrSpaceSeparated,\r\n    resource: null,\r\n    restart: null,\r\n    result: null,\r\n    rotate: null,\r\n    rx: null,\r\n    ry: null,\r\n    scale: null,\r\n    seed: null,\r\n    shapeRendering: null,\r\n    side: null,\r\n    slope: null,\r\n    snapshotTime: null,\r\n    specularConstant: number,\r\n    specularExponent: number,\r\n    spreadMethod: null,\r\n    spacing: null,\r\n    startOffset: null,\r\n    stdDeviation: null,\r\n    stemh: null,\r\n    stemv: null,\r\n    stitchTiles: null,\r\n    stopColor: null,\r\n    stopOpacity: null,\r\n    strikethroughPosition: number,\r\n    strikethroughThickness: number,\r\n    string: null,\r\n    stroke: null,\r\n    strokeDashArray: commaOrSpaceSeparated,\r\n    strokeDashOffset: null,\r\n    strokeLineCap: null,\r\n    strokeLineJoin: null,\r\n    strokeMiterLimit: number,\r\n    strokeOpacity: number,\r\n    strokeWidth: null,\r\n    style: null,\r\n    surfaceScale: number,\r\n    syncBehavior: null,\r\n    syncBehaviorDefault: null,\r\n    syncMaster: null,\r\n    syncTolerance: null,\r\n    syncToleranceDefault: null,\r\n    systemLanguage: commaOrSpaceSeparated,\r\n    tabIndex: number,\r\n    tableValues: null,\r\n    target: null,\r\n    targetX: number,\r\n    targetY: number,\r\n    textAnchor: null,\r\n    textDecoration: null,\r\n    textRendering: null,\r\n    textLength: null,\r\n    timelineBegin: null,\r\n    title: null,\r\n    transformBehavior: null,\r\n    type: null,\r\n    typeOf: commaOrSpaceSeparated,\r\n    to: null,\r\n    transform: null,\r\n    transformOrigin: null,\r\n    u1: null,\r\n    u2: null,\r\n    underlinePosition: number,\r\n    underlineThickness: number,\r\n    unicode: null,\r\n    unicodeBidi: null,\r\n    unicodeRange: null,\r\n    unitsPerEm: number,\r\n    values: null,\r\n    vAlphabetic: number,\r\n    vMathematical: number,\r\n    vectorEffect: null,\r\n    vHanging: number,\r\n    vIdeographic: number,\r\n    version: null,\r\n    vertAdvY: number,\r\n    vertOriginX: number,\r\n    vertOriginY: number,\r\n    viewBox: null,\r\n    viewTarget: null,\r\n    visibility: null,\r\n    width: null,\r\n    widths: null,\r\n    wordSpacing: null,\r\n    writingMode: null,\r\n    x: null,\r\n    x1: null,\r\n    x2: null,\r\n    xChannelSelector: null,\r\n    xHeight: number,\r\n    y: null,\r\n    y1: null,\r\n    y2: null,\r\n    yChannelSelector: null,\r\n    z: null,\r\n    zoomAndPan: null\r\n  }\r\n})\r\n", "/**\r\n * @typedef {import('./util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {normalize} from './normalize.js'\r\nimport {DefinedInfo} from './util/defined-info.js'\r\nimport {Info} from './util/info.js'\r\n\r\nconst valid = /^data[-\\w.:]+$/i\r\nconst dash = /-[a-z]/g\r\nconst cap = /[A-Z]/g\r\n\r\n/**\r\n * @param {Schema} schema\r\n * @param {string} value\r\n * @returns {Info}\r\n */\r\nexport function find(schema, value) {\r\n  const normal = normalize(value)\r\n  let prop = value\r\n  let Type = Info\r\n\r\n  if (normal in schema.normal) {\r\n    return schema.property[schema.normal[normal]]\r\n  }\r\n\r\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\r\n    // Attribute or property.\r\n    if (value.charAt(4) === '-') {\r\n      // Turn it into a property.\r\n      const rest = value.slice(5).replace(dash, camelcase)\r\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\r\n    } else {\r\n      // Turn it into an attribute.\r\n      const rest = value.slice(4)\r\n\r\n      if (!dash.test(rest)) {\r\n        let dashes = rest.replace(cap, kebab)\r\n\r\n        if (dashes.charAt(0) !== '-') {\r\n          dashes = '-' + dashes\r\n        }\r\n\r\n        value = 'data' + dashes\r\n      }\r\n    }\r\n\r\n    Type = DefinedInfo\r\n  }\r\n\r\n  return new Type(prop, value)\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction kebab($0) {\r\n  return '-' + $0.toLowerCase()\r\n}\r\n\r\n/**\r\n * @param {string} $0\r\n * @returns {string}\r\n */\r\nfunction camelcase($0) {\r\n  return $0.charAt(1).toUpperCase()\r\n}\r\n", "/**\r\n * @typedef {import('./lib/util/info.js').Info} Info\r\n * @typedef {import('./lib/util/schema.js').Schema} Schema\r\n */\r\n\r\nimport {merge} from './lib/util/merge.js'\r\nimport {xlink} from './lib/xlink.js'\r\nimport {xml} from './lib/xml.js'\r\nimport {xmlns} from './lib/xmlns.js'\r\nimport {aria} from './lib/aria.js'\r\nimport {html as htmlBase} from './lib/html.js'\r\nimport {svg as svgBase} from './lib/svg.js'\r\n\r\nexport {find} from './lib/find.js'\r\nexport {hastToReact} from './lib/hast-to-react.js'\r\nexport {normalize} from './lib/normalize.js'\r\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\r\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\r\n", "/**\r\n * @typedef {import('hast').Element} Element\r\n * @typedef {import('hast').Nodes} Nodes\r\n * @typedef {import('hast').Root} Root\r\n * @typedef {import('hast').RootContent} RootContent\r\n *\r\n * @typedef {import('property-information').Info} Info\r\n * @typedef {import('property-information').Schema} Schema\r\n */\r\n\r\n/**\r\n * @typedef {Element | Root} Result\r\n *   Result from a `h` (or `s`) call.\r\n *\r\n * @typedef {number | string} StyleValue\r\n *   Value for a CSS style field.\r\n * @typedef {Record<string, StyleValue>} Style\r\n *   Supported value of a `style` prop.\r\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\r\n *   Primitive property value.\r\n * @typedef {Array<number | string>} ArrayValue\r\n *   List of property values for space- or comma separated values (such as `className`).\r\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\r\n *   Primitive value or list value.\r\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\r\n *   Acceptable value for element properties.\r\n *\r\n * @typedef {number | string | null | undefined} PrimitiveChild\r\n *   Primitive children, either ignored (nullish), or turned into text nodes.\r\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\r\n *   List of children.\r\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\r\n *   List of children (deep).\r\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\r\n *   Acceptable child value.\r\n */\r\n\r\nimport {parse as commas} from 'comma-separated-tokens'\r\nimport {parseSelector} from 'hast-util-parse-selector'\r\nimport {find, normalize} from 'property-information'\r\nimport {parse as spaces} from 'space-separated-tokens'\r\n\r\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\r\n\r\nconst own = {}.hasOwnProperty\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema to use.\r\n * @param {string} defaultTagName\r\n *   Default tag name.\r\n * @param {Array<string> | undefined} [caseSensitive]\r\n *   Case-sensitive tag names (default: `undefined`).\r\n * @returns\r\n *   `h`.\r\n */\r\nexport function createH(schema, defaultTagName, caseSensitive) {\r\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\r\n\r\n  /**\r\n   * Hyperscript compatible DSL for creating virtual hast trees.\r\n   *\r\n   * @overload\r\n   * @param {null | undefined} [selector]\r\n   * @param {...Child} children\r\n   * @returns {Root}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {Properties} properties\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @overload\r\n   * @param {string} selector\r\n   * @param {...Child} children\r\n   * @returns {Element}\r\n   *\r\n   * @param {string | null | undefined} [selector]\r\n   *   Selector.\r\n   * @param {Child | Properties | null | undefined} [properties]\r\n   *   Properties (or first child) (default: `undefined`).\r\n   * @param {...Child} children\r\n   *   Children.\r\n   * @returns {Result}\r\n   *   Result.\r\n   */\r\n  function h(selector, properties, ...children) {\r\n    let index = -1\r\n    /** @type {Result} */\r\n    let node\r\n\r\n    if (selector === undefined || selector === null) {\r\n      node = {type: 'root', children: []}\r\n      // Properties are not supported for roots.\r\n      const child = /** @type {Child} */ (properties)\r\n      children.unshift(child)\r\n    } else {\r\n      node = parseSelector(selector, defaultTagName)\r\n      // Normalize the name.\r\n      node.tagName = node.tagName.toLowerCase()\r\n      if (adjust && own.call(adjust, node.tagName)) {\r\n        node.tagName = adjust[node.tagName]\r\n      }\r\n\r\n      // Handle props.\r\n      if (isProperties(properties, node.tagName)) {\r\n        /** @type {string} */\r\n        let key\r\n\r\n        for (key in properties) {\r\n          if (own.call(properties, key)) {\r\n            addProperty(schema, node.properties, key, properties[key])\r\n          }\r\n        }\r\n      } else {\r\n        children.unshift(properties)\r\n      }\r\n    }\r\n\r\n    // Handle children.\r\n    while (++index < children.length) {\r\n      addChild(node.children, children[index])\r\n    }\r\n\r\n    if (node.type === 'element' && node.tagName === 'template') {\r\n      node.content = {type: 'root', children: node.children}\r\n      node.children = []\r\n    }\r\n\r\n    return node\r\n  }\r\n\r\n  return h\r\n}\r\n\r\n/**\r\n * Check if something is properties or a child.\r\n *\r\n * @param {Child | Properties} value\r\n *   Value to check.\r\n * @param {string} name\r\n *   Tag name.\r\n * @returns {value is Properties}\r\n *   Whether `value` is a properties object.\r\n */\r\nfunction isProperties(value, name) {\r\n  if (\r\n    value === null ||\r\n    value === undefined ||\r\n    typeof value !== 'object' ||\r\n    Array.isArray(value)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\r\n    return true\r\n  }\r\n\r\n  if ('children' in value && Array.isArray(value.children)) {\r\n    return false\r\n  }\r\n\r\n  if (name === 'button') {\r\n    return buttonTypes.has(value.type.toLowerCase())\r\n  }\r\n\r\n  return !('value' in value)\r\n}\r\n\r\n/**\r\n * @param {Schema} schema\r\n *   Schema.\r\n * @param {Properties} properties\r\n *   Properties object.\r\n * @param {string} key\r\n *   Property name.\r\n * @param {PropertyValue | Style} value\r\n *   Property value.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addProperty(schema, properties, key, value) {\r\n  const info = find(schema, key)\r\n  let index = -1\r\n  /** @type {PropertyValue} */\r\n  let result\r\n\r\n  // Ignore nullish and NaN values.\r\n  if (value === undefined || value === null) return\r\n\r\n  if (typeof value === 'number') {\r\n    // Ignore NaN.\r\n    if (Number.isNaN(value)) return\r\n\r\n    result = value\r\n  }\r\n  // Booleans.\r\n  else if (typeof value === 'boolean') {\r\n    result = value\r\n  }\r\n  // Handle list values.\r\n  else if (typeof value === 'string') {\r\n    if (info.spaceSeparated) {\r\n      result = spaces(value)\r\n    } else if (info.commaSeparated) {\r\n      result = commas(value)\r\n    } else if (info.commaOrSpaceSeparated) {\r\n      result = spaces(commas(value).join(' '))\r\n    } else {\r\n      result = parsePrimitive(info, info.property, value)\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    result = value.concat()\r\n  } else {\r\n    result = info.property === 'style' ? style(value) : String(value)\r\n  }\r\n\r\n  if (Array.isArray(result)) {\r\n    /** @type {Array<number | string>} */\r\n    const finalResult = []\r\n\r\n    while (++index < result.length) {\r\n      // Assume no booleans in array.\r\n      const value = /** @type {number | string} */ (\r\n        parsePrimitive(info, info.property, result[index])\r\n      )\r\n      finalResult[index] = value\r\n    }\r\n\r\n    result = finalResult\r\n  }\r\n\r\n  // Class names (which can be added both on the `selector` and here).\r\n  if (info.property === 'className' && Array.isArray(properties.className)) {\r\n    // Assume no booleans in `className`.\r\n    const value = /** @type {number | string} */ (result)\r\n    result = properties.className.concat(value)\r\n  }\r\n\r\n  properties[info.property] = result\r\n}\r\n\r\n/**\r\n * @param {Array<RootContent>} nodes\r\n *   Children.\r\n * @param {Child} value\r\n *   Child.\r\n * @returns {undefined}\r\n *   Nothing.\r\n */\r\nfunction addChild(nodes, value) {\r\n  let index = -1\r\n\r\n  if (value === undefined || value === null) {\r\n    // Empty.\r\n  } else if (typeof value === 'string' || typeof value === 'number') {\r\n    nodes.push({type: 'text', value: String(value)})\r\n  } else if (Array.isArray(value)) {\r\n    while (++index < value.length) {\r\n      addChild(nodes, value[index])\r\n    }\r\n  } else if (typeof value === 'object' && 'type' in value) {\r\n    if (value.type === 'root') {\r\n      addChild(nodes, value.children)\r\n    } else {\r\n      nodes.push(value)\r\n    }\r\n  } else {\r\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a single primitives.\r\n *\r\n * @param {Info} info\r\n *   Property information.\r\n * @param {string} name\r\n *   Property name.\r\n * @param {PrimitiveValue} value\r\n *   Property value.\r\n * @returns {PrimitiveValue}\r\n *   Property value.\r\n */\r\nfunction parsePrimitive(info, name, value) {\r\n  if (typeof value === 'string') {\r\n    if (info.number && value && !Number.isNaN(Number(value))) {\r\n      return Number(value)\r\n    }\r\n\r\n    if (\r\n      (info.boolean || info.overloadedBoolean) &&\r\n      (value === '' || normalize(value) === normalize(name))\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n * Serialize a `style` object as a string.\r\n *\r\n * @param {Style} value\r\n *   Style object.\r\n * @returns {string}\r\n *   CSS string.\r\n */\r\nfunction style(value) {\r\n  /** @type {Array<string>} */\r\n  const result = []\r\n  /** @type {string} */\r\n  let key\r\n\r\n  for (key in value) {\r\n    if (own.call(value, key)) {\r\n      result.push([key, value[key]].join(': '))\r\n    }\r\n  }\r\n\r\n  return result.join('; ')\r\n}\r\n\r\n/**\r\n * Create a map to adjust casing.\r\n *\r\n * @param {Array<string>} values\r\n *   List of properly cased keys.\r\n * @returns {Record<string, string>}\r\n *   Map of lowercase keys to uppercase keys.\r\n */\r\nfunction createAdjustMap(values) {\r\n  /** @type {Record<string, string>} */\r\n  const result = {}\r\n  let index = -1\r\n\r\n  while (++index < values.length) {\r\n    result[values[index].toLowerCase()] = values[index]\r\n  }\r\n\r\n  return result\r\n}\r\n", "export const svgCaseSensitiveTagNames = [\r\n  'altGlyph',\r\n  'altGlyphDef',\r\n  'altGlyphItem',\r\n  'animateColor',\r\n  'animateMotion',\r\n  'animateTransform',\r\n  'clipPath',\r\n  'feBlend',\r\n  'feColorMatrix',\r\n  'feComponentTransfer',\r\n  'feComposite',\r\n  'feConvolveMatrix',\r\n  'feDiffuseLighting',\r\n  'feDisplacementMap',\r\n  'feDistantLight',\r\n  'feDropShadow',\r\n  'feFlood',\r\n  'feFuncA',\r\n  'feFuncB',\r\n  'feFuncG',\r\n  'feFuncR',\r\n  'feGaussianBlur',\r\n  'feImage',\r\n  'feMerge',\r\n  'feMergeNode',\r\n  'feMorphology',\r\n  'feOffset',\r\n  'fePointLight',\r\n  'feSpecularLighting',\r\n  'feSpotLight',\r\n  'feTile',\r\n  'feTurbulence',\r\n  'foreignObject',\r\n  'glyphRef',\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'solidColor',\r\n  'textArea',\r\n  'textPath'\r\n]\r\n", "/**\r\n * @typedef {import('./create-h.js').Child} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./create-h.js').Properties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./create-h.js').Result} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\r\n\r\n// Register the JSX namespace on `h`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\r\n\r\n// Register the JSX namespace on `s`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {createH} from './create-h.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const h = createH(html, 'div')\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\r\n", "import { h } from 'hastscript';\r\nfunction createClickCallback(str, setting) {\r\n    return `(function(button){\r\n    const setting = ${JSON.stringify(setting)}\r\n    const span = button.querySelector('span')\r\n\r\n    function setState(state) {\r\n      span.textContent = setting[state];\r\n      button.setAttribute('data-copy-state', state);\r\n    }\r\n\r\n    function resetButtonText() {\r\n      setTimeout(function () {\r\n        setState('copy');\r\n      }, setting['copy-timeout']);\r\n    }\r\n\r\n    function onSuccess() {\r\n      setState('copy-success');\r\n      resetButtonText();\r\n    }\r\n\r\n    function onError(error) {\r\n      error && console.error(error)\r\n      setState('copy-error');\r\n      resetButtonText();\r\n    }\r\n\r\n    function fallbackCopyTextToClipboard(str) {\r\n      var textArea = document.createElement('textarea');\r\n      textArea.value = str\r\n\r\n      // Avoid scrolling to bottom\r\n      textArea.style.top = '0';\r\n      textArea.style.left = '0';\r\n      textArea.style.position = 'fixed';\r\n\r\n      document.body.appendChild(textArea);\r\n      textArea.focus();\r\n      textArea.select();\r\n\r\n      try {\r\n        var successful = document.execCommand('copy');\r\n        setTimeout(function () {\r\n          if (successful) onSuccess()\r\n          else onError()\r\n\r\n        }, 1);\r\n      } catch (err) {\r\n        setTimeout(function () {\r\n          onError(err)\r\n        }, 1);\r\n      }\r\n\r\n      document.body.removeChild(textArea);\r\n    }\r\n\r\n    function copyTextToClipboard(str) {\r\n      if (navigator.clipboard) {\r\n        navigator.clipboard.writeText(str)\r\n          .then(onSuccess, function () {\r\n            fallbackCopyTextToClipboard(str);\r\n          });\r\n      } else {\r\n        fallbackCopyTextToClipboard(str);\r\n      }\r\n    }\r\n\r\n    copyTextToClipboard(${JSON.stringify(str)})\r\n  })(this)`;\r\n}\r\nexport function createCopyToClipboardPlugin(context) {\r\n    context.toolbar.buttons.push(({ raw }) => {\r\n        const span = h('span', {}, ['Copy']);\r\n        const copyBtn = h('button', {\r\n            type: 'button',\r\n            className: ['copy-to-clipboard-button'],\r\n            onClick: createClickCallback(raw, {\r\n                copy: 'Copy',\r\n                'copy-error': 'Press Ctrl+C to copy',\r\n                'copy-success': 'Copied!',\r\n                'copy-timeout': 5000,\r\n            }),\r\n        }, [span]);\r\n        return copyBtn;\r\n    });\r\n}\r\n", "export function isElementNode(node) {\r\n    return !!node && node.type === 'element' && 'tagName' in node;\r\n}\r\n", "import { select } from 'unist-util-select';\r\nimport { isElementNode } from './is-element-node.js';\r\nexport function selectCodeElement(parent) {\r\n    const codeElement = select('[tagName=code]', parent);\r\n    return isElementNode(codeElement) ? codeElement : null;\r\n}\r\n", "import { h } from 'hastscript';\r\nimport { appendClassName } from \"../utils/append-class-name.js\";\r\nimport { selectCodeElement } from \"../utils/select-code-element.js\";\r\nfunction getLineNumber(str) {\r\n    const match = str.match(/\\n(?!$)/g);\r\n    return match ? match.length + 1 : 1;\r\n}\r\nexport function createLineNumberPlugin() {\r\n    return (options) => {\r\n        const { preElement, raw } = options;\r\n        const codeElement = selectCodeElement(preElement);\r\n        if (!codeElement)\r\n            return;\r\n        appendClassName(preElement, 'line-numbers');\r\n        const lineNumber = getLineNumber(raw);\r\n        const lineNumberColumn = h('span', {\r\n            'aria-hidden': 'true',\r\n            className: ['line-numbers-rows'],\r\n        }, new Array(lineNumber).fill(h('span')));\r\n        codeElement.children.push(lineNumberColumn);\r\n    };\r\n}\r\n", "import { h } from 'hastscript';\r\nexport function createToolbarPlugin(context) {\r\n    return (options) => {\r\n        const { parentNode, index, preElement } = options;\r\n        if (parentNode === undefined || index === undefined) {\r\n            console.warn([\r\n                'rehype-prism toolbar plugin: parentNode/index is undefined',\r\n                'Please submit an issue to https://github.com/Val-istar-Guo/rehype-prism/issues',\r\n            ].join('\\n'));\r\n            return;\r\n        }\r\n        const toolbar = h('div', {\r\n            className: ['toolbar'],\r\n        });\r\n        const container = h('div', {\r\n            className: ['code-toolbar'],\r\n        }, [preElement, toolbar]);\r\n        parentNode.children.splice(index, 1, container);\r\n        for (const button of context.toolbar.buttons) {\r\n            toolbar.children.push(h('div', {\r\n                className: ['toolbar-item'],\r\n            }, [button(options)]));\r\n        }\r\n    };\r\n}\r\n", "import { createCopyToClipboardPlugin } from './plugins/copy-to-clipboard.js';\r\nimport { createLineNumberPlugin } from './plugins/line-numbers.js';\r\nimport { createToolbarPlugin } from './plugins/toolbar.js';\r\nexport function createPluginApplier(plugins) {\r\n    const context = {\r\n        toolbar: {\r\n            buttons: [],\r\n        },\r\n    };\r\n    const appliers = plugins\r\n        // uniq\r\n        .filter((item, index, arr) => arr.indexOf(item, 0) === index)\r\n        .map((plugin) => {\r\n        if (plugin === 'line-numbers')\r\n            return createLineNumberPlugin();\r\n        if (plugin === 'toolbar')\r\n            return createToolbarPlugin(context);\r\n        if (plugin === 'copy-to-clipboard')\r\n            return createCopyToClipboardPlugin(context);\r\n    });\r\n    return (options) => {\r\n        for (const applier of appliers) {\r\n            applier && applier(options);\r\n        }\r\n    };\r\n}\r\n", "export function isTextNode(node) {\r\n    return !!node && node.type === 'text';\r\n}\r\n", "import { isElementNode } from './utils/is-element-node.js';\r\nexport function createPreElementSelector() {\r\n    return (node) => isElementNode(node) && node.tagName === 'pre';\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAOA,QAAI,QAAS,OAAO,WAAW,cAC5B,SAEA,OAAO,sBAAsB,eAAe,gBAAgB,oBAC1D,OACA,CAAC;AAWN,QAAIA,SAAS,SAAUC,QAAO;AAG7B,UAAI,OAAO;AACX,UAAI,WAAW;AAGf,UAAI,mBAAmB,CAAC;AAGxB,UAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAsBP,QAAQA,OAAM,SAASA,OAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAsBnC,6BAA6BA,OAAM,SAASA,OAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWxD,MAAM;AAAA,UACL,QAAQ,SAAS,OAAO,QAAQ;AAC/B,gBAAI,kBAAkB,OAAO;AAC5B,qBAAO,IAAI,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,GAAG,OAAO,KAAK;AAAA,YACnE,WAAW,MAAM,QAAQ,MAAM,GAAG;AACjC,qBAAO,OAAO,IAAI,MAAM;AAAA,YACzB,OAAO;AACN,qBAAO,OAAO,QAAQ,MAAM,OAAO,EAAE,QAAQ,MAAM,MAAM,EAAE,QAAQ,WAAW,GAAG;AAAA,YAClF;AAAA,UACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAkBA,MAAM,SAAU,GAAG;AAClB,mBAAO,OAAO,UAAU,SAAS,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE;AAAA,UACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA,OAAO,SAAU,KAAK;AACrB,gBAAI,CAAC,IAAI,MAAM,GAAG;AACjB,qBAAO,eAAe,KAAK,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;AAAA,YACzD;AACA,mBAAO,IAAI,MAAM;AAAA,UAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYA,OAAO,SAAS,UAAU,GAAG,SAAS;AACrC,sBAAU,WAAW,CAAC;AAEtB,gBAAI;AAAO,gBAAI;AACf,oBAAQ,EAAE,KAAK,KAAK,CAAC,GAAG;AAAA,cACvB,KAAK;AACJ,qBAAK,EAAE,KAAK,MAAM,CAAC;AACnB,oBAAI,QAAQ,EAAE,GAAG;AAChB,yBAAO,QAAQ,EAAE;AAAA,gBAClB;AACA;AAAA,gBAA4C,CAAC;AAC7C,wBAAQ,EAAE,IAAI;AAEd,yBAAS,OAAO,GAAG;AAClB,sBAAI,EAAE,eAAe,GAAG,GAAG;AAC1B,0BAAM,GAAG,IAAI,UAAU,EAAE,GAAG,GAAG,OAAO;AAAA,kBACvC;AAAA,gBACD;AAEA;AAAA;AAAA,kBAA2B;AAAA;AAAA,cAE5B,KAAK;AACJ,qBAAK,EAAE,KAAK,MAAM,CAAC;AACnB,oBAAI,QAAQ,EAAE,GAAG;AAChB,yBAAO,QAAQ,EAAE;AAAA,gBAClB;AACA,wBAAQ,CAAC;AACT,wBAAQ,EAAE,IAAI;AAEd;AAAA;AAAA,gBAAyC,EAAK,QAAQ,SAAU,GAAG,GAAG;AACrE,wBAAM,CAAC,IAAI,UAAU,GAAG,OAAO;AAAA,gBAChC,CAAC;AAED;AAAA;AAAA,kBAA2B;AAAA;AAAA,cAE5B;AACC,uBAAO;AAAA,YACT;AAAA,UACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUA,aAAa,SAAUC,UAAS;AAC/B,mBAAOA,UAAS;AACf,kBAAI,IAAI,KAAK,KAAKA,SAAQ,SAAS;AACnC,kBAAI,GAAG;AACN,uBAAO,EAAE,CAAC,EAAE,YAAY;AAAA,cACzB;AACA,cAAAA,WAAUA,SAAQ;AAAA,YACnB;AACA,mBAAO;AAAA,UACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA,aAAa,SAAUA,UAAS,UAAU;AAGzC,YAAAA,SAAQ,YAAYA,SAAQ,UAAU,QAAQ,OAAO,MAAM,IAAI,GAAG,EAAE;AAIpE,YAAAA,SAAQ,UAAU,IAAI,cAAc,QAAQ;AAAA,UAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA,eAAe,WAAY;AAC1B,gBAAI,OAAO,aAAa,aAAa;AACpC,qBAAO;AAAA,YACR;AACA,gBAAI,SAAS,iBAAiB,SAAS,cAAc,YAAY,YAAY,IAAI,GAAwC;AACxH;AAAA;AAAA,gBAA2B,SAAS;AAAA;AAAA,YACrC;AAMA,gBAAI;AACH,oBAAM,IAAI,MAAM;AAAA,YACjB,SAAS,KAAK;AAQb,kBAAI,OAAO,qCAAqC,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC;AACxE,kBAAI,KAAK;AACR,oBAAI,UAAU,SAAS,qBAAqB,QAAQ;AACpD,yBAAS,KAAK,SAAS;AACtB,sBAAI,QAAQ,CAAC,EAAE,OAAO,KAAK;AAC1B,2BAAO,QAAQ,CAAC;AAAA,kBACjB;AAAA,gBACD;AAAA,cACD;AACA,qBAAO;AAAA,YACR;AAAA,UACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAqBA,UAAU,SAAUA,UAAS,WAAW,mBAAmB;AAC1D,gBAAI,KAAK,QAAQ;AAEjB,mBAAOA,UAAS;AACf,kBAAI,YAAYA,SAAQ;AACxB,kBAAI,UAAU,SAAS,SAAS,GAAG;AAClC,uBAAO;AAAA,cACR;AACA,kBAAI,UAAU,SAAS,EAAE,GAAG;AAC3B,uBAAO;AAAA,cACR;AACA,cAAAA,WAAUA,SAAQ;AAAA,YACnB;AACA,mBAAO,CAAC,CAAC;AAAA,UACV;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,WAAW;AAAA;AAAA;AAAA;AAAA,UAIV,OAAO;AAAA,UACP,WAAW;AAAA,UACX,MAAM;AAAA,UACN,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA8BL,QAAQ,SAAU,IAAI,OAAO;AAC5B,gBAAIC,QAAO,EAAE,KAAK,MAAM,EAAE,UAAU,EAAE,CAAC;AAEvC,qBAAS,OAAO,OAAO;AACtB,cAAAA,MAAK,GAAG,IAAI,MAAM,GAAG;AAAA,YACtB;AAEA,mBAAOA;AAAA,UACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA6EA,cAAc,SAAU,QAAQ,QAAQ,QAAQC,OAAM;AACrD,YAAAA,QAAOA;AAAA,YAA4B,EAAE;AACrC,gBAAI,UAAUA,MAAK,MAAM;AAEzB,gBAAI,MAAM,CAAC;AAEX,qBAAS,SAAS,SAAS;AAC1B,kBAAI,QAAQ,eAAe,KAAK,GAAG;AAElC,oBAAI,SAAS,QAAQ;AACpB,2BAAS,YAAY,QAAQ;AAC5B,wBAAI,OAAO,eAAe,QAAQ,GAAG;AACpC,0BAAI,QAAQ,IAAI,OAAO,QAAQ;AAAA,oBAChC;AAAA,kBACD;AAAA,gBACD;AAGA,oBAAI,CAAC,OAAO,eAAe,KAAK,GAAG;AAClC,sBAAI,KAAK,IAAI,QAAQ,KAAK;AAAA,gBAC3B;AAAA,cACD;AAAA,YACD;AAEA,gBAAI,MAAMA,MAAK,MAAM;AACrB,YAAAA,MAAK,MAAM,IAAI;AAGf,cAAE,UAAU,IAAI,EAAE,WAAW,SAAU,KAAK,OAAO;AAClD,kBAAI,UAAU,OAAO,OAAO,QAAQ;AACnC,qBAAK,GAAG,IAAI;AAAA,cACb;AAAA,YACD,CAAC;AAED,mBAAO;AAAA,UACR;AAAA;AAAA,UAGA,KAAK,SAAS,IAAI,GAAG,UAAU,MAAM,SAAS;AAC7C,sBAAU,WAAW,CAAC;AAEtB,gBAAI,QAAQ,EAAE,KAAK;AAEnB,qBAAS,KAAK,GAAG;AAChB,kBAAI,EAAE,eAAe,CAAC,GAAG;AACxB,yBAAS,KAAK,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;AAEnC,oBAAI,WAAW,EAAE,CAAC;AAClB,oBAAI,eAAe,EAAE,KAAK,KAAK,QAAQ;AAEvC,oBAAI,iBAAiB,YAAY,CAAC,QAAQ,MAAM,QAAQ,CAAC,GAAG;AAC3D,0BAAQ,MAAM,QAAQ,CAAC,IAAI;AAC3B,sBAAI,UAAU,UAAU,MAAM,OAAO;AAAA,gBACtC,WAAW,iBAAiB,WAAW,CAAC,QAAQ,MAAM,QAAQ,CAAC,GAAG;AACjE,0BAAQ,MAAM,QAAQ,CAAC,IAAI;AAC3B,sBAAI,UAAU,UAAU,GAAG,OAAO;AAAA,gBACnC;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,QAEA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcV,cAAc,SAAU,OAAO,UAAU;AACxC,YAAE,kBAAkB,UAAU,OAAO,QAAQ;AAAA,QAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBA,mBAAmB,SAAU,WAAW,OAAO,UAAU;AACxD,cAAI,MAAM;AAAA,YACT;AAAA,YACA;AAAA,YACA,UAAU;AAAA,UACX;AAEA,YAAE,MAAM,IAAI,uBAAuB,GAAG;AAEtC,cAAI,WAAW,MAAM,UAAU,MAAM,MAAM,IAAI,UAAU,iBAAiB,IAAI,QAAQ,CAAC;AAEvF,YAAE,MAAM,IAAI,iCAAiC,GAAG;AAEhD,mBAAS,IAAI,GAAGF,UAAUA,WAAU,IAAI,SAAS,GAAG,KAAK;AACxD,cAAE,iBAAiBA,UAAS,UAAU,MAAM,IAAI,QAAQ;AAAA,UACzD;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA8BA,kBAAkB,SAAUA,UAAS,OAAO,UAAU;AAErD,cAAI,WAAW,EAAE,KAAK,YAAYA,QAAO;AACzC,cAAI,UAAU,EAAE,UAAU,QAAQ;AAGlC,YAAE,KAAK,YAAYA,UAAS,QAAQ;AAGpC,cAAIG,UAASH,SAAQ;AACrB,cAAIG,WAAUA,QAAO,SAAS,YAAY,MAAM,OAAO;AACtD,cAAE,KAAK,YAAYA,SAAQ,QAAQ;AAAA,UACpC;AAEA,cAAI,OAAOH,SAAQ;AAEnB,cAAI,MAAM;AAAA,YACT,SAASA;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAEA,mBAAS,sBAAsB,iBAAiB;AAC/C,gBAAI,kBAAkB;AAEtB,cAAE,MAAM,IAAI,iBAAiB,GAAG;AAEhC,gBAAI,QAAQ,YAAY,IAAI;AAE5B,cAAE,MAAM,IAAI,mBAAmB,GAAG;AAClC,cAAE,MAAM,IAAI,YAAY,GAAG;AAC3B,wBAAY,SAAS,KAAK,IAAI,OAAO;AAAA,UACtC;AAEA,YAAE,MAAM,IAAI,uBAAuB,GAAG;AAGtC,UAAAG,UAAS,IAAI,QAAQ;AACrB,cAAIA,WAAUA,QAAO,SAAS,YAAY,MAAM,SAAS,CAACA,QAAO,aAAa,UAAU,GAAG;AAC1F,YAAAA,QAAO,aAAa,YAAY,GAAG;AAAA,UACpC;AAEA,cAAI,CAAC,IAAI,MAAM;AACd,cAAE,MAAM,IAAI,YAAY,GAAG;AAC3B,wBAAY,SAAS,KAAK,IAAI,OAAO;AACrC;AAAA,UACD;AAEA,YAAE,MAAM,IAAI,oBAAoB,GAAG;AAEnC,cAAI,CAAC,IAAI,SAAS;AACjB,kCAAsB,EAAE,KAAK,OAAO,IAAI,IAAI,CAAC;AAC7C;AAAA,UACD;AAEA,cAAI,SAASJ,OAAM,QAAQ;AAC1B,gBAAI,SAAS,IAAI,OAAO,EAAE,QAAQ;AAElC,mBAAO,YAAY,SAAU,KAAK;AACjC,oCAAsB,IAAI,IAAI;AAAA,YAC/B;AAEA,mBAAO,YAAY,KAAK,UAAU;AAAA,cACjC,UAAU,IAAI;AAAA,cACd,MAAM,IAAI;AAAA,cACV,gBAAgB;AAAA,YACjB,CAAC,CAAC;AAAA,UACH,OAAO;AACN,kCAAsB,EAAE,UAAU,IAAI,MAAM,IAAI,SAAS,IAAI,QAAQ,CAAC;AAAA,UACvE;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAsBA,WAAW,SAAU,MAAM,SAAS,UAAU;AAC7C,cAAI,MAAM;AAAA,YACT,MAAM;AAAA,YACN;AAAA,YACA;AAAA,UACD;AACA,YAAE,MAAM,IAAI,mBAAmB,GAAG;AAClC,cAAI,CAAC,IAAI,SAAS;AACjB,kBAAM,IAAI,MAAM,mBAAmB,IAAI,WAAW,mBAAmB;AAAA,UACtE;AACA,cAAI,SAAS,EAAE,SAAS,IAAI,MAAM,IAAI,OAAO;AAC7C,YAAE,MAAM,IAAI,kBAAkB,GAAG;AACjC,iBAAO,MAAM,UAAU,EAAE,KAAK,OAAO,IAAI,MAAM,GAAG,IAAI,QAAQ;AAAA,QAC/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA0BA,UAAU,SAAU,MAAM,SAAS;AAClC,cAAI,OAAO,QAAQ;AACnB,cAAI,MAAM;AACT,qBAAS,SAAS,MAAM;AACvB,sBAAQ,KAAK,IAAI,KAAK,KAAK;AAAA,YAC5B;AAEA,mBAAO,QAAQ;AAAA,UAChB;AAEA,cAAI,YAAY,IAAI,WAAW;AAC/B,mBAAS,WAAW,UAAU,MAAM,IAAI;AAExC,uBAAa,MAAM,WAAW,SAAS,UAAU,MAAM,CAAC;AAExD,iBAAO,QAAQ,SAAS;AAAA,QACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO;AAAA,UACN,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcN,KAAK,SAAU,MAAM,UAAU;AAC9B,gBAAI,QAAQ,EAAE,MAAM;AAEpB,kBAAM,IAAI,IAAI,MAAM,IAAI,KAAK,CAAC;AAE9B,kBAAM,IAAI,EAAE,KAAK,QAAQ;AAAA,UAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWA,KAAK,SAAU,MAAM,KAAK;AACzB,gBAAI,YAAY,EAAE,MAAM,IAAI,IAAI;AAEhC,gBAAI,CAAC,aAAa,CAAC,UAAU,QAAQ;AACpC;AAAA,YACD;AAEA,qBAAS,IAAI,GAAG,UAAW,WAAW,UAAU,GAAG,KAAK;AACvD,uBAAS,GAAG;AAAA,YACb;AAAA,UACD;AAAA,QACD;AAAA,QAEA;AAAA,MACD;AACA,MAAAA,OAAM,QAAQ;AAmBd,eAAS,MAAM,MAAM,SAAS,OAAO,YAAY;AAUhD,aAAK,OAAO;AASZ,aAAK,UAAU;AAQf,aAAK,QAAQ;AAEb,aAAK,UAAU,cAAc,IAAI,SAAS;AAAA,MAC3C;AA8BA,YAAM,YAAY,SAAS,UAAU,GAAG,UAAU;AACjD,YAAI,OAAO,KAAK,UAAU;AACzB,iBAAO;AAAA,QACR;AACA,YAAI,MAAM,QAAQ,CAAC,GAAG;AACrB,cAAIK,KAAI;AACR,YAAE,QAAQ,SAAU,GAAG;AACtB,YAAAA,MAAK,UAAU,GAAG,QAAQ;AAAA,UAC3B,CAAC;AACD,iBAAOA;AAAA,QACR;AAEA,YAAI,MAAM;AAAA,UACT,MAAM,EAAE;AAAA,UACR,SAAS,UAAU,EAAE,SAAS,QAAQ;AAAA,UACtC,KAAK;AAAA,UACL,SAAS,CAAC,SAAS,EAAE,IAAI;AAAA,UACzB,YAAY,CAAC;AAAA,UACb;AAAA,QACD;AAEA,YAAI,UAAU,EAAE;AAChB,YAAI,SAAS;AACZ,cAAI,MAAM,QAAQ,OAAO,GAAG;AAC3B,kBAAM,UAAU,KAAK,MAAM,IAAI,SAAS,OAAO;AAAA,UAChD,OAAO;AACN,gBAAI,QAAQ,KAAK,OAAO;AAAA,UACzB;AAAA,QACD;AAEA,UAAE,MAAM,IAAI,QAAQ,GAAG;AAEvB,YAAI,aAAa;AACjB,iBAAS,QAAQ,IAAI,YAAY;AAChC,wBAAc,MAAM,OAAO,QAAQ,IAAI,WAAW,IAAI,KAAK,IAAI,QAAQ,MAAM,QAAQ,IAAI;AAAA,QAC1F;AAEA,eAAO,MAAM,IAAI,MAAM,aAAa,IAAI,QAAQ,KAAK,GAAG,IAAI,MAAM,aAAa,MAAM,IAAI,UAAU,OAAO,IAAI,MAAM;AAAA,MACrH;AASA,eAAS,aAAa,SAAS,KAAK,MAAM,YAAY;AACrD,gBAAQ,YAAY;AACpB,YAAI,QAAQ,QAAQ,KAAK,IAAI;AAC7B,YAAI,SAAS,cAAc,MAAM,CAAC,GAAG;AAEpC,cAAI,mBAAmB,MAAM,CAAC,EAAE;AAChC,gBAAM,SAAS;AACf,gBAAM,CAAC,IAAI,MAAM,CAAC,EAAE,MAAM,gBAAgB;AAAA,QAC3C;AACA,eAAO;AAAA,MACR;AAgBA,eAAS,aAAa,MAAM,WAAW,SAAS,WAAW,UAAU,SAAS;AAC7E,iBAAS,SAAS,SAAS;AAC1B,cAAI,CAAC,QAAQ,eAAe,KAAK,KAAK,CAAC,QAAQ,KAAK,GAAG;AACtD;AAAA,UACD;AAEA,cAAI,WAAW,QAAQ,KAAK;AAC5B,qBAAW,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AAEzD,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACzC,gBAAI,WAAW,QAAQ,SAAS,QAAQ,MAAM,GAAG;AAChD;AAAA,YACD;AAEA,gBAAI,aAAa,SAAS,CAAC;AAC3B,gBAAI,SAAS,WAAW;AACxB,gBAAI,aAAa,CAAC,CAAC,WAAW;AAC9B,gBAAI,SAAS,CAAC,CAAC,WAAW;AAC1B,gBAAI,QAAQ,WAAW;AAEvB,gBAAI,UAAU,CAAC,WAAW,QAAQ,QAAQ;AAEzC,kBAAI,QAAQ,WAAW,QAAQ,SAAS,EAAE,MAAM,WAAW,EAAE,CAAC;AAC9D,yBAAW,UAAU,OAAO,WAAW,QAAQ,QAAQ,QAAQ,GAAG;AAAA,YACnE;AAGA,gBAAI,UAAU,WAAW,WAAW;AAEpC,qBACK,cAAc,UAAU,MAAM,MAAM,UACxC,gBAAgB,UAAU,MAC1B,OAAO,YAAY,MAAM,QAAQ,cAAc,YAAY,MAC1D;AAED,kBAAI,WAAW,OAAO,QAAQ,OAAO;AACpC;AAAA,cACD;AAEA,kBAAI,MAAM,YAAY;AAEtB,kBAAI,UAAU,SAAS,KAAK,QAAQ;AAEnC;AAAA,cACD;AAEA,kBAAI,eAAe,OAAO;AACzB;AAAA,cACD;AAEA,kBAAI,cAAc;AAClB,kBAAI;AAEJ,kBAAI,QAAQ;AACX,wBAAQ,aAAa,SAAS,KAAK,MAAM,UAAU;AACnD,oBAAI,CAAC,SAAS,MAAM,SAAS,KAAK,QAAQ;AACzC;AAAA,gBACD;AAEA,oBAAI,OAAO,MAAM;AACjB,oBAAI,KAAK,MAAM,QAAQ,MAAM,CAAC,EAAE;AAChC,oBAAI,IAAI;AAGR,qBAAK,YAAY,MAAM;AACvB,uBAAO,QAAQ,GAAG;AACjB,gCAAc,YAAY;AAC1B,uBAAK,YAAY,MAAM;AAAA,gBACxB;AAEA,qBAAK,YAAY,MAAM;AACvB,sBAAM;AAGN,oBAAI,YAAY,iBAAiB,OAAO;AACvC;AAAA,gBACD;AAGA,yBACK,IAAI,aACR,MAAM,UAAU,SAAS,IAAI,MAAM,OAAO,EAAE,UAAU,WACtD,IAAI,EAAE,MACL;AACD;AACA,uBAAK,EAAE,MAAM;AAAA,gBACd;AACA;AAGA,sBAAM,KAAK,MAAM,KAAK,CAAC;AACvB,sBAAM,SAAS;AAAA,cAChB,OAAO;AACN,wBAAQ,aAAa,SAAS,GAAG,KAAK,UAAU;AAChD,oBAAI,CAAC,OAAO;AACX;AAAA,gBACD;AAAA,cACD;AAGA,kBAAI,OAAO,MAAM;AACjB,kBAAI,WAAW,MAAM,CAAC;AACtB,kBAAI,SAAS,IAAI,MAAM,GAAG,IAAI;AAC9B,kBAAI,QAAQ,IAAI,MAAM,OAAO,SAAS,MAAM;AAE5C,kBAAI,QAAQ,MAAM,IAAI;AACtB,kBAAI,WAAW,QAAQ,QAAQ,OAAO;AACrC,wBAAQ,QAAQ;AAAA,cACjB;AAEA,kBAAI,aAAa,YAAY;AAE7B,kBAAI,QAAQ;AACX,6BAAa,SAAS,WAAW,YAAY,MAAM;AACnD,uBAAO,OAAO;AAAA,cACf;AAEA,0BAAY,WAAW,YAAY,WAAW;AAE9C,kBAAI,UAAU,IAAI,MAAM,OAAO,SAAS,EAAE,SAAS,UAAU,MAAM,IAAI,UAAU,OAAO,QAAQ;AAChG,4BAAc,SAAS,WAAW,YAAY,OAAO;AAErD,kBAAI,OAAO;AACV,yBAAS,WAAW,aAAa,KAAK;AAAA,cACvC;AAEA,kBAAI,cAAc,GAAG;AAKpB,oBAAI,gBAAgB;AAAA,kBACnB,OAAO,QAAQ,MAAM;AAAA,kBACrB;AAAA,gBACD;AACA,6BAAa,MAAM,WAAW,SAAS,YAAY,MAAM,KAAK,aAAa;AAG3E,oBAAI,WAAW,cAAc,QAAQ,QAAQ,OAAO;AACnD,0BAAQ,QAAQ,cAAc;AAAA,gBAC/B;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAeA,eAAS,aAAa;AAErB,YAAI,OAAO,EAAE,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK;AAEjD,YAAI,OAAO,EAAE,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK;AACjD,aAAK,OAAO;AAGZ,aAAK,OAAO;AAEZ,aAAK,OAAO;AACZ,aAAK,SAAS;AAAA,MACf;AAWA,eAAS,SAAS,MAAM,MAAM,OAAO;AAEpC,YAAIC,QAAO,KAAK;AAEhB,YAAI,UAAU,EAAE,OAAc,MAAM,MAAM,MAAMA,MAAK;AACrD,aAAK,OAAO;AACZ,QAAAA,MAAK,OAAO;AACZ,aAAK;AAEL,eAAO;AAAA,MACR;AASA,eAAS,YAAY,MAAM,MAAMC,QAAO;AACvC,YAAID,QAAO,KAAK;AAChB,iBAAS,IAAI,GAAG,IAAIC,UAASD,UAAS,KAAK,MAAM,KAAK;AACrD,UAAAA,QAAOA,MAAK;AAAA,QACb;AACA,aAAK,OAAOA;AACZ,QAAAA,MAAK,OAAO;AACZ,aAAK,UAAU;AAAA,MAChB;AAMA,eAAS,QAAQ,MAAM;AACtB,YAAI,QAAQ,CAAC;AACb,YAAI,OAAO,KAAK,KAAK;AACrB,eAAO,SAAS,KAAK,MAAM;AAC1B,gBAAM,KAAK,KAAK,KAAK;AACrB,iBAAO,KAAK;AAAA,QACb;AACA,eAAO;AAAA,MACR;AAGA,UAAI,CAACN,OAAM,UAAU;AACpB,YAAI,CAACA,OAAM,kBAAkB;AAE5B,iBAAO;AAAA,QACR;AAEA,YAAI,CAAC,EAAE,6BAA6B;AAEnC,UAAAA,OAAM,iBAAiB,WAAW,SAAU,KAAK;AAChD,gBAAI,UAAU,KAAK,MAAM,IAAI,IAAI;AACjC,gBAAIE,QAAO,QAAQ;AACnB,gBAAI,OAAO,QAAQ;AACnB,gBAAI,iBAAiB,QAAQ;AAE7B,YAAAF,OAAM,YAAY,EAAE,UAAU,MAAM,EAAE,UAAUE,KAAI,GAAGA,KAAI,CAAC;AAC5D,gBAAI,gBAAgB;AACnB,cAAAF,OAAM,MAAM;AAAA,YACb;AAAA,UACD,GAAG,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACR;AAGA,UAAI,SAAS,EAAE,KAAK,cAAc;AAElC,UAAI,QAAQ;AACX,UAAE,WAAW,OAAO;AAEpB,YAAI,OAAO,aAAa,aAAa,GAAG;AACvC,YAAE,SAAS;AAAA,QACZ;AAAA,MACD;AAEA,eAAS,iCAAiC;AACzC,YAAI,CAAC,EAAE,QAAQ;AACd,YAAE,aAAa;AAAA,QAChB;AAAA,MACD;AAEA,UAAI,CAAC,EAAE,QAAQ;AAOd,YAAI,aAAa,SAAS;AAC1B,YAAI,eAAe,aAAa,eAAe,iBAAiB,UAAU,OAAO,OAAO;AACvF,mBAAS,iBAAiB,oBAAoB,8BAA8B;AAAA,QAC7E,OAAO;AACN,cAAI,OAAO,uBAAuB;AACjC,mBAAO,sBAAsB,8BAA8B;AAAA,UAC5D,OAAO;AACN,mBAAO,WAAW,gCAAgC,EAAE;AAAA,UACrD;AAAA,QACD;AAAA,MACD;AAEA,aAAO;AAAA,IAER,EAAE,KAAK;AAEP,QAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACpD,aAAO,UAAUD;AAAA,IAClB;AAGA,QAAI,OAAO,WAAW,aAAa;AAClC,aAAO,QAAQA;AAAA,IAChB;AAwDA,IAAAA,OAAM,UAAU,SAAS;AAAA,MACxB,WAAW;AAAA,QACV,SAAS;AAAA,QACT,QAAQ;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACT,SAAS;AAAA,QACT,QAAQ;AAAA,MACT;AAAA,MACA,WAAW;AAAA;AAAA,QAEV,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACP,mBAAmB;AAAA,YAClB,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,YACR,QAAQ;AAAA;AAAA,UACT;AAAA,UACA,UAAU;AAAA,YACT,SAAS;AAAA,YACT,QAAQ;AAAA,UACT;AAAA,UACA,eAAe;AAAA,UACf,eAAe;AAAA,UACf,QAAQ;AAAA,QACT;AAAA,MACD;AAAA,MACA,SAAS;AAAA,QACR,SAAS;AAAA,QACT,QAAQ;AAAA,MACT;AAAA,MACA,OAAO;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACP,OAAO;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA,cACP,eAAe;AAAA,cACf,aAAa;AAAA,YACd;AAAA,UACD;AAAA,UACA,gBAAgB,CAAC;AAAA,UACjB,cAAc;AAAA,YACb,SAAS;AAAA,YACT,QAAQ;AAAA,cACP,eAAe;AAAA,gBACd;AAAA,kBACC,SAAS;AAAA,kBACT,OAAO;AAAA,gBACR;AAAA,gBACA;AAAA,kBACC,SAAS;AAAA,kBACT,YAAY;AAAA,gBACb;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,UACA,eAAe;AAAA,UACf,aAAa;AAAA,YACZ,SAAS;AAAA,YACT,QAAQ;AAAA,cACP,aAAa;AAAA,YACd;AAAA,UACD;AAAA,QAED;AAAA,MACD;AAAA,MACA,UAAU;AAAA,QACT;AAAA,UACC,SAAS;AAAA,UACT,OAAO;AAAA,QACR;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,IAAAA,OAAM,UAAU,OAAO,KAAK,EAAE,OAAO,YAAY,EAAE,OAAO,QAAQ,IACjEA,OAAM,UAAU,OAAO,QAAQ;AAChC,IAAAA,OAAM,UAAU,OAAO,SAAS,EAAE,OAAO,iBAAiB,EAAE,SAASA,OAAM,UAAU;AAGrF,IAAAA,OAAM,MAAM,IAAI,QAAQ,SAAU,KAAK;AAEtC,UAAI,IAAI,SAAS,UAAU;AAC1B,YAAI,WAAW,OAAO,IAAI,IAAI,QAAQ,QAAQ,SAAS,GAAG;AAAA,MAC3D;AAAA,IACD,CAAC;AAED,WAAO,eAAeA,OAAM,UAAU,OAAO,KAAK,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAY/D,OAAO,SAAS,WAAW,SAAS,MAAM;AACzC,YAAI,sBAAsB,CAAC;AAC3B,4BAAoB,cAAc,IAAI,IAAI;AAAA,UACzC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQA,OAAM,UAAU,IAAI;AAAA,QAC7B;AACA,4BAAoB,OAAO,IAAI;AAE/B,YAAI,SAAS;AAAA,UACZ,kBAAkB;AAAA,YACjB,SAAS;AAAA,YACT,QAAQ;AAAA,UACT;AAAA,QACD;AACA,eAAO,cAAc,IAAI,IAAI;AAAA,UAC5B,SAAS;AAAA,UACT,QAAQA,OAAM,UAAU,IAAI;AAAA,QAC7B;AAEA,YAAI,MAAM,CAAC;AACX,YAAI,OAAO,IAAI;AAAA,UACd,SAAS,OAAO,wFAAwF,OAAO,QAAQ,OAAO,WAAY;AAAE,mBAAO;AAAA,UAAS,CAAC,GAAG,GAAG;AAAA,UACnK,YAAY;AAAA,UACZ,QAAQ;AAAA,UACR;AAAA,QACD;AAEA,QAAAA,OAAM,UAAU,aAAa,UAAU,SAAS,GAAG;AAAA,MACpD;AAAA,IACD,CAAC;AACD,WAAO,eAAeA,OAAM,UAAU,OAAO,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYjE,OAAO,SAAU,UAAU,MAAM;AAChC,QAAAA,OAAM,UAAU,OAAO,IAAI,OAAO,cAAc,EAAE,KAAK;AAAA,UACtD,SAAS;AAAA,YACR,aAAa,SAAS,QAAQ,WAAW,MAAM,iDAAiD;AAAA,YAChG;AAAA,UACD;AAAA,UACA,YAAY;AAAA,UACZ,QAAQ;AAAA,YACP,aAAa;AAAA,YACb,cAAc;AAAA,cACb,SAAS;AAAA,cACT,QAAQ;AAAA,gBACP,SAAS;AAAA,kBACR,SAAS;AAAA,kBACT,YAAY;AAAA,kBACZ,OAAO,CAAC,MAAM,cAAc,IAAI;AAAA,kBAChC,QAAQA,OAAM,UAAU,IAAI;AAAA,gBAC7B;AAAA,gBACA,eAAe;AAAA,kBACd;AAAA,oBACC,SAAS;AAAA,oBACT,OAAO;AAAA,kBACR;AAAA,kBACA;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAED,IAAAA,OAAM,UAAU,OAAOA,OAAM,UAAU;AACvC,IAAAA,OAAM,UAAU,SAASA,OAAM,UAAU;AACzC,IAAAA,OAAM,UAAU,MAAMA,OAAM,UAAU;AAEtC,IAAAA,OAAM,UAAU,MAAMA,OAAM,UAAU,OAAO,UAAU,CAAC,CAAC;AACzD,IAAAA,OAAM,UAAU,OAAOA,OAAM,UAAU;AACvC,IAAAA,OAAM,UAAU,OAAOA,OAAM,UAAU;AACvC,IAAAA,OAAM,UAAU,MAAMA,OAAM,UAAU;AAOtC,KAAC,SAAUA,QAAO;AAEjB,UAAI,SAAS;AAEb,MAAAA,OAAM,UAAU,MAAM;AAAA,QACrB,WAAW;AAAA,QACX,UAAU;AAAA,UACT,SAAS,OAAO,eAAe,sBAAsB,SAAS,MAAM,OAAO,SAAS,QAAQ,kBAAkB,MAAM;AAAA,UACpH,QAAQ;AAAA,YACP,QAAQ;AAAA,YACR,8BAA8B;AAAA,cAC7B,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,OAAO;AAAA,YACR;AAAA,YACA,WAAW;AAAA,cACV,SAAS;AAAA,cACT,YAAY;AAAA,YACb;AAAA;AAAA,UAED;AAAA,QACD;AAAA,QACA,OAAO;AAAA;AAAA,UAEN,SAAS,OAAO,iBAAiB,OAAO,SAAS,MAAM,8BAA8B,SAAS,QAAQ,GAAG;AAAA,UACzG,QAAQ;AAAA,UACR,QAAQ;AAAA,YACP,YAAY;AAAA,YACZ,eAAe;AAAA,YACf,UAAU;AAAA,cACT,SAAS,OAAO,MAAM,OAAO,SAAS,GAAG;AAAA,cACzC,OAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,QACA,YAAY;AAAA,UACX,SAAS,OAAO,sDAAuD,OAAO,SAAS,eAAe;AAAA,UACtG,YAAY;AAAA,QACb;AAAA,QACA,UAAU;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA,QACT;AAAA,QACA,YAAY;AAAA,UACX,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,QACA,aAAa;AAAA,QACb,YAAY;AAAA,UACX,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,QACA,eAAe;AAAA,MAChB;AAEA,MAAAA,OAAM,UAAU,IAAI,QAAQ,EAAE,OAAO,OAAOA,OAAM,UAAU;AAE5D,UAAI,SAASA,OAAM,UAAU;AAC7B,UAAI,QAAQ;AACX,eAAO,IAAI,WAAW,SAAS,KAAK;AACpC,eAAO,IAAI,aAAa,SAAS,KAAK;AAAA,MACvC;AAAA,IAED,GAAEA,MAAK;AAOP,IAAAA,OAAM,UAAU,QAAQ;AAAA,MACvB,WAAW;AAAA,QACV;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACT;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQ;AAAA,QACT;AAAA,MACD;AAAA,MACA,UAAU;AAAA,QACT,SAAS;AAAA,QACT,QAAQ;AAAA,MACT;AAAA,MACA,cAAc;AAAA,QACb,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACP,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,MACA,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,eAAe;AAAA,IAChB;AAOA,IAAAA,OAAM,UAAU,aAAaA,OAAM,UAAU,OAAO,SAAS;AAAA,MAC5D,cAAc;AAAA,QACbA,OAAM,UAAU,MAAM,YAAY;AAAA,QAClC;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,MACD;AAAA,MACA,WAAW;AAAA,QACV;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,QACb;AAAA,MACD;AAAA;AAAA,MAEA,YAAY;AAAA,MACZ,UAAU;AAAA,QACT,SAAS;AAAA,UACR,aAAa,SACb;AAAA,WAGC,eAAe,SACf;AAAA,UAEA,0BAA0B,SAC1B;AAAA,UAEA,4BAA4B,SAC5B;AAAA,UAEA,sCAAsC,SACtC;AAAA,UAEA,gBAAgB,SAChB;AAAA,UAEA,oFAAoF,UAErF,MACA,YAAY;AAAA,QACb;AAAA,QACA,YAAY;AAAA,MACb;AAAA,MACA,YAAY;AAAA,IACb,CAAC;AAED,IAAAA,OAAM,UAAU,WAAW,YAAY,EAAE,CAAC,EAAE,UAAU;AAEtD,IAAAA,OAAM,UAAU,aAAa,cAAc,WAAW;AAAA,MACrD,SAAS;AAAA,QACR,SAAS;AAAA;AAAA;AAAA,UAGR,0DAA0D;AAAA;AAAA;AAAA;AAAA,UAK1D,KAAK,SACL,QACA,iEAAiE,SACjE;AAAA,UAEA,qIAAqI,SACrI;AAAA,UAEA,kEAAkE;AAAA,QACnE;AAAA,QACA,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,QAAQ;AAAA,UACP,gBAAgB;AAAA,YACf,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,OAAO;AAAA,YACP,QAAQA,OAAM,UAAU;AAAA,UACzB;AAAA,UACA,mBAAmB;AAAA,UACnB,eAAe;AAAA,QAChB;AAAA,MACD;AAAA;AAAA,MAEA,qBAAqB;AAAA,QACpB,SAAS;AAAA,QACT,OAAO;AAAA,MACR;AAAA,MACA,aAAa;AAAA,QACZ;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQA,OAAM,UAAU;AAAA,QACzB;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQA,OAAM,UAAU;AAAA,QACzB;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQA,OAAM,UAAU;AAAA,QACzB;AAAA,QACA;AAAA,UACC,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,QAAQA,OAAM,UAAU;AAAA,QACzB;AAAA,MACD;AAAA,MACA,YAAY;AAAA,IACb,CAAC;AAED,IAAAA,OAAM,UAAU,aAAa,cAAc,UAAU;AAAA,MACpD,YAAY;AAAA,QACX,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,OAAO;AAAA,MACR;AAAA,MACA,mBAAmB;AAAA,QAClB,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,UACP,wBAAwB;AAAA,YACvB,SAAS;AAAA,YACT,OAAO;AAAA,UACR;AAAA,UACA,iBAAiB;AAAA,YAChB,SAAS;AAAA,YACT,YAAY;AAAA,YACZ,QAAQ;AAAA,cACP,6BAA6B;AAAA,gBAC5B,SAAS;AAAA,gBACT,OAAO;AAAA,cACR;AAAA,cACA,MAAMA,OAAM,UAAU;AAAA,YACvB;AAAA,UACD;AAAA,UACA,UAAU;AAAA,QACX;AAAA,MACD;AAAA,MACA,mBAAmB;AAAA,QAClB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAED,IAAAA,OAAM,UAAU,aAAa,cAAc,YAAY;AAAA,MACtD,oBAAoB;AAAA,QACnB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,MACR;AAAA,IACD,CAAC;AAED,QAAIA,OAAM,UAAU,QAAQ;AAC3B,MAAAA,OAAM,UAAU,OAAO,IAAI,WAAW,UAAU,YAAY;AAI5D,MAAAA,OAAM,UAAU,OAAO,IAAI;AAAA,QAC1B,yNAAyN;AAAA,QACzN;AAAA,MACD;AAAA,IACD;AAEA,IAAAA,OAAM,UAAU,KAAKA,OAAM,UAAU;AAOrC,KAAC,WAAY;AAEZ,UAAI,OAAOA,WAAU,eAAe,OAAO,aAAa,aAAa;AACpE;AAAA,MACD;AAGA,UAAI,CAAC,QAAQ,UAAU,SAAS;AAC/B,gBAAQ,UAAU,UAAU,QAAQ,UAAU,qBAAqB,QAAQ,UAAU;AAAA,MACtF;AAEA,UAAI,kBAAkB;AACtB,UAAI,kBAAkB,SAAU,QAAQ,SAAS;AAChD,eAAO,aAAa,SAAS,2BAA2B;AAAA,MACzD;AACA,UAAI,wBAAwB;AAE5B,UAAI,aAAa;AAAA,QAChB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,QACL,OAAO;AAAA,MACR;AAEA,UAAI,cAAc;AAClB,UAAI,iBAAiB;AACrB,UAAI,gBAAgB;AACpB,UAAI,gBAAgB;AAEpB,UAAI,WAAW,wBAAwB,cAAc,OAAO,gBAAgB,cAC9D,cAAc,OAAO,iBAAiB;AASpD,eAAS,SAAS,KAAK,SAAS,OAAO;AACtC,YAAI,MAAM,IAAI,eAAe;AAC7B,YAAI,KAAK,OAAO,KAAK,IAAI;AACzB,YAAI,qBAAqB,WAAY;AACpC,cAAI,IAAI,cAAc,GAAG;AACxB,gBAAI,IAAI,SAAS,OAAO,IAAI,cAAc;AACzC,sBAAQ,IAAI,YAAY;AAAA,YACzB,OAAO;AACN,kBAAI,IAAI,UAAU,KAAK;AACtB,sBAAM,gBAAgB,IAAI,QAAQ,IAAI,UAAU,CAAC;AAAA,cAClD,OAAO;AACN,sBAAM,qBAAqB;AAAA,cAC5B;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,YAAI,KAAK,IAAI;AAAA,MACd;AAUA,eAAS,WAAW,OAAO;AAC1B,YAAI,IAAI,wCAAwC,KAAK,SAAS,EAAE;AAChE,YAAI,GAAG;AACN,cAAI,QAAQ,OAAO,EAAE,CAAC,CAAC;AACvB,cAAI,QAAQ,EAAE,CAAC;AACf,cAAI,MAAM,EAAE,CAAC;AAEb,cAAI,CAAC,OAAO;AACX,mBAAO,CAAC,OAAO,KAAK;AAAA,UACrB;AACA,cAAI,CAAC,KAAK;AACT,mBAAO,CAAC,OAAO,MAAS;AAAA,UACzB;AACA,iBAAO,CAAC,OAAO,OAAO,GAAG,CAAC;AAAA,QAC3B;AACA,eAAO;AAAA,MACR;AAEA,MAAAA,OAAM,MAAM,IAAI,uBAAuB,SAAU,KAAK;AACrD,YAAI,YAAY,OAAO;AAAA,MACxB,CAAC;AAED,MAAAA,OAAM,MAAM,IAAI,uBAAuB,SAAU,KAAK;AACrD,YAAI;AAAA;AAAA,UAAqC,IAAI;AAAA;AAC7C,YAAI,IAAI,QAAQ,QAAQ,GAAG;AAC1B,cAAI,OAAO;AAEX,cAAI,aAAa,aAAa,cAAc;AAG5C,cAAI,OAAO,IAAI,YAAY,SAAS,cAAc,MAAM,CAAC;AACzD,eAAK,cAAc;AAEnB,cAAI,MAAM,IAAI,aAAa,UAAU;AAErC,cAAI,WAAW,IAAI;AACnB,cAAI,aAAa,QAAQ;AAGxB,gBAAI,aAAa,WAAW,KAAK,GAAG,KAAK,CAAC,EAAE,MAAM,GAAG,CAAC;AACtD,uBAAW,WAAW,SAAS,KAAK;AAAA,UACrC;AAGA,UAAAA,OAAM,KAAK,YAAY,MAAM,QAAQ;AACrC,UAAAA,OAAM,KAAK,YAAY,KAAK,QAAQ;AAGpC,cAAI,aAAaA,OAAM,QAAQ;AAC/B,cAAI,YAAY;AACf,uBAAW,cAAc,QAAQ;AAAA,UAClC;AAGA;AAAA,YACC;AAAA,YACA,SAAU,MAAM;AAEf,kBAAI,aAAa,aAAa,aAAa;AAG3C,kBAAI,QAAQ,WAAW,IAAI,aAAa,YAAY,CAAC;AACrD,kBAAI,OAAO;AACV,oBAAI,QAAQ,KAAK,MAAM,WAAW;AAGlC,oBAAI,QAAQ,MAAM,CAAC;AACnB,oBAAI,MAAM,MAAM,CAAC,KAAK,OAAO,MAAM,SAAS,MAAM,CAAC;AAEnD,oBAAI,QAAQ,GAAG;AAAE,2BAAS,MAAM;AAAA,gBAAQ;AACxC,wBAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,QAAQ,GAAG,MAAM,MAAM,CAAC;AACrD,oBAAI,MAAM,GAAG;AAAE,yBAAO,MAAM;AAAA,gBAAQ;AACpC,sBAAM,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,MAAM,MAAM,CAAC;AAE7C,uBAAO,MAAM,MAAM,OAAO,GAAG,EAAE,KAAK,IAAI;AAGxC,oBAAI,CAAC,IAAI,aAAa,YAAY,GAAG;AACpC,sBAAI,aAAa,cAAc,OAAO,QAAQ,CAAC,CAAC;AAAA,gBACjD;AAAA,cACD;AAGA,mBAAK,cAAc;AACnB,cAAAA,OAAM,iBAAiB,IAAI;AAAA,YAC5B;AAAA,YACA,SAAU,OAAO;AAEhB,kBAAI,aAAa,aAAa,aAAa;AAE3C,mBAAK,cAAc;AAAA,YACpB;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAED,MAAAA,OAAM,QAAQ,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQ7B,WAAW,SAAS,UAAU,WAAW;AACxC,cAAI,YAAY,aAAa,UAAU,iBAAiB,QAAQ;AAEhE,mBAAS,IAAI,GAAGE,UAAUA,WAAU,SAAS,GAAG,KAAK;AACpD,YAAAF,OAAM,iBAAiBE,QAAO;AAAA,UAC/B;AAAA,QACD;AAAA,MACD;AAEA,UAAI,SAAS;AAEb,MAAAF,OAAM,gBAAgB,WAAY;AACjC,YAAI,CAAC,QAAQ;AACZ,kBAAQ,KAAK,yFAAyF;AACtG,mBAAS;AAAA,QACV;AACA,QAAAA,OAAM,QAAQ,cAAc,UAAU,MAAM,MAAM,SAAS;AAAA,MAC5D;AAAA,IAED,GAAE;AAAA;AAAA;;;ACz5DF;AAAA;AAAA,WAAO,UAAU;AAAA,MAChB,UAAU,SAAS,WAAU;AAC5B,eAAO;AAAA,MACR;AAAA,MACA,WAAW,SAAS,YAAW;AAC9B,eAAO;AAAA,MACR;AAAA,IACD;AAAA;AAAA;;;ACPA,IAAAS,kBAAO;;;ACAA,IAAM,kBAAkB,CAAC,gBAAgB,WAAW,mBAAmB;;;ACA9E,qBAAkB;;;ACwBlB,IAAM,SAAS;AAoBR,SAAS,cAAc,UAAU,gBAAgB;AACtD,QAAM,QAAQ,YAAY;AAE1B,QAAM,QAAQ,CAAC;AACf,MAAI,QAAQ;AAEZ,MAAI;AAEJ,MAAI;AAEJ,SAAO,QAAQ,MAAM,QAAQ;AAC3B,WAAO,YAAY;AACnB,UAAM,QAAQ,OAAO,KAAK,KAAK;AAC/B,UAAM,WAAW,MAAM,MAAM,OAAO,QAAQ,MAAM,QAAQ,MAAM,MAAM;AAEtE,QAAI,UAAU;AACZ,UAAI,CAAC,UAAU;AACb,kBAAU;AAAA,MACZ,WAAW,aAAa,KAAK;AAC3B,cAAM,KAAK;AAAA,MACb,WAAW,MAAM,QAAQ,MAAM,SAAS,GAAG;AACzC,cAAM,UAAU,KAAK,QAAQ;AAAA,MAC/B,OAAO;AACL,cAAM,YAAY,CAAC,QAAQ;AAAA,MAC7B;AAEA,eAAS,SAAS;AAAA,IACpB;AAEA,QAAI,OAAO;AACT,iBAAW,MAAM,CAAC;AAClB;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM;AAAA;AAAA,IAEN,SAAS,WAAW,kBAAkB;AAAA,IACtC,YAAY;AAAA,IACZ,UAAU,CAAC;AAAA,EACb;AACF;;;ACXO,SAAS,QAAQ,QAAQ,gBAAgB,eAAe;AAC7D,QAAM,SAAS,gBAAgB,gBAAgB,aAAa,IAAI;AA8BhE,WAASC,GAAE,UAAU,eAAe,UAAU;AAE5C,QAAI;AAEJ,QAAI,aAAa,QAAQ,aAAa,QAAW;AAC/C,aAAO,EAAC,MAAM,QAAQ,UAAU,CAAC,EAAC;AAElC,YAAM;AAAA;AAAA,QAA8B;AAAA;AACpC,eAAS,QAAQ,KAAK;AAAA,IACxB,OAAO;AACL,aAAO,cAAc,UAAU,cAAc;AAE7C,YAAM,QAAQ,KAAK,QAAQ,YAAY;AACvC,YAAM,WAAW,SAAS,OAAO,IAAI,KAAK,IAAI;AAC9C,WAAK,UAAU,YAAY;AAG3B,UAAI,QAAQ,UAAU,GAAG;AACvB,iBAAS,QAAQ,UAAU;AAAA,MAC7B,OAAO;AACL,mBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU,GAAG;AACrD,sBAAY,QAAQ,KAAK,YAAY,KAAK,KAAK;AAAA,QACjD;AAAA,MACF;AAAA,IACF;AAGA,eAAW,SAAS,UAAU;AAC5B,eAAS,KAAK,UAAU,KAAK;AAAA,IAC/B;AAEA,QAAI,KAAK,SAAS,aAAa,KAAK,YAAY,YAAY;AAC1D,WAAK,UAAU,EAAC,MAAM,QAAQ,UAAU,KAAK,SAAQ;AACrD,WAAK,WAAW,CAAC;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAEA,SAAOA;AACT;AAUA,SAAS,QAAQ,OAAO;AAEtB,MAAI,UAAU,QAAQ,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,GAAG;AACvE,WAAO;AAAA,EACT;AAGA,MAAI,OAAO,MAAM,SAAS,SAAU,QAAO;AAI3C,QAAM;AAAA;AAAA,IAAiD;AAAA;AACvD,QAAM,OAAO,OAAO,KAAK,KAAK;AAE9B,aAAW,OAAO,MAAM;AACtB,UAAMC,SAAQ,OAAO,GAAG;AAExB,QAAIA,UAAS,OAAOA,WAAU,UAAU;AACtC,UAAI,CAAC,MAAM,QAAQA,MAAK,EAAG,QAAO;AAElC,YAAM;AAAA;AAAA,QAA8CA;AAAA;AAEpD,iBAAW,QAAQ,MAAM;AACvB,YAAI,OAAO,SAAS,YAAY,OAAO,SAAS,UAAU;AACxD,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,MAAI,cAAc,SAAS,MAAM,QAAQ,MAAM,QAAQ,GAAG;AACxD,WAAO;AAAA,EACT;AAKA,SAAO;AACT;AAcA,SAAS,YAAY,QAAQ,YAAY,KAAK,OAAO;AACnD,QAAM,OAAO,KAAK,QAAQ,GAAG;AAE7B,MAAI;AAGJ,MAAI,UAAU,QAAQ,UAAU,OAAW;AAE3C,MAAI,OAAO,UAAU,UAAU;AAE7B,QAAI,OAAO,MAAM,KAAK,EAAG;AAEzB,aAAS;AAAA,EACX,WAES,OAAO,UAAU,WAAW;AACnC,aAAS;AAAA,EACX,WAES,OAAO,UAAU,UAAU;AAClC,QAAI,KAAK,gBAAgB;AACvB,eAASC,OAAY,KAAK;AAAA,IAC5B,WAAW,KAAK,gBAAgB;AAC9B,eAAS,MAAY,KAAK;AAAA,IAC5B,WAAW,KAAK,uBAAuB;AACrC,eAASA,OAAY,MAAY,KAAK,EAAE,KAAK,GAAG,CAAC;AAAA,IACnD,OAAO;AACL,eAAS,eAAe,MAAM,KAAK,UAAU,KAAK;AAAA,IACpD;AAAA,EACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,aAAS,CAAC,GAAG,KAAK;AAAA,EACpB,OAAO;AACL,aAAS,KAAK,aAAa,UAAU,MAAM,KAAK,IAAI,OAAO,KAAK;AAAA,EAClE;AAEA,MAAI,MAAM,QAAQ,MAAM,GAAG;AAEzB,UAAM,cAAc,CAAC;AAErB,eAAW,QAAQ,QAAQ;AAEzB,kBAAY;AAAA;AAAA,QAER,eAAe,MAAM,KAAK,UAAU,IAAI;AAAA,MAE5C;AAAA,IACF;AAEA,aAAS;AAAA,EACX;AAGA,MAAI,KAAK,aAAa,eAAe,MAAM,QAAQ,WAAW,SAAS,GAAG;AAExE,aAAS,WAAW,UAAU;AAAA;AAAA,MAC6B;AAAA,IAC3D;AAAA,EACF;AAEA,aAAW,KAAK,QAAQ,IAAI;AAC9B;AAUA,SAAS,SAAS,OAAO,OAAO;AAC9B,MAAI,UAAU,QAAQ,UAAU,QAAW;AAAA,EAE3C,WAAW,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AACjE,UAAM,KAAK,EAAC,MAAM,QAAQ,OAAO,OAAO,KAAK,EAAC,CAAC;AAAA,EACjD,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,eAAW,SAAS,OAAO;AACzB,eAAS,OAAO,KAAK;AAAA,IACvB;AAAA,EACF,WAAW,OAAO,UAAU,YAAY,UAAU,OAAO;AACvD,QAAI,MAAM,SAAS,QAAQ;AACzB,eAAS,OAAO,MAAM,QAAQ;AAAA,IAChC,OAAO;AACL,YAAM,KAAK,KAAK;AAAA,IAClB;AAAA,EACF,OAAO;AACL,UAAM,IAAI,MAAM,2CAA2C,QAAQ,GAAG;AAAA,EACxE;AACF;AAcA,SAAS,eAAe,MAAM,MAAM,OAAO;AACzC,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,KAAK,UAAU,SAAS,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,GAAG;AACxD,aAAO,OAAO,KAAK;AAAA,IACrB;AAEA,SACG,KAAK,WAAW,KAAK,uBACrB,UAAU,MAAM,UAAU,KAAK,MAAM,UAAU,IAAI,IACpD;AACA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,MAAM,QAAQ;AAErB,QAAM,SAAS,CAAC;AAEhB,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,WAAO,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC;AAAA,EACrC;AAEA,SAAO,OAAO,KAAK,IAAI;AACzB;AAUA,SAAS,gBAAgB,QAAQ;AAE/B,QAAM,SAAS,oBAAI,IAAI;AAEvB,aAAW,SAAS,QAAQ;AAC1B,WAAO,IAAI,MAAM,YAAY,GAAG,KAAK;AAAA,EACvC;AAEA,SAAO;AACT;;;ACvWO,IAAM,2BAA2B;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACvBO,IAAM,IAAI,QAAQ,MAAM,KAAK;AAI7B,IAAM,IAAI,QAAQ,KAAK,KAAK,wBAAwB;;;ACRpD,SAAS,SAAS,MAAM;AAC7B,QAAM,QAAQ,OAAO,IAAI;AAOzB,QAAM,UAAU,CAAC;AAEjB,SAAO,EAAC,UAAU,QAAO;AAGzB,WAAS,QAAQ,QAAQ;AACvB,QAAI,OAAO,WAAW,YAAY,SAAS,MAAM,UAAU,MAAM,QAAQ;AACvE,UAAI,QAAQ;AAEZ,aAAO,MAAM;AACX,YAAI,MAAM,QAAQ,KAAK;AAEvB,YAAI,QAAQ,QAAW;AACrB,gBAAM,MAAM,KAAK,OAAO,QAAQ,QAAQ,CAAC,CAAC;AAC1C,gBAAM,QAAQ,KAAK,MAAM,SAAS,IAAI,MAAM;AAC5C,kBAAQ,KAAK,IAAI;AAAA,QACnB;AAEA,YAAI,MAAM,QAAQ;AAChB,iBAAO;AAAA,YACL,MAAM,QAAQ;AAAA,YACd,QAAQ,UAAU,QAAQ,IAAI,QAAQ,QAAQ,CAAC,IAAI,KAAK;AAAA,YACxD;AAAA,UACF;AAAA,QACF;AAEA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,WAAS,SAASC,QAAO;AACvB,QACEA,UACA,OAAOA,OAAM,SAAS,YACtB,OAAOA,OAAM,WAAW,YACxB,CAAC,OAAO,MAAMA,OAAM,IAAI,KACxB,CAAC,OAAO,MAAMA,OAAM,MAAM,GAC1B;AACA,aAAO,QAAQ,SAASA,OAAM,MAAM;AAClC,cAAM,OAAO,QAAQ,QAAQ,SAAS,CAAC;AACvC,cAAM,MAAM,KAAK,OAAO,IAAI;AAC5B,cAAM,MAAM,QAAQ,KAAK,MAAM,SAAS,IAAI,MAAM;AAClD,YAAI,SAAS,IAAK;AAClB,gBAAQ,KAAK,GAAG;AAAA,MAClB;AAEA,YAAM,UACHA,OAAM,OAAO,IAAI,QAAQA,OAAM,OAAO,CAAC,IAAI,KAAKA,OAAM,SAAS;AAElE,UAAI,SAAS,QAAQA,OAAM,OAAO,CAAC,EAAG,QAAO;AAAA,IAC/C;AAAA,EACF;AACF;AAMA,SAAS,KAAK,OAAO,MAAM;AACzB,QAAM,KAAK,MAAM,QAAQ,MAAM,IAAI;AACnC,QAAM,KAAK,MAAM,QAAQ,MAAM,IAAI;AACnC,MAAI,OAAO,GAAI,QAAO;AACtB,MAAI,OAAO,MAAM,KAAK,MAAM,GAAI,QAAO;AACvC,SAAO,KAAK,KAAK,KAAK;AACxB;;;ACvFO,IAAM,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,OAAO;AAAA,EACP,KAAK;AAAA,EACL,OAAO;AACT;;;ACgBA,IAAM,MAAM,CAAC,EAAE;AAGf,IAAM,QAAQ,OAAO;AAYd,SAAS,WAAW,MAAM,SAAS;AACxC,QAAM,WAAW,WAAW,CAAC;AAE7B,SAAO;AAAA,IACL;AAAA,MACE,MAAM,SAAS,QAAQ;AAAA,MACvB,UAAU;AAAA,MACV,QAAQ,SAAS,UAAU,QAAQ,MAAM;AAAA,MACzC,SAAS,SAAS,WAAW;AAAA,IAC/B;AAAA,IACA;AAAA,EACF;AACF;AAYA,SAAS,IAAI,OAAO,MAAM;AAExB,MAAI;AAEJ,UAAQ,KAAK,UAAU;AAAA,IACrB,KAAK,YAAY;AACf,YAAM;AAAA;AAAA,QACJ;AAAA;AAEF,eAAS,EAAC,MAAM,WAAW,OAAO,UAAU,KAAI;AAChD,YAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAEA,KAAK;AAAA,IACL,KAAK,sBAAsB;AACzB,YAAM;AAAA;AAAA,QAEF;AAAA;AAEJ,YAAM,aACJ,UAAU,YACN,UAAU,SAAS,YAAY,UAAU,SAAS,mBAClD;AAEN,eAAS;AAAA,QACP,MAAM;AAAA,QACN,UAAU,IAAI,OAAO,KAAK,UAAU;AAAA,QACpC,MAAM,EAAC,WAAU;AAAA,MACnB;AAEA,UAAI,MAAM,QAAQ,MAAM,UAAU;AAChC,cAAMC,YAAW,OAAO,MAAM,IAAI;AAClC,cAAM,MAAM,SAASA,SAAQ;AAC7B,cAAM,QAAQ,IAAI,QAAQ,CAAC;AAC3B,cAAM,MAAM,IAAI,QAAQA,UAAS,MAAM;AAEvC,WAAO,OAAO,kBAAkB;AAChC,WAAO,KAAK,gBAAgB;AAC5B,eAAO,WAAW,EAAC,OAAO,IAAG;AAAA,MAC/B;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,iBAAiB;AACpB,YAAM;AAAA;AAAA,QACJ;AAAA;AAEF,eAAS,EAAC,MAAM,UAAS;AACzB,YAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,SAAS;AACZ,YAAM;AAAA;AAAA,QAA8D;AAAA;AACpE,eAAS,EAAC,MAAM,QAAQ,OAAO,UAAU,MAAK;AAC9C,YAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAGA,SAAS;AACP,YAAM;AAAA;AAAA,QAA6D;AAAA;AACnE,eAAS,QAAQ,OAAO,SAAS;AACjC,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAYA,SAAS,IAAI,OAAO,OAAO;AACzB,MAAI,QAAQ;AAEZ,QAAM,UAAU,CAAC;AAEjB,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAE7B,UAAM;AAAA;AAAA,MAAqC,IAAI,OAAO,MAAM,KAAK,CAAC;AAAA;AAClE,YAAQ,KAAK,MAAM;AAAA,EACrB;AAEA,SAAO;AACT;AAYA,SAAS,QAAQ,OAAO,MAAM;AAC5B,QAAM,SAAS,MAAM;AAErB,QAAM,SAAS,KAAK,iBAAiB,cAAc,MAAM,MAAM;AAG/D,MAAI,QAAQ;AAEZ,QAAM,aAAa,CAAC;AAEpB,SAAO,EAAE,QAAQ,KAAK,MAAM,QAAQ;AAClC,UAAMC,aAAY,KAAK,MAAM,KAAK;AAClC,UAAM,QACHA,WAAU,SAASA,WAAU,SAAS,MAAM,MAAMA,WAAU;AAC/D,QAAI,CAAC,IAAI,KAAK,OAAO,IAAI,GAAG;AAC1B,iBAAW,IAAI,IAAIA,WAAU;AAAA,IAC/B;AAAA,EACF;AAGA,QAAM,IAAI,MAAM,OAAO,UAAU,QAAQ,IAAI;AAC7C,QAAM,SAAS,EAAE,KAAK,SAAS,YAAY,IAAI,OAAO,KAAK,UAAU,CAAC;AACtE,QAAM,OAAO,MAAM,MAAM;AAGzB,MAAI,OAAO,YAAY,YAAY;AACjC,UAAM;AAAA;AAAA,MAA8D;AAAA;AACpE,UAAM,MAAM,UAAU;AACtB,UAAM,WAAW,OAAO,IAAI,YAAY,SAAS,IAAI,QAAQ;AAC7D,UAAM,SAAS,OAAO,IAAI,UAAU,SAAS,IAAI,MAAM;AAGvD,UAAM;AAAA;AAAA,MAA+B,IAAI,OAAO,UAAU,OAAO;AAAA;AAEjE,QAAI,YAAY,UAAU,MAAM,MAAM;AACpC,cAAQ,WAAW,EAAC,OAAO,SAAS,KAAK,KAAK,OAAO,MAAK;AAAA,IAC5D;AAEA,WAAO,UAAU;AAAA,EACnB;AAEA,QAAM,SAAS;AAEf,SAAO;AACT;AAcA,SAAS,MAAM,OAAO,MAAM,IAAI;AAC9B,MAAI,wBAAwB,QAAQ,KAAK,sBAAsB,MAAM,MAAM;AACzE,UAAMC,YAAW,eAAe,OAAO,IAAI,KAAK,kBAAkB;AAElE,QAAIA,WAAU;AACZ,YAAM,WAAW;AACjB,SAAG,WAAWA;AAAA,IAChB;AAAA,EACF;AACF;AAcA,SAAS,eAAe,OAAO,MAAMC,WAAU;AAC7C,QAAM,SAAS,SAASA,SAAQ;AAEhC,MAAI,KAAK,SAAS,WAAW;AAC3B,UAAM,OAAO,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AAInD,QACE,UACA,CAACA,UAAS,UACV,QACA,KAAK,YACL,KAAK,SAAS,KACd;AACA,aAAO,MAAM,OAAO,OAAO,CAAC,GAAG,KAAK,SAAS,GAAG;AAAA,IAClD;AAEA,QAAI,MAAM,SAAS;AAEjB,YAAM,aAAa,CAAC;AAEpB,UAAI;AAEJ,UAAIA,UAAS,OAAO;AAClB,aAAK,OAAOA,UAAS,OAAO;AAC1B,cAAI,IAAI,KAAKA,UAAS,OAAO,GAAG,GAAG;AACjC,uBAAW,KAAK,MAAM,QAAQ,GAAG,EAAE,QAAQ,IAAI;AAAA,cAC7CA,UAAS,MAAM,GAAG;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,SAAOA,UAAS,UAAU,0BAA0B;AACpD,YAAM,UAAU,SAASA,UAAS,QAAQ;AAC1C,YAAM,UAAUA,UAAS,SAAS,SAASA,UAAS,MAAM,IAAI;AAE9D,YAAM,OAAO,EAAC,QAAO;AACrB,UAAI,QAAS,MAAK,UAAU;AAC5B,WAAK,aAAa;AAElB,WAAK,OAAO,EAAC,UAAU,KAAI;AAAA,IAC7B;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,SAAS,KAAK;AACrB,QAAM,QAAQ,MAAM;AAAA,IAClB,MAAM,IAAI;AAAA,IACV,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,EACd,CAAC;AACD,QAAM,MAAM,MAAM;AAAA,IAChB,MAAM,IAAI;AAAA,IACV,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,EACd,CAAC;AAID,SAAO,SAAS,MAAM,EAAC,OAAO,IAAG,IAAI;AACvC;AAUA,SAAS,MAAMC,QAAO;AACpB,SAAOA,OAAM,QAAQA,OAAM,SAASA,SAAQ;AAC9C;;;AChVA,IAAM,wBAAwB,oBAAI,IAAI;AAAA,EAClC;AAAA,EAAO;AAAA,EAAO;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAC9E;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EACxE;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EAAQ;AAAA,EACxE;AAAA,EAAS;AAAA,EAAS;AACtB,CAAC;AACM,IAAM,wBAAwB;AAC9B,IAAI;AAAA,CACV,SAAUC,cAAa;AACpB,EAAAA,aAAYA,aAAY,KAAK,IAAI,EAAE,IAAI;AACvC,EAAAA,aAAYA,aAAY,MAAM,IAAI,CAAC,IAAI;AACvC,EAAAA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;AAC7C,EAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,EAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,EAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,EAAAA,aAAYA,aAAY,OAAO,IAAI,EAAE,IAAI;AACzC,EAAAA,aAAYA,aAAY,kBAAkB,IAAI,EAAE,IAAI;AACpD,EAAAA,aAAYA,aAAY,gBAAgB,IAAI,EAAE,IAAI;AAClD,EAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,EAAAA,aAAYA,aAAY,YAAY,IAAI,EAAE,IAAI;AAC9C,EAAAA,aAAYA,aAAY,cAAc,IAAI,EAAE,IAAI;AAChD,EAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,EAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,EAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,EAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,EAAAA,aAAYA,aAAY,gBAAgB,IAAI,EAAE,IAAI;AAClD,EAAAA,aAAYA,aAAY,aAAa,IAAI,EAAE,IAAI;AAC/C,EAAAA,aAAYA,aAAY,mBAAmB,IAAI,EAAE,IAAI;AACrD,EAAAA,aAAYA,aAAY,eAAe,IAAI,EAAE,IAAI;AACjD,EAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,EAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,EAAAA,aAAYA,aAAY,sBAAsB,IAAI,EAAE,IAAI;AACxD,EAAAA,aAAYA,aAAY,cAAc,IAAI,EAAE,IAAI;AAChD,EAAAA,aAAYA,aAAY,eAAe,IAAI,EAAE,IAAI;AACjD,EAAAA,aAAYA,aAAY,eAAe,IAAI,GAAG,IAAI;AACtD,GAAG,gBAAgB,cAAc,CAAC,EAAE;AAC7B,IAAM,YAAY;AAAA,EACrB,WAAW;AAAA,EACX,aAAa;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AACZ;AAEO,SAAS,YAAY,IAAI;AAC5B,SAAO,MAAM,SAAS,MAAM;AAChC;AACO,SAAS,gBAAgB,IAAI;AAChC,SAAO,MAAM,SAAS,MAAM;AAChC;AACO,SAAS,0BAA0B,KAAK,KAAK;AAChD,UAAQ,MAAM,SAAS,OAAO,OAAO;AACzC;AAEO,SAAS,mBAAmB,IAAI;AACnC,SAAS,OAAO,MAAQ,OAAO,MAAQ,OAAO,MAAQ,OAAO,KAAQ,OAAO,MAAQ,MAAM,KAAQ,MAAM,MACnG,MAAM,OAAQ,MAAM;AAC7B;AACO,SAAS,qBAAqB,IAAI;AACrC,SAAQ,MAAM,SAAS,MAAM,SAAU,sBAAsB,IAAI,EAAE;AACvE;;;AC7DO,IAAI;AAAA,CACV,SAAUC,MAAK;AACZ,EAAAA,KAAI,+BAA+B,IAAI;AACvC,EAAAA,KAAI,2BAA2B,IAAI;AACnC,EAAAA,KAAI,wBAAwB,IAAI;AAChC,EAAAA,KAAI,+CAA+C,IAAI;AACvD,EAAAA,KAAI,sBAAsB,IAAI;AAC9B,EAAAA,KAAI,2BAA2B,IAAI;AACnC,EAAAA,KAAI,wBAAwB,IAAI;AAChC,EAAAA,KAAI,yBAAyB,IAAI;AACjC,EAAAA,KAAI,wCAAwC,IAAI;AAChD,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,yCAAyC,IAAI;AACjD,EAAAA,KAAI,mBAAmB,IAAI;AAC3B,EAAAA,KAAI,oCAAoC,IAAI;AAC5C,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,yCAAyC,IAAI;AACjD,EAAAA,KAAI,iDAAiD,IAAI;AACzD,EAAAA,KAAI,6CAA6C,IAAI;AACrD,EAAAA,KAAI,kBAAkB,IAAI;AAC1B,EAAAA,KAAI,UAAU,IAAI;AAClB,EAAAA,KAAI,uBAAuB,IAAI;AAC/B,EAAAA,KAAI,oCAAoC,IAAI;AAC5C,EAAAA,KAAI,4CAA4C,IAAI;AACpD,EAAAA,KAAI,2DAA2D,IAAI;AACnE,EAAAA,KAAI,4CAA4C,IAAI;AACpD,EAAAA,KAAI,2CAA2C,IAAI;AACnD,EAAAA,KAAI,2CAA2C,IAAI;AACnD,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,+BAA+B,IAAI;AACvC,EAAAA,KAAI,+BAA+B,IAAI;AACvC,EAAAA,KAAI,oBAAoB,IAAI;AAC5B,EAAAA,KAAI,0BAA0B,IAAI;AAClC,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,cAAc,IAAI;AACtB,EAAAA,KAAI,eAAe,IAAI;AACvB,EAAAA,KAAI,6BAA6B,IAAI;AACrC,EAAAA,KAAI,cAAc,IAAI;AACtB,EAAAA,KAAI,0BAA0B,IAAI;AAClC,EAAAA,KAAI,YAAY,IAAI;AACpB,EAAAA,KAAI,4CAA4C,IAAI;AACpD,EAAAA,KAAI,wBAAwB,IAAI;AAChC,EAAAA,KAAI,6BAA6B,IAAI;AACrC,EAAAA,KAAI,uCAAuC,IAAI;AAC/C,EAAAA,KAAI,2BAA2B,IAAI;AACnC,EAAAA,KAAI,gCAAgC,IAAI;AACxC,EAAAA,KAAI,oCAAoC,IAAI;AAC5C,EAAAA,KAAI,oBAAoB,IAAI;AAC5B,EAAAA,KAAI,0CAA0C,IAAI;AAClD,EAAAA,KAAI,oBAAoB,IAAI;AAC5B,EAAAA,KAAI,sBAAsB,IAAI;AAC9B,EAAAA,KAAI,gBAAgB,IAAI;AACxB,EAAAA,KAAI,kBAAkB,IAAI;AAC1B,EAAAA,KAAI,kCAAkC,IAAI;AAC1C,EAAAA,KAAI,uCAAuC,IAAI;AAC/C,EAAAA,KAAI,mCAAmC,IAAI;AAC3C,EAAAA,KAAI,0BAA0B,IAAI;AAClC,EAAAA,KAAI,2BAA2B,IAAI;AACnC,EAAAA,KAAI,iCAAiC,IAAI;AACzC,EAAAA,KAAI,sBAAsB,IAAI;AAC9B,EAAAA,KAAI,oCAAoC,IAAI;AAChD,GAAG,QAAQ,MAAM,CAAC,EAAE;;;AC3DpB,IAAM,2BAA2B,KAAK;AAI/B,IAAM,eAAN,MAAmB;AAAA,EACtB,YAAY,SAAS;AACjB,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,MAAM;AAEX,SAAK,aAAa;AAClB,SAAK,WAAW,CAAC;AACjB,SAAK,kBAAkB;AACvB,SAAK,mBAAmB;AACxB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,QAAQ;AACb,SAAK,eAAe;AACpB,SAAK,oBAAoB;AACzB,SAAK,OAAO;AAEZ,SAAK,gBAAgB;AAAA,EACzB;AAAA;AAAA,EAEA,IAAI,MAAM;AACN,WAAO,KAAK,MAAM,KAAK,eAAe,OAAO,KAAK,eAAe,KAAK,GAAG;AAAA,EAC7E;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,oBAAoB,KAAK;AAAA,EACzC;AAAA,EACA,SAAS,MAAM,UAAU;AACrB,UAAM,EAAE,MAAM,KAAK,OAAO,IAAI;AAC9B,UAAM,WAAW,MAAM;AACvB,UAAM,cAAc,SAAS;AAC7B,WAAO;AAAA,MACH;AAAA,MACA,WAAW;AAAA,MACX,SAAS;AAAA,MACT;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA,WAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,KAAK,MAAM;AACP,QAAI,KAAK,QAAQ,gBAAgB,KAAK,kBAAkB,KAAK,QAAQ;AACjE,WAAK,gBAAgB,KAAK;AAC1B,WAAK,QAAQ,aAAa,KAAK,SAAS,MAAM,CAAC,CAAC;AAAA,IACpD;AAAA,EACJ;AAAA,EACA,UAAU;AACN,SAAK,SAAS,KAAK,KAAK,UAAU;AAClC,SAAK,aAAa,KAAK;AAAA,EAC3B;AAAA,EACA,kBAAkB,IAAI;AAElB,QAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AACnC,YAAM,SAAS,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC;AAChD,UAAI,gBAAgB,MAAM,GAAG;AAEzB,aAAK;AAEL,aAAK,QAAQ;AACb,eAAO,0BAA0B,IAAI,MAAM;AAAA,MAC/C;AAAA,IACJ,WAES,CAAC,KAAK,kBAAkB;AAC7B,WAAK,gBAAgB;AACrB,aAAO,YAAE;AAAA,IACb;AAEA,SAAK,KAAK,IAAI,sBAAsB;AACpC,WAAO;AAAA,EACX;AAAA,EACA,sBAAsB;AAClB,WAAO,KAAK,MAAM,KAAK;AAAA,EAC3B;AAAA,EACA,kBAAkB;AACd,QAAI,KAAK,oBAAoB,GAAG;AAC5B,WAAK,OAAO,KAAK,KAAK,UAAU,KAAK,GAAG;AACxC,WAAK,gBAAgB,KAAK;AAC1B,WAAK,qBAAqB,KAAK;AAC/B,WAAK,MAAM;AACX,WAAK,aAAa;AAClB,WAAK,SAAS,SAAS;AAAA,IAC3B;AAAA,EACJ;AAAA,EACA,MAAM,OAAO,aAAa;AACtB,QAAI,KAAK,KAAK,SAAS,GAAG;AACtB,WAAK,QAAQ;AAAA,IACjB,OACK;AACD,WAAK,OAAO;AAAA,IAChB;AACA,SAAK,gBAAgB;AACrB,SAAK,mBAAmB;AAAA,EAC5B;AAAA,EACA,uBAAuB,OAAO;AAC1B,SAAK,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,MAAM,CAAC,IAAI,QAAQ,KAAK,KAAK,UAAU,KAAK,MAAM,CAAC;AAC3F,SAAK,gBAAgB;AAAA,EACzB;AAAA,EACA,WAAW,SAAS,eAAe;AAE/B,QAAI,KAAK,MAAM,QAAQ,SAAS,KAAK,KAAK,QAAQ;AAC9C,WAAK,gBAAgB,CAAC,KAAK;AAC3B,aAAO;AAAA,IACX;AACA,QAAI,eAAe;AACf,aAAO,KAAK,KAAK,WAAW,SAAS,KAAK,GAAG;AAAA,IACjD;AACA,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,YAAM,KAAK,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC,IAAI;AAChD,UAAI,OAAO,QAAQ,WAAW,CAAC,GAAG;AAC9B,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,KAAK,QAAQ;AACT,UAAM,MAAM,KAAK,MAAM;AACvB,QAAI,OAAO,KAAK,KAAK,QAAQ;AACzB,WAAK,gBAAgB,CAAC,KAAK;AAC3B,aAAO,YAAE;AAAA,IACb;AACA,UAAM,OAAO,KAAK,KAAK,WAAW,GAAG;AACrC,WAAO,SAAS,YAAE,kBAAkB,YAAE,YAAY;AAAA,EACtD;AAAA,EACA,UAAU;AACN,SAAK;AAEL,QAAI,KAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK;AACL,WAAK,eAAe,KAAK;AAAA,IAC7B;AACA,QAAI,KAAK,OAAO,KAAK,KAAK,QAAQ;AAC9B,WAAK,gBAAgB,CAAC,KAAK;AAC3B,aAAO,YAAE;AAAA,IACb;AACA,QAAI,KAAK,KAAK,KAAK,WAAW,KAAK,GAAG;AAEtC,QAAI,OAAO,YAAE,iBAAiB;AAC1B,WAAK,QAAQ;AACb,WAAK,kBAAkB;AACvB,aAAO,YAAE;AAAA,IACb;AAGA,QAAI,OAAO,YAAE,WAAW;AACpB,WAAK,QAAQ;AACb,UAAI,KAAK,iBAAiB;AAEtB,aAAK;AACL,aAAK,kBAAkB;AACvB,aAAK,QAAQ;AACb,eAAO,KAAK,QAAQ;AAAA,MACxB;AAAA,IACJ;AACA,SAAK,kBAAkB;AACvB,QAAI,YAAY,EAAE,GAAG;AACjB,WAAK,KAAK,kBAAkB,EAAE;AAAA,IAClC;AAIA,UAAM,qBAAqB,KAAK,QAAQ,iBAAiB,QACpD,KAAK,MAAQ,KAAK,OACnB,OAAO,YAAE,aACT,OAAO,YAAE,mBACR,KAAK,OAAQ,KAAK;AACvB,QAAI,CAAC,oBAAoB;AACrB,WAAK,+BAA+B,EAAE;AAAA,IAC1C;AACA,WAAO;AAAA,EACX;AAAA,EACA,+BAA+B,IAAI;AAC/B,QAAI,mBAAmB,EAAE,GAAG;AACxB,WAAK,KAAK,IAAI,6BAA6B;AAAA,IAC/C,WACS,qBAAqB,EAAE,GAAG;AAC/B,WAAK,KAAK,IAAI,yBAAyB;AAAA,IAC3C;AAAA,EACJ;AAAA,EACA,QAAQC,QAAO;AACX,SAAK,OAAOA;AACZ,WAAO,KAAK,MAAM,KAAK,YAAY;AAC/B,WAAK,aAAa,KAAK,SAAS,IAAI;AACpC,WAAK;AAAA,IACT;AACA,SAAK,QAAQ;AAAA,EACjB;AACJ;;;ACnMA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAI;AAAA,CACV,SAAUC,YAAW;AAClB,EAAAA,WAAUA,WAAU,WAAW,IAAI,CAAC,IAAI;AACxC,EAAAA,WAAUA,WAAU,gBAAgB,IAAI,CAAC,IAAI;AAC7C,EAAAA,WAAUA,WAAU,sBAAsB,IAAI,CAAC,IAAI;AACnD,EAAAA,WAAUA,WAAU,WAAW,IAAI,CAAC,IAAI;AACxC,EAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,EAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,EAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,EAAAA,WAAUA,WAAU,KAAK,IAAI,CAAC,IAAI;AAClC,EAAAA,WAAUA,WAAU,aAAa,IAAI,CAAC,IAAI;AAC9C,GAAG,cAAc,YAAY,CAAC,EAAE;AACzB,SAAS,aAAa,OAAO,UAAU;AAC1C,WAAS,IAAI,MAAM,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,QAAI,MAAM,MAAM,CAAC,EAAE,SAAS,UAAU;AAClC,aAAO,MAAM,MAAM,CAAC,EAAE;AAAA,IAC1B;AAAA,EACJ;AACA,SAAO;AACX;;;ACjBA,IAAA,2BAAe,IAAI;;EAEf,2keACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAAC;;;ACJpC,IAAA,0BAAe,IAAI;;EAEf,wCACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAAC;;;;ACJpC,IAAM,YAAY,oBAAI,IAAI;EACtB,CAAC,GAAG,KAAK;;EAET,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,IAAI;EACV,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;EACT,CAAC,KAAK,GAAG;CACZ;AAKM,IAAM;;GAET,KAAA,OAAO,mBAAa,QAAA,OAAA,SAAA,KACpB,SAAU,WAAiB;AACvB,QAAI,SAAS;AAEb,QAAI,YAAY,OAAQ;AACpB,mBAAa;AACb,gBAAU,OAAO,aACX,cAAc,KAAM,OAAS,KAAM;AAEzC,kBAAY,QAAU,YAAY;;AAGtC,cAAU,OAAO,aAAa,SAAS;AACvC,WAAO;EACX;;AAOE,SAAU,iBAAiB,WAAiB;;AAC9C,MAAK,aAAa,SAAU,aAAa,SAAW,YAAY,SAAU;AACtE,WAAO;;AAGX,UAAOC,MAAA,UAAU,IAAI,SAAS,OAAC,QAAAA,QAAA,SAAAA,MAAI;AACvC;;;ACvDA,IAAW;CAAX,SAAWC,YAAS;AAChB,EAAAA,WAAAA,WAAA,KAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,QAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,EAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACJ,GAbW,cAAA,YAAS,CAAA,EAAA;AAgBpB,IAAM,eAAe;AAErB,IAAY;CAAZ,SAAYC,eAAY;AACpB,EAAAA,cAAAA,cAAA,cAAA,IAAA,KAAA,IAAA;AACA,EAAAA,cAAAA,cAAA,eAAA,IAAA,KAAA,IAAA;AACA,EAAAA,cAAAA,cAAA,YAAA,IAAA,GAAA,IAAA;AACJ,GAJY,iBAAA,eAAY,CAAA,EAAA;AAMxB,SAAS,SAAS,MAAY;AAC1B,SAAO,QAAQ,UAAU,QAAQ,QAAQ,UAAU;AACvD;AAEA,SAAS,uBAAuB,MAAY;AACxC,SACK,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAC/C,QAAQ,UAAU,WAAW,QAAQ,UAAU;AAExD;AAEA,SAAS,oBAAoB,MAAY;AACrC,SACK,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAC/C,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAChD,SAAS,IAAI;AAErB;AAQA,SAAS,8BAA8B,MAAY;AAC/C,SAAO,SAAS,UAAU,UAAU,oBAAoB,IAAI;AAChE;AAEA,IAAW;CAAX,SAAWC,qBAAkB;AACzB,EAAAA,oBAAAA,oBAAA,aAAA,IAAA,CAAA,IAAA;AACA,EAAAA,oBAAAA,oBAAA,cAAA,IAAA,CAAA,IAAA;AACA,EAAAA,oBAAAA,oBAAA,gBAAA,IAAA,CAAA,IAAA;AACA,EAAAA,oBAAAA,oBAAA,YAAA,IAAA,CAAA,IAAA;AACA,EAAAA,oBAAAA,oBAAA,aAAA,IAAA,CAAA,IAAA;AACJ,GANW,uBAAA,qBAAkB,CAAA,EAAA;AAQ7B,IAAY;CAAZ,SAAYC,eAAY;AAEpB,EAAAA,cAAAA,cAAA,QAAA,IAAA,CAAA,IAAA;AAEA,EAAAA,cAAAA,cAAA,QAAA,IAAA,CAAA,IAAA;AAEA,EAAAA,cAAAA,cAAA,WAAA,IAAA,CAAA,IAAA;AACJ,GAPY,iBAAA,eAAY,CAAA,EAAA;AAuBlB,IAAO,gBAAP,MAAoB;EACtB,YAEqB,YAUA,eAEAC,SAA4B;AAZ5B,SAAA,aAAA;AAUA,SAAA,gBAAA;AAEA,SAAA,SAAAA;AAIb,SAAA,QAAQ,mBAAmB;AAE3B,SAAA,WAAW;AAOX,SAAA,SAAS;AAGT,SAAA,YAAY;AAEZ,SAAA,SAAS;AAET,SAAA,aAAa,aAAa;EAnB/B;;EAsBH,YAAY,YAAwB;AAChC,SAAK,aAAa;AAClB,SAAK,QAAQ,mBAAmB;AAChC,SAAK,SAAS;AACd,SAAK,YAAY;AACjB,SAAK,SAAS;AACd,SAAK,WAAW;EACpB;;;;;;;;;;;;EAaA,MAAM,KAAa,QAAc;AAC7B,YAAQ,KAAK,OAAO;MAChB,KAAK,mBAAmB,aAAa;AACjC,YAAI,IAAI,WAAW,MAAM,MAAM,UAAU,KAAK;AAC1C,eAAK,QAAQ,mBAAmB;AAChC,eAAK,YAAY;AACjB,iBAAO,KAAK,kBAAkB,KAAK,SAAS,CAAC;;AAEjD,aAAK,QAAQ,mBAAmB;AAChC,eAAO,KAAK,iBAAiB,KAAK,MAAM;;MAG5C,KAAK,mBAAmB,cAAc;AAClC,eAAO,KAAK,kBAAkB,KAAK,MAAM;;MAG7C,KAAK,mBAAmB,gBAAgB;AACpC,eAAO,KAAK,oBAAoB,KAAK,MAAM;;MAG/C,KAAK,mBAAmB,YAAY;AAChC,eAAO,KAAK,gBAAgB,KAAK,MAAM;;MAG3C,KAAK,mBAAmB,aAAa;AACjC,eAAO,KAAK,iBAAiB,KAAK,MAAM;;;EAGpD;;;;;;;;;;EAWQ,kBAAkB,KAAa,QAAc;AACjD,QAAI,UAAU,IAAI,QAAQ;AACtB,aAAO;;AAGX,SAAK,IAAI,WAAW,MAAM,IAAI,kBAAkB,UAAU,SAAS;AAC/D,WAAK,QAAQ,mBAAmB;AAChC,WAAK,YAAY;AACjB,aAAO,KAAK,gBAAgB,KAAK,SAAS,CAAC;;AAG/C,SAAK,QAAQ,mBAAmB;AAChC,WAAO,KAAK,oBAAoB,KAAK,MAAM;EAC/C;EAEQ,mBACJ,KACA,OACA,KACAC,OAAY;AAEZ,QAAI,UAAU,KAAK;AACf,YAAM,aAAa,MAAM;AACzB,WAAK,SACD,KAAK,SAAS,KAAK,IAAIA,OAAM,UAAU,IACvC,SAAS,IAAI,OAAO,OAAO,UAAU,GAAGA,KAAI;AAChD,WAAK,YAAY;;EAEzB;;;;;;;;;;EAWQ,gBAAgB,KAAa,QAAc;AAC/C,UAAM,WAAW;AAEjB,WAAO,SAAS,IAAI,QAAQ;AACxB,YAAM,OAAO,IAAI,WAAW,MAAM;AAClC,UAAI,SAAS,IAAI,KAAK,uBAAuB,IAAI,GAAG;AAChD,kBAAU;aACP;AACH,aAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AACjD,eAAO,KAAK,kBAAkB,MAAM,CAAC;;;AAI7C,SAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AAEjD,WAAO;EACX;;;;;;;;;;EAWQ,oBAAoB,KAAa,QAAc;AACnD,UAAM,WAAW;AAEjB,WAAO,SAAS,IAAI,QAAQ;AACxB,YAAM,OAAO,IAAI,WAAW,MAAM;AAClC,UAAI,SAAS,IAAI,GAAG;AAChB,kBAAU;aACP;AACH,aAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AACjD,eAAO,KAAK,kBAAkB,MAAM,CAAC;;;AAI7C,SAAK,mBAAmB,KAAK,UAAU,QAAQ,EAAE;AAEjD,WAAO;EACX;;;;;;;;;;;;;;EAeQ,kBAAkB,QAAgB,gBAAsB;;AAE5D,QAAI,KAAK,YAAY,gBAAgB;AACjC,OAAAC,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,2CACT,KAAK,QAAQ;AAEjB,aAAO;;AAIX,QAAI,WAAW,UAAU,MAAM;AAC3B,WAAK,YAAY;eACV,KAAK,eAAe,aAAa,QAAQ;AAChD,aAAO;;AAGX,SAAK,cAAc,iBAAiB,KAAK,MAAM,GAAG,KAAK,QAAQ;AAE/D,QAAI,KAAK,QAAQ;AACb,UAAI,WAAW,UAAU,MAAM;AAC3B,aAAK,OAAO,wCAAuC;;AAGvD,WAAK,OAAO,kCAAkC,KAAK,MAAM;;AAG7D,WAAO,KAAK;EAChB;;;;;;;;;;EAWQ,iBAAiB,KAAa,QAAc;AAChD,UAAM,EAAE,WAAU,IAAK;AACvB,QAAI,UAAU,WAAW,KAAK,SAAS;AAEvC,QAAI,eAAe,UAAU,aAAa,iBAAiB;AAE3D,WAAO,SAAS,IAAI,QAAQ,UAAU,KAAK,UAAU;AACjD,YAAM,OAAO,IAAI,WAAW,MAAM;AAElC,WAAK,YAAY,gBACb,YACA,SACA,KAAK,YAAY,KAAK,IAAI,GAAG,WAAW,GACxC,IAAI;AAGR,UAAI,KAAK,YAAY,GAAG;AACpB,eAAO,KAAK,WAAW;QAElB,KAAK,eAAe,aAAa;SAE7B,gBAAgB;QAEb,8BAA8B,IAAI,KACxC,IACA,KAAK,6BAA4B;;AAG3C,gBAAU,WAAW,KAAK,SAAS;AACnC,qBAAe,UAAU,aAAa,iBAAiB;AAGvD,UAAI,gBAAgB,GAAG;AAEnB,YAAI,SAAS,UAAU,MAAM;AACzB,iBAAO,KAAK,oBACR,KAAK,WACL,aACA,KAAK,WAAW,KAAK,MAAM;;AAKnC,YAAI,KAAK,eAAe,aAAa,QAAQ;AACzC,eAAK,SAAS,KAAK;AACnB,eAAK,YAAY,KAAK;AACtB,eAAK,SAAS;;;;AAK1B,WAAO;EACX;;;;;;EAOQ,+BAA4B;;AAChC,UAAM,EAAE,QAAQ,WAAU,IAAK;AAE/B,UAAM,eACD,WAAW,MAAM,IAAI,aAAa,iBAAiB;AAExD,SAAK,oBAAoB,QAAQ,aAAa,KAAK,QAAQ;AAC3D,KAAAA,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,wCAAuC;AAEpD,WAAO,KAAK;EAChB;;;;;;;;;;EAWQ,oBACJ,QACA,aACA,UAAgB;AAEhB,UAAM,EAAE,WAAU,IAAK;AAEvB,SAAK,cACD,gBAAgB,IACV,WAAW,MAAM,IAAI,CAAC,aAAa,eACnC,WAAW,SAAS,CAAC,GAC3B,QAAQ;AAEZ,QAAI,gBAAgB,GAAG;AAEnB,WAAK,cAAc,WAAW,SAAS,CAAC,GAAG,QAAQ;;AAGvD,WAAO;EACX;;;;;;;;EASA,MAAG;;AACC,YAAQ,KAAK,OAAO;MAChB,KAAK,mBAAmB,aAAa;AAEjC,eAAO,KAAK,WAAW,MAClB,KAAK,eAAe,aAAa,aAC9B,KAAK,WAAW,KAAK,aACvB,KAAK,6BAA4B,IACjC;;MAGV,KAAK,mBAAmB,gBAAgB;AACpC,eAAO,KAAK,kBAAkB,GAAG,CAAC;;MAEtC,KAAK,mBAAmB,YAAY;AAChC,eAAO,KAAK,kBAAkB,GAAG,CAAC;;MAEtC,KAAK,mBAAmB,cAAc;AAClC,SAAAA,MAAA,KAAK,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,2CACT,KAAK,QAAQ;AAEjB,eAAO;;MAEX,KAAK,mBAAmB,aAAa;AAEjC,eAAO;;;EAGnB;;AASJ,SAAS,WAAW,YAAuB;AACvC,MAAI,MAAM;AACV,QAAM,UAAU,IAAI,cAChB,YACA,CAAC,QAAS,OAAO,cAAc,GAAG,CAAE;AAGxC,SAAO,SAAS,eACZ,KACA,YAAwB;AAExB,QAAI,YAAY;AAChB,QAAI,SAAS;AAEb,YAAQ,SAAS,IAAI,QAAQ,KAAK,MAAM,MAAM,GAAG;AAC7C,aAAO,IAAI,MAAM,WAAW,MAAM;AAElC,cAAQ,YAAY,UAAU;AAE9B,YAAM,MAAM,QAAQ;QAChB;;QAEA,SAAS;MAAC;AAGd,UAAI,MAAM,GAAG;AACT,oBAAY,SAAS,QAAQ,IAAG;AAChC;;AAGJ,kBAAY,SAAS;AAErB,eAAS,QAAQ,IAAI,YAAY,IAAI;;AAGzC,UAAM,SAAS,MAAM,IAAI,MAAM,SAAS;AAGxC,UAAM;AAEN,WAAO;EACX;AACJ;AAYM,SAAU,gBACZ,YACA,SACA,SACA,MAAY;AAEZ,QAAM,eAAe,UAAU,aAAa,kBAAkB;AAC9D,QAAM,aAAa,UAAU,aAAa;AAG1C,MAAI,gBAAgB,GAAG;AACnB,WAAO,eAAe,KAAK,SAAS,aAAa,UAAU;;AAI/D,MAAI,YAAY;AACZ,UAAM,QAAQ,OAAO;AAErB,WAAO,QAAQ,KAAK,SAAS,cACvB,KACA,WAAW,UAAU,KAAK,IAAI;;AAMxC,MAAI,KAAK;AACT,MAAI,KAAK,KAAK,cAAc;AAE5B,SAAO,MAAM,IAAI;AACb,UAAM,MAAO,KAAK,OAAQ;AAC1B,UAAM,SAAS,WAAW,GAAG;AAE7B,QAAI,SAAS,MAAM;AACf,WAAK,MAAM;eACJ,SAAS,MAAM;AACtB,WAAK,MAAM;WACR;AACH,aAAO,WAAW,MAAM,WAAW;;;AAI3C,SAAO;AACX;AAEA,IAAM,cAAc,WAAW,wBAAc;AAC7C,IAAM,aAAa,WAAW,uBAAa;;;AC5jB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,IAAI;AAAA,CACV,SAAUC,KAAI;AACX,EAAAA,IAAG,MAAM,IAAI;AACb,EAAAA,IAAG,QAAQ,IAAI;AACf,EAAAA,IAAG,KAAK,IAAI;AACZ,EAAAA,IAAG,OAAO,IAAI;AACd,EAAAA,IAAG,KAAK,IAAI;AACZ,EAAAA,IAAG,OAAO,IAAI;AAClB,GAAG,OAAO,KAAK,CAAC,EAAE;AACX,IAAI;AAAA,CACV,SAAUC,QAAO;AACd,EAAAA,OAAM,MAAM,IAAI;AAChB,EAAAA,OAAM,QAAQ,IAAI;AAClB,EAAAA,OAAM,UAAU,IAAI;AACpB,EAAAA,OAAM,QAAQ,IAAI;AAClB,EAAAA,OAAM,MAAM,IAAI;AAChB,EAAAA,OAAM,OAAO,IAAI;AACjB,EAAAA,OAAM,MAAM,IAAI;AAChB,EAAAA,OAAM,MAAM,IAAI;AACpB,GAAG,UAAU,QAAQ,CAAC,EAAE;AAMjB,IAAI;AAAA,CACV,SAAUC,gBAAe;AACtB,EAAAA,eAAc,WAAW,IAAI;AAC7B,EAAAA,eAAc,QAAQ,IAAI;AAC1B,EAAAA,eAAc,gBAAgB,IAAI;AACtC,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACjC,IAAI;AAAA,CACV,SAAUC,YAAW;AAClB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,gBAAgB,IAAI;AAC9B,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,YAAY,IAAI;AAC1B,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,YAAY,IAAI;AAC1B,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,gBAAgB,IAAI;AAC9B,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,YAAY,IAAI;AAC1B,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,WAAW,IAAI;AACzB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,MAAM,IAAI;AACpB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,QAAQ,IAAI;AACtB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,SAAS,IAAI;AACvB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,UAAU,IAAI;AACxB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,OAAO,IAAI;AACrB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,GAAG,IAAI;AACjB,EAAAA,WAAU,IAAI,IAAI;AAClB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,KAAK,IAAI;AACnB,EAAAA,WAAU,KAAK,IAAI;AACvB,GAAG,cAAc,YAAY,CAAC,EAAE;AAMzB,IAAI;AAAA,CACV,SAAUC,SAAQ;AACf,EAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,EAAAA,QAAOA,QAAO,GAAG,IAAI,CAAC,IAAI;AAC1B,EAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,EAAAA,QAAOA,QAAO,gBAAgB,IAAI,CAAC,IAAI;AACvC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,CAAC,IAAI;AAC/B,EAAAA,QAAOA,QAAO,MAAM,IAAI,CAAC,IAAI;AAC7B,EAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,EAAAA,QAAOA,QAAO,OAAO,IAAI,CAAC,IAAI;AAC9B,EAAAA,QAAOA,QAAO,GAAG,IAAI,CAAC,IAAI;AAC1B,EAAAA,QAAOA,QAAO,MAAM,IAAI,CAAC,IAAI;AAC7B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,gBAAgB,IAAI,EAAE,IAAI;AACxC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,WAAW,IAAI,EAAE,IAAI;AACnC,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,EAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,EAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,EAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,EAAAA,QAAOA,QAAO,QAAQ,IAAI,GAAG,IAAI;AACjC,EAAAA,QAAOA,QAAO,QAAQ,IAAI,GAAG,IAAI;AACjC,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,EAAAA,QAAOA,QAAO,SAAS,IAAI,GAAG,IAAI;AAClC,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,UAAU,IAAI,GAAG,IAAI;AACnC,EAAAA,QAAOA,QAAO,UAAU,IAAI,GAAG,IAAI;AACnC,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,EAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,EAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,EAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,EAAAA,QAAOA,QAAO,GAAG,IAAI,GAAG,IAAI;AAC5B,EAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,EAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAClC,GAAG,WAAW,SAAS,CAAC,EAAE;AAC1B,IAAM,iBAAiB,oBAAI,IAAI;AAAA,EAC3B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,EAChD,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,EACxC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,EACxC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,EAChD,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,EACxC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,WAAW,OAAO,SAAS;AAAA,EACtC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,EAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,EAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,EACpC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,EAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,EACtB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,EACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAC9B,CAAC;AACM,SAAS,SAAS,SAAS;AAC9B,MAAIC;AACJ,UAAQA,MAAK,eAAe,IAAI,OAAO,OAAO,QAAQA,QAAO,SAASA,MAAK,OAAO;AACtF;AACA,IAAM,IAAI;AACH,IAAM,mBAAmB;AAAA,EAC5B,CAAC,GAAG,IAAI,GAAG,oBAAI,IAAI;AAAA,IACf,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,IACF,EAAE;AAAA,EACN,CAAC;AAAA,EACD,CAAC,GAAG,MAAM,GAAG,oBAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,CAAC;AAAA,EACxE,CAAC,GAAG,GAAG,GAAG,oBAAI,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAAA,EACrD,CAAC,GAAG,KAAK,GAAG,oBAAI,IAAI;AAAA,EACpB,CAAC,GAAG,GAAG,GAAG,oBAAI,IAAI;AAAA,EAClB,CAAC,GAAG,KAAK,GAAG,oBAAI,IAAI;AACxB;AACO,IAAM,mBAAmB,oBAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;AAC5E,IAAM,iBAAiB,oBAAI,IAAI;AAAA,EAC3B,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AACd,CAAC;AACM,SAAS,iBAAiB,IAAI,kBAAkB;AACnD,SAAO,eAAe,IAAI,EAAE,KAAM,oBAAoB,OAAO,UAAU;AAC3E;;;ACngBA,IAAI;AAAA,CACH,SAAUC,QAAO;AACd,EAAAA,OAAMA,OAAM,MAAM,IAAI,CAAC,IAAI;AAC3B,EAAAA,OAAMA,OAAM,QAAQ,IAAI,CAAC,IAAI;AAC7B,EAAAA,OAAMA,OAAM,SAAS,IAAI,CAAC,IAAI;AAC9B,EAAAA,OAAMA,OAAM,aAAa,IAAI,CAAC,IAAI;AAClC,EAAAA,OAAMA,OAAM,WAAW,IAAI,CAAC,IAAI;AAChC,EAAAA,OAAMA,OAAM,UAAU,IAAI,CAAC,IAAI;AAC/B,EAAAA,OAAMA,OAAM,cAAc,IAAI,CAAC,IAAI;AACnC,EAAAA,OAAMA,OAAM,UAAU,IAAI,CAAC,IAAI;AAC/B,EAAAA,OAAMA,OAAM,uBAAuB,IAAI,CAAC,IAAI;AAC5C,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,CAAC,IAAI;AAC1C,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,EAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,EAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,EAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,EAAAA,OAAMA,OAAM,4BAA4B,IAAI,EAAE,IAAI;AAClD,EAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,EAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,EAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,EAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,EAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,EAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,EAAAA,OAAMA,OAAM,oCAAoC,IAAI,EAAE,IAAI;AAC1D,EAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,EAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,EAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,EAAAA,OAAMA,OAAM,4BAA4B,IAAI,EAAE,IAAI;AAClD,EAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,EAAAA,OAAMA,OAAM,sCAAsC,IAAI,EAAE,IAAI;AAC5D,EAAAA,OAAMA,OAAM,2CAA2C,IAAI,EAAE,IAAI;AACjE,EAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,EAAAA,OAAMA,OAAM,uBAAuB,IAAI,EAAE,IAAI;AAC7C,EAAAA,OAAMA,OAAM,gBAAgB,IAAI,EAAE,IAAI;AACtC,EAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,EAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,EAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,EAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,EAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,EAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,EAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,EAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,EAAAA,OAAMA,OAAM,yBAAyB,IAAI,EAAE,IAAI;AAC/C,EAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,EAAAA,OAAMA,OAAM,oBAAoB,IAAI,EAAE,IAAI;AAC1C,EAAAA,OAAMA,OAAM,SAAS,IAAI,EAAE,IAAI;AAC/B,EAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,EAAAA,OAAMA,OAAM,6BAA6B,IAAI,EAAE,IAAI;AACnD,EAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,EAAAA,OAAMA,OAAM,uCAAuC,IAAI,EAAE,IAAI;AAC7D,EAAAA,OAAMA,OAAM,kBAAkB,IAAI,EAAE,IAAI;AACxC,EAAAA,OAAMA,OAAM,aAAa,IAAI,EAAE,IAAI;AACnC,EAAAA,OAAMA,OAAM,kBAAkB,IAAI,EAAE,IAAI;AACxC,EAAAA,OAAMA,OAAM,SAAS,IAAI,EAAE,IAAI;AAC/B,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,EAAAA,OAAMA,OAAM,cAAc,IAAI,EAAE,IAAI;AACpC,EAAAA,OAAMA,OAAM,oBAAoB,IAAI,EAAE,IAAI;AAC1C,EAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,EAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,EAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,EAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,EAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,EAAAA,OAAMA,OAAM,+CAA+C,IAAI,EAAE,IAAI;AACrE,EAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,EAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,EAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,EAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,EAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,EAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,EAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,EAAAA,OAAMA,OAAM,uBAAuB,IAAI,EAAE,IAAI;AAC7C,EAAAA,OAAMA,OAAM,mBAAmB,IAAI,EAAE,IAAI;AACzC,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,EAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC/C,GAAG,UAAU,QAAQ,CAAC,EAAE;AAEjB,IAAM,gBAAgB;AAAA,EACzB,MAAM,MAAM;AAAA,EACZ,QAAQ,MAAM;AAAA,EACd,SAAS,MAAM;AAAA,EACf,aAAa,MAAM;AAAA,EACnB,WAAW,MAAM;AAAA,EACjB,eAAe,MAAM;AACzB;AAKA,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,WAAW,MAAM,YAAE;AACtC;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,mBAAmB,MAAM,YAAE;AAC9C;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,iBAAiB,MAAM,YAAE;AAC5C;AACA,SAAS,cAAc,IAAI;AACvB,SAAO,aAAa,EAAE,KAAK,aAAa,EAAE;AAC9C;AACA,SAASC,qBAAoB,IAAI;AAC7B,SAAO,cAAc,EAAE,KAAK,aAAa,EAAE;AAC/C;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,KAAK;AAChB;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,OAAO,YAAE,SAAS,OAAO,YAAE,aAAa,OAAO,YAAE,cAAc,OAAO,YAAE;AACnF;AACA,SAAS,oCAAoC,IAAI;AAC7C,SAAO,aAAa,EAAE,KAAK,OAAO,YAAE,WAAW,OAAO,YAAE;AAC5D;AACA,SAAS,qCAAqC,MAAM;AAChD,MAAI,SAAS,YAAE,MAAM;AACjB,WAAO,IAAI;AAAA,EACf,WACS,OAAO,SAAS;AACrB,WAAO,IAAI;AAAA,EACf,WACS,YAAY,IAAI,GAAG;AACxB,WAAO,IAAI;AAAA,EACf,WACS,qBAAqB,IAAI,GAAG;AACjC,WAAO,IAAI;AAAA,EACf,WACS,mBAAmB,IAAI,KAAK,SAAS,YAAE,iBAAiB;AAC7D,WAAO,IAAI;AAAA,EACf;AACA,SAAO;AACX;AAEO,IAAM,YAAN,MAAgB;AAAA,EACnB,YAAY,SAAS,SAAS;AAC1B,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,SAAS;AAEd,SAAK,SAAS;AAOd,SAAK,gBAAgB;AACrB,SAAK,mBAAmB;AACxB,SAAK,SAAS;AACd,SAAK,QAAQ,MAAM;AACnB,SAAK,cAAc,MAAM;AACzB,SAAK,iBAAiB;AACtB,SAAK,wBAAwB;AAC7B,SAAK,wBAAwB;AAC7B,SAAK,eAAe;AACpB,SAAK,cAAc,EAAE,MAAM,IAAI,OAAO,GAAG;AACzC,SAAK,eAAe,IAAI,aAAa,OAAO;AAC5C,SAAK,kBAAkB,KAAK,mBAAmB,EAAE;AACjD,SAAK,gBAAgB,IAAI,cAAc,0BAAgB,CAAC,IAAI,aAAa;AAGrE,WAAK,aAAa,MAAM,KAAK,iBAAiB,WAAW;AACzD,WAAK,4CAA4C,EAAE;AAAA,IACvD,GAAG,QAAQ,eACL;AAAA,MACE,yCAAyC,MAAM;AAC3C,aAAK,KAAK,IAAI,yCAAyC,CAAC;AAAA,MAC5D;AAAA,MACA,4CAA4C,CAAC,aAAa;AACtD,aAAK,KAAK,IAAI,4CAA4C,KAAK,iBAAiB,KAAK,aAAa,MAAM,QAAQ;AAAA,MACpH;AAAA,MACA,mCAAmC,CAAC,SAAS;AACzC,cAAM,QAAQ,qCAAqC,IAAI;AACvD,YAAI;AACA,eAAK,KAAK,OAAO,CAAC;AAAA,MAC1B;AAAA,IACJ,IACE,MAAS;AAAA,EACnB;AAAA;AAAA,EAEA,KAAK,MAAM,WAAW,GAAG;AACrB,QAAIC,KAAI;AACR,KAAC,MAAMA,MAAK,KAAK,SAAS,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,KAAK,aAAa,SAAS,MAAM,QAAQ,CAAC;AAAA,EACvI;AAAA;AAAA,EAEA,mBAAmB,QAAQ;AACvB,QAAI,CAAC,KAAK,QAAQ,wBAAwB;AACtC,aAAO;AAAA,IACX;AACA,WAAO;AAAA,MACH,WAAW,KAAK,aAAa;AAAA,MAC7B,UAAU,KAAK,aAAa,MAAM;AAAA,MAClC,aAAa,KAAK,aAAa,SAAS;AAAA,MACxC,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,WAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,kBAAkB;AACd,QAAI,KAAK;AACL;AACJ,SAAK,SAAS;AACd,WAAO,KAAK,UAAU,CAAC,KAAK,QAAQ;AAChC,WAAK,wBAAwB;AAC7B,YAAM,KAAK,KAAK,SAAS;AACzB,UAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,aAAK,WAAW,EAAE;AAAA,MACtB;AAAA,IACJ;AACA,SAAK,SAAS;AAAA,EAClB;AAAA;AAAA,EAEA,QAAQ;AACJ,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,OAAO,eAAe;AAClB,QAAI,CAAC,KAAK,QAAQ;AACd,YAAM,IAAI,MAAM,4BAA4B;AAAA,IAChD;AACA,SAAK,SAAS;AAEd,QAAI,KAAK;AACL;AACJ,SAAK,gBAAgB;AACrB,QAAI,CAAC,KAAK,QAAQ;AACd,wBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,IAChF;AAAA,EACJ;AAAA,EACA,MAAM,OAAO,aAAa,eAAe;AACrC,SAAK,SAAS;AACd,SAAK,aAAa,MAAM,OAAO,WAAW;AAC1C,SAAK,gBAAgB;AACrB,QAAI,CAAC,KAAK,QAAQ;AACd,wBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,IAChF;AAAA,EACJ;AAAA,EACA,uBAAuB,OAAO;AAC1B,SAAK,SAAS;AACd,SAAK,aAAa,uBAAuB,KAAK;AAC9C,SAAK,gBAAgB;AAAA,EACzB;AAAA;AAAA,EAEA,qBAAqB;AACjB,QAAI,KAAK,aAAa,eAAe;AACjC,WAAK,aAAa,QAAQ,KAAK,qBAAqB;AACpD,WAAK,wBAAwB;AAC7B,WAAK,SAAS;AACd,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,WAAW;AACP,SAAK;AACL,WAAO,KAAK,aAAa,QAAQ;AAAA,EACrC;AAAA,EACA,WAAWC,QAAO;AACd,SAAK,yBAAyBA;AAC9B,aAAS,IAAI,GAAG,IAAIA,QAAO,KAAK;AAC5B,WAAK,aAAa,QAAQ;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,wBAAwB,SAAS,eAAe;AAC5C,QAAI,KAAK,aAAa,WAAW,SAAS,aAAa,GAAG;AAEtD,WAAK,WAAW,QAAQ,SAAS,CAAC;AAClC,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,uBAAuB;AACnB,SAAK,eAAe;AAAA,MAChB,MAAM,UAAU;AAAA,MAChB,SAAS;AAAA,MACT,OAAO,OAAO;AAAA,MACd,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,OAAO,CAAC;AAAA,MACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,qBAAqB;AACjB,SAAK,eAAe;AAAA,MAChB,MAAM,UAAU;AAAA,MAChB,SAAS;AAAA,MACT,OAAO,OAAO;AAAA,MACd,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,OAAO,CAAC;AAAA,MACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,oBAAoB,QAAQ;AACxB,SAAK,eAAe;AAAA,MAChB,MAAM,UAAU;AAAA,MAChB,MAAM;AAAA,MACN,UAAU,KAAK,mBAAmB,MAAM;AAAA,IAC5C;AAAA,EACJ;AAAA,EACA,oBAAoB,aAAa;AAC7B,SAAK,eAAe;AAAA,MAChB,MAAM,UAAU;AAAA,MAChB,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU,KAAK;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,sBAAsB,MAAM,OAAO;AAC/B,SAAK,wBAAwB;AAAA,MACzB;AAAA,MACA;AAAA,MACA,UAAU,KAAK;AAAA,IACnB;AAAA,EACJ;AAAA;AAAA,EAEA,YAAY,iBAAiB;AACzB,SAAK,cAAc;AAAA,MACf,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AACA,SAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAAA,EACpD;AAAA,EACA,iBAAiB;AACb,QAAID;AACJ,QAAI;AACJ,UAAM,QAAQ,KAAK;AACnB,QAAI,aAAa,OAAO,KAAK,YAAY,IAAI,MAAM,MAAM;AACrD,YAAM,MAAM,KAAK,KAAK,WAAW;AACjC,UAAI,MAAM,YAAY,KAAK,iBAAiB;AACxC,cAAM,iBAAkBA,OAAM,KAAK,MAAM,UAAU,WAAW,QAAQA,QAAO,SAASA,MAAM,GAAG,QAAQ,uBAAO,OAAO,IAAI;AACzH,sBAAc,KAAK,YAAY,IAAI,IAAI,KAAK;AAE5C,aAAK,gBAAgB;AAAA,MACzB;AAAA,IACJ,OACK;AACD,WAAK,KAAK,IAAI,kBAAkB;AAAA,IACpC;AAAA,EACJ;AAAA,EACA,kBAAkB;AACd,QAAI,KAAK,iBAAiB;AACtB,WAAK,gBAAgB,UAAU,KAAK,aAAa;AACjD,WAAK,gBAAgB,SAAS,KAAK,aAAa;AAChD,WAAK,gBAAgB,YAAY,KAAK,aAAa;AAAA,IACvD;AAAA,EACJ;AAAA;AAAA,EAEA,aAAa,IAAI;AACb,SAAK,2BAA2B,GAAG,QAAQ;AAC3C,SAAK,eAAe;AACpB,QAAI,GAAG,UAAU;AACb,SAAG,SAAS,UAAU,KAAK,aAAa;AACxC,SAAG,SAAS,SAAS,KAAK,aAAa,MAAM;AAC7C,SAAG,SAAS,YAAY,KAAK,aAAa,SAAS;AAAA,IACvD;AACA,SAAK,kBAAkB,KAAK,mBAAmB,EAAE;AAAA,EACrD;AAAA,EACA,sBAAsB;AAClB,UAAM,KAAK,KAAK;AAChB,SAAK,aAAa,EAAE;AACpB,OAAG,QAAQ,SAAS,GAAG,OAAO;AAC9B,QAAI,GAAG,SAAS,UAAU,WAAW;AACjC,WAAK,mBAAmB,GAAG;AAC3B,WAAK,QAAQ,WAAW,EAAE;AAAA,IAC9B,OACK;AACD,UAAI,GAAG,MAAM,SAAS,GAAG;AACrB,aAAK,KAAK,IAAI,oBAAoB;AAAA,MACtC;AACA,UAAI,GAAG,aAAa;AAChB,aAAK,KAAK,IAAI,yBAAyB;AAAA,MAC3C;AACA,WAAK,QAAQ,SAAS,EAAE;AAAA,IAC5B;AACA,SAAK,aAAa,gBAAgB;AAAA,EACtC;AAAA,EACA,mBAAmB,IAAI;AACnB,SAAK,aAAa,EAAE;AACpB,SAAK,QAAQ,UAAU,EAAE;AACzB,SAAK,aAAa,gBAAgB;AAAA,EACtC;AAAA,EACA,mBAAmB,IAAI;AACnB,SAAK,aAAa,EAAE;AACpB,SAAK,QAAQ,UAAU,EAAE;AACzB,SAAK,aAAa,gBAAgB;AAAA,EACtC;AAAA,EACA,2BAA2B,cAAc;AACrC,QAAI,KAAK,uBAAuB;AAG5B,UAAI,gBAAgB,KAAK,sBAAsB,UAAU;AACrD,aAAK,sBAAsB,SAAS,UAAU,aAAa;AAC3D,aAAK,sBAAsB,SAAS,SAAS,aAAa;AAC1D,aAAK,sBAAsB,SAAS,YAAY,aAAa;AAAA,MACjE;AACA,cAAQ,KAAK,sBAAsB,MAAM;AAAA,QACrC,KAAK,UAAU,WAAW;AACtB,eAAK,QAAQ,YAAY,KAAK,qBAAqB;AACnD;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,gBAAgB;AAC3B,eAAK,QAAQ,gBAAgB,KAAK,qBAAqB;AACvD;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,sBAAsB;AACjC,eAAK,QAAQ,sBAAsB,KAAK,qBAAqB;AAC7D;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,wBAAwB;AAAA,IACjC;AAAA,EACJ;AAAA,EACA,gBAAgB;AACZ,UAAME,YAAW,KAAK,mBAAmB,CAAC;AAC1C,QAAIA,WAAU;AACV,MAAAA,UAAS,UAAUA,UAAS;AAC5B,MAAAA,UAAS,SAASA,UAAS;AAC3B,MAAAA,UAAS,YAAYA,UAAS;AAAA,IAClC;AACA,SAAK,2BAA2BA,SAAQ;AACxC,SAAK,QAAQ,MAAM,EAAE,MAAM,UAAU,KAAK,UAAAA,UAAS,CAAC;AACpD,SAAK,SAAS;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,mCAAmC,MAAM,IAAI;AACzC,QAAI,KAAK,uBAAuB;AAC5B,UAAI,KAAK,sBAAsB,SAAS,MAAM;AAC1C,aAAK,sBAAsB,SAAS;AACpC;AAAA,MACJ,OACK;AACD,aAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAChD,aAAK,2BAA2B,KAAK,eAAe;AACpD,aAAK,aAAa,gBAAgB;AAAA,MACtC;AAAA,IACJ;AACA,SAAK,sBAAsB,MAAM,EAAE;AAAA,EACvC;AAAA,EACA,eAAe,IAAI;AACf,UAAM,OAAO,aAAa,EAAE,IACtB,UAAU,uBACV,OAAO,YAAE,OACL,UAAU,iBACV,UAAU;AACpB,SAAK,mCAAmC,MAAM,OAAO,cAAc,EAAE,CAAC;AAAA,EAC1E;AAAA;AAAA;AAAA,EAGA,WAAW,IAAI;AACX,SAAK,mCAAmC,UAAU,WAAW,EAAE;AAAA,EACnE;AAAA;AAAA,EAEA,2BAA2B;AACvB,SAAK,cAAc,KAAK;AACxB,SAAK,QAAQ,MAAM;AACnB,SAAK,iBAAiB,KAAK,aAAa;AACxC,SAAK,cAAc,YAAY,KAAK,iCAAiC,IAAI,aAAa,YAAY,aAAa,MAAM;AAAA,EACzH;AAAA,EACA,mCAAmC;AAC/B,WAAQ,KAAK,gBAAgB,MAAM,iCAC/B,KAAK,gBAAgB,MAAM,iCAC3B,KAAK,gBAAgB,MAAM;AAAA,EACnC;AAAA,EACA,4CAA4C,IAAI;AAC5C,QAAI,KAAK,iCAAiC,GAAG;AACzC,WAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,IACrD,OACK;AACD,WAAK,eAAe,EAAE;AAAA,IAC1B;AAAA,EACJ;AAAA;AAAA,EAEA,WAAW,IAAI;AACX,YAAQ,KAAK,OAAO;AAAA,MAChB,KAAK,MAAM,MAAM;AACb,aAAK,WAAW,EAAE;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,QAAQ;AACf,aAAK,aAAa,EAAE;AACpB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,SAAS;AAChB,aAAK,cAAc,EAAE;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,aAAa;AACpB,aAAK,iBAAiB,EAAE;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,WAAW;AAClB,aAAK,gBAAgB,EAAE;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,UAAU;AACjB,aAAK,cAAc,EAAE;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,cAAc;AACrB,aAAK,iBAAiB,EAAE;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,UAAU;AACjB,aAAK,cAAc,EAAE;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,uBAAuB;AAC9B,aAAK,yBAAyB,EAAE;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,uBAAuB,EAAE;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,uBAAuB,EAAE;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,wBAAwB;AAC/B,aAAK,0BAA0B,EAAE;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,sBAAsB;AAC7B,aAAK,wBAAwB,EAAE;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,sBAAsB;AAC7B,aAAK,wBAAwB,EAAE;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,4BAA4B;AACnC,aAAK,6BAA6B,EAAE;AACpC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,0BAA0B;AACjC,aAAK,2BAA2B,EAAE;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,0BAA0B;AACjC,aAAK,2BAA2B,EAAE;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,0BAA0B;AACjC,aAAK,4BAA4B,EAAE;AACnC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+BAA+B;AACtC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,wBAAwB,EAAE;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,0BAA0B;AACjC,aAAK,4BAA4B,EAAE;AACnC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+BAA+B;AACtC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,oCAAoC;AAC3C,aAAK,oCAAoC,EAAE;AAC3C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kCAAkC;AACzC,aAAK,kCAAkC,EAAE;AACzC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kCAAkC;AACzC,aAAK,kCAAkC,EAAE;AACzC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,iCAAiC;AACxC,aAAK,kCAAkC,EAAE;AACzC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,4BAA4B;AACnC,aAAK,8BAA8B,EAAE;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,iCAAiC;AACxC,aAAK,kCAAkC,EAAE;AACzC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,sCAAsC;AAC7C,aAAK,sCAAsC,EAAE;AAC7C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,2CAA2C;AAClD,aAAK,0CAA0C,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+BAA+B;AACtC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,uBAAuB;AAC9B,aAAK,0BAA0B,EAAE;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,gBAAgB;AACvB,aAAK,oBAAoB,EAAE;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,sBAAsB;AAC7B,aAAK,yBAAyB,EAAE;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,wBAAwB;AAC/B,aAAK,2BAA2B,EAAE;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+BAA+B;AACtC,aAAK,iCAAiC,EAAE;AACxC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+BAA+B;AACtC,aAAK,iCAAiC,EAAE;AACxC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,0BAA0B;AACjC,aAAK,6BAA6B,EAAE;AACpC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,8BAA8B;AACrC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,wBAAwB;AAC/B,aAAK,0BAA0B,EAAE;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,eAAe;AACtB,aAAK,mBAAmB,EAAE;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,yBAAyB;AAChC,aAAK,4BAA4B,EAAE;AACnC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,eAAe;AACtB,aAAK,mBAAmB,EAAE;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,oBAAoB;AAC3B,aAAK,uBAAuB,EAAE;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,SAAS;AAChB,aAAK,cAAc,EAAE;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,wBAAwB;AAC/B,aAAK,0BAA0B,EAAE;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,6BAA6B;AACpC,aAAK,8BAA8B,EAAE;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kCAAkC;AACzC,aAAK,kCAAkC,EAAE;AACzC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,uCAAuC;AAC9C,aAAK,sCAAsC,EAAE;AAC7C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kBAAkB;AACzB,aAAK,qBAAqB,EAAE;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,aAAa;AACpB,aAAK,iBAAiB,EAAE;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kBAAkB;AACzB,aAAK,qBAAqB,EAAE;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,SAAS;AAChB,aAAK,cAAc,EAAE;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,wBAAwB,EAAE;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,cAAc;AACrB,aAAK,kBAAkB,EAAE;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,oBAAoB;AAC3B,aAAK,uBAAuB,EAAE;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,8BAA8B;AACrC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kCAAkC;AACzC,aAAK,oCAAoC,EAAE;AAC3C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,yCAAyC;AAChD,aAAK,0CAA0C,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,yCAAyC;AAChD,aAAK,0CAA0C,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,iCAAiC;AACxC,aAAK,mCAAmC,EAAE;AAC1C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,+CAA+C;AACtD,aAAK,+CAA+C,EAAE;AACtD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,8BAA8B;AACrC,aAAK,gCAAgC,EAAE;AACvC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,kCAAkC;AACzC,aAAK,oCAAoC,EAAE;AAC3C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,yCAAyC;AAChD,aAAK,0CAA0C,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,yCAAyC;AAChD,aAAK,0CAA0C,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,iCAAiC;AACxC,aAAK,mCAAmC,EAAE;AAC1C;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,eAAe;AACtB,aAAK,mBAAmB,EAAE;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,eAAe;AACtB,aAAK,mBAAmB,EAAE;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,uBAAuB;AAC9B,aAAK,0BAA0B,EAAE;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,mBAAmB;AAC1B,aAAK,sBAAsB,EAAE;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,MAAM,qBAAqB;AAC5B,aAAK,yBAAyB,EAAE;AAChC;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,IAAI,MAAM,eAAe;AAAA,MACnC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW,IAAI;AACX,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,WAAW;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,eAAe,EAAE;AACtB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,aAAa,IAAI;AACb,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,WAAW;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,cAAc,IAAI;AACd,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,iBAAiB,IAAI;AACjB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gBAAgB,IAAI;AAChB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,cAAc,IAAI;AACd,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,qBAAqB;AAC1B,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAEI,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,kBAAkB;AACrB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,SAAS;AACZ,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,eAAe;AAClB,eAAK,KAAK,IAAI,sCAAsC;AACpD,eAAK,oBAAoB,CAAC;AAC1B,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,gBAAgB;AAC9B,eAAK,WAAW,GAAG;AACnB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,EAAE;AAAA,QACtB;AAAA,MACJ;AAAA,EACR;AAAA;AAAA;AAAA,EAGA,iBAAiB,IAAI;AACjB,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,mBAAmB;AACxB,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAEI,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,iBAAiB;AAC/B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,gBAAgB;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,oBAAoB,CAAC;AAC1B,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,EACR;AAAA;AAAA;AAAA,EAGA,cAAc,IAAI;AACd,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,SAAS;AACZ,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,WAAW;AACjB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,WAAW,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,MAClF;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,yBAAyB,IAAI;AACzB,QAAI,OAAO,YAAE,SAAS;AAClB,WAAK,QAAQ,MAAM;AAAA,IACvB,OACK;AACD,WAAK,WAAW,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,aAAa,EAAE;AAAA,IACxB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,uBAAuB,IAAI;AACvB,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,uBAAuB,EAAE;AAAA,IAClC,OACK;AACD,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,aAAa,EAAE;AAAA,IACxB;AAAA,EACJ;AAAA,EACA,oBAAoB,KAAK;AACrB,QAAI,CAAC,KAAK,aAAa,WAAW,KAAK,kBAAkB,KAAK,GAAG;AAC7D,aAAO,CAAC,KAAK,mBAAmB;AAAA,IACpC;AACA,SAAK,mBAAmB;AACxB,UAAM,QAAQ,KAAK;AACnB,UAAM,UAAU,KAAK;AACrB,UAAM,KAAK,KAAK,aAAa,KAAK,KAAK,iBAAiB,MAAM;AAC9D,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,aAAK,QAAQ,MAAM;AACnB,eAAO;AAAA,MACX;AAAA,MACA,KAAK,YAAE,SAAS;AACZ,aAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,aAAK,QAAQ,MAAM;AACnB,eAAO;AAAA,MACX;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,aAAK,oBAAoB;AACzB,aAAK,QAAQ,MAAM;AACnB,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,eAAO,CAAC,KAAK,mBAAmB;AAAA,MACpC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,uBAAuB,IAAI;AACvB,QAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,aAAa,EAAE;AAAA,IACxB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0BAA0B,IAAI;AAC1B,QAAI,OAAO,YAAE,SAAS;AAClB,WAAK,QAAQ,MAAM;AAAA,IACvB,OACK;AACD,WAAK,WAAW,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,wBAAwB,IAAI;AACxB,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,wBAAwB,EAAE;AAAA,IACnC,OACK;AACD,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,wBAAwB,IAAI;AACxB,QAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,6BAA6B,IAAI;AAC7B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,SAAS;AACZ,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,kBAAkB;AACrB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,IAAI;AACpB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,2BAA2B,IAAI;AAC3B,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,2BAA2B,EAAE;AAAA,IACtC,OACK;AACD,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,iBAAiB,EAAE;AAAA,IAC5B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,2BAA2B,IAAI;AAC3B,QAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,iBAAiB,EAAE;AAAA,IAC5B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,4BAA4B,IAAI;AAC5B,QAAI,OAAO,YAAE,cAAc;AACvB,WAAK,QAAQ,MAAM;AACnB,WAAK,WAAW,GAAG;AAAA,IACvB,OACK;AACD,WAAK,QAAQ,MAAM;AACnB,WAAK,iBAAiB,EAAE;AAAA,IAC5B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,QAAI,OAAO,YAAE,cAAc;AACvB,WAAK,QAAQ,MAAM;AACnB,WAAK,WAAW,GAAG;AAAA,IACvB,OACK;AACD,WAAK,QAAQ,MAAM;AACnB,WAAK,iBAAiB,EAAE;AAAA,IAC5B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,wBAAwB,IAAI;AACxB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,4BAA4B,IAAI;AAC5B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oCAAoC,IAAI;AACpC,QAAI,OAAO,YAAE,SAAS;AAClB,WAAK,QAAQ,MAAM;AAAA,IACvB,WACS,cAAc,EAAE,GAAG;AACxB,WAAK,WAAW,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,kCAAkC,EAAE;AAAA,IAC7C,OACK;AACD,WAAK,WAAW,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,wBAAwB,EAAE;AAAA,IACnC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kCAAkC,IAAI;AAClC,QAAI,cAAc,EAAE,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,kCAAkC,EAAE;AAAA,IAC7C,OACK;AACD,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,wBAAwB,EAAE;AAAA,IACnC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kCAAkC,IAAI;AAClC,QAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,WAAK,WAAW,IAAI;AACpB,WAAK,QAAQ,MAAM;AACnB,WAAK,wBAAwB,EAAE;AAAA,IACnC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kCAAkC,IAAI;AAClC,QAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,WAAK,eAAe,EAAE;AACtB,eAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,aAAK,eAAe,KAAK,SAAS,CAAC;AAAA,MACvC;AACA,WAAK,QAAQ,MAAM;AAAA,IACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,WAAK,QAAQ,MAAM;AACnB,WAAK,wBAAwB,EAAE;AAAA,IACnC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,8BAA8B,IAAI;AAC9B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kCAAkC,IAAI;AAClC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,sCAAsC,IAAI;AACtC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,qBAAqB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,8BAA8B;AAC5C,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0CAA0C,IAAI;AAC1C,QAAI,OAAO,YAAE,SAAS;AAClB,WAAK,QAAQ,MAAM;AACnB,WAAK,WAAW,GAAG;AAAA,IACvB,OACK;AACD,WAAK,QAAQ,MAAM;AACnB,WAAK,8BAA8B,EAAE;AAAA,IACzC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,QAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,WAAK,eAAe,EAAE;AACtB,eAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,aAAK,eAAe,KAAK,SAAS,CAAC;AAAA,MACvC;AACA,WAAK,QAAQ,MAAM;AAAA,IACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,WAAK,QAAQ,MAAM;AACnB,WAAK,8BAA8B,EAAE;AAAA,IACzC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0BAA0B,IAAI;AAC1B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,KAAK;AACR,aAAK,QAAQ,MAAM;AACnB,aAAK,yBAAyB,EAAE;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,aAAa;AAChB,aAAK,KAAK,IAAI,uCAAuC;AACrD,aAAK,YAAY,GAAG;AACpB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,EAAE;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB,EAAE;AAAA,MAC/B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oBAAoB,IAAI;AACpB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,KAAK;AACR,aAAK,eAAe;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,yBAAyB,EAAE;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,aAAa;AAChB,aAAK,eAAe;AACpB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,gBAAgB;AACnB,aAAK,KAAK,IAAI,kCAAkC;AAChD,aAAK,YAAY,QAAQ,OAAO,cAAc,EAAE;AAChD;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,YAAY,QAAQ;AACzB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,MAC1F;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,yBAAyB,IAAI;AACzB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,SAAS;AACZ,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,aAAa;AAChB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,EAAE;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB,EAAE;AAAA,MAC/B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,2BAA2B,IAAI;AAC3B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,qBAAqB;AACnC,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,6BAA6B,EAAE;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,iCAAiC,IAAI;AACjC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,WAAW;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,YAAY,SAAS;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,MACrD;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,iCAAiC,IAAI;AACjC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,YAAY;AACf,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,WAAW;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,YAAY,SAAS;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,MACrD;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,6BAA6B,IAAI;AAC7B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,WAAW;AACd,aAAK,yBAAyB;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,aAAK,YAAY,SAAS;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,cAAc;AACjB,aAAK,KAAK,IAAI,2CAA2C;AACzD,aAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AACjD;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,MACrD;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,SAAS;AACZ,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,kCAAkC;AAChD,aAAK,QAAQ,MAAM;AACnB,aAAK,0BAA0B,EAAE;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0BAA0B,IAAI;AAC1B,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,mBAAmB;AACtB,cAAM,QAAQ,KAAK;AACnB,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,oBAAoB;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,QAAQ;AACtB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,sBAAsB;AACpC,aAAK,QAAQ,MAAM;AACnB,aAAK,0BAA0B,EAAE;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mBAAmB,IAAI;AACnB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,QAAQ;AACd;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,MACzC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,4BAA4B,IAAI;AAC5B,QAAI,KAAK,wBAAwB,UAAG,WAAW,IAAI,GAAG;AAClD,WAAK,oBAAoB,UAAG,UAAU,SAAS,CAAC;AAChD,WAAK,QAAQ,MAAM;AAAA,IACvB,WACS,KAAK,wBAAwB,UAAG,SAAS,KAAK,GAAG;AAEtD,WAAK,kBAAkB,KAAK,mBAAmB,UAAG,QAAQ,SAAS,CAAC;AACpE,WAAK,QAAQ,MAAM;AAAA,IACvB,WACS,KAAK,wBAAwB,UAAG,aAAa,IAAI,GAAG;AACzD,UAAI,KAAK,eAAe;AACpB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,KAAK,IAAI,kBAAkB;AAChC,aAAK,oBAAoB,UAAG,YAAY,SAAS,CAAC;AAClD,aAAK,aAAa,OAAO;AACzB,aAAK,QAAQ,MAAM;AAAA,MACvB;AAAA,IACJ,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,WAAK,KAAK,IAAI,wBAAwB;AACtC,WAAK,oBAAoB,CAAC;AAC1B,WAAK,QAAQ,MAAM;AACnB,WAAK,mBAAmB,EAAE;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mBAAmB,IAAI;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,2BAA2B;AACzC,aAAK,QAAQ,MAAM;AACnB,cAAM,QAAQ,KAAK;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,uBAAuB,IAAI;AACvB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,2BAA2B;AACzC,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,cAAc,IAAI;AACd,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,QAAQ;AACd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,MACzC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0BAA0B,IAAI;AAC1B,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,kBAAkB;AACrB,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,cAAM,QAAQ;AACd;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,8BAA8B,IAAI;AAC9B,QAAI,OAAO,YAAE,cAAc;AACvB,WAAK,QAAQ,MAAM;AAAA,IACvB,OACK;AACD,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,EAAE;AAAA,IACzB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kCAAkC,IAAI;AAClC,QAAI,OAAO,YAAE,cAAc;AACvB,WAAK,QAAQ,MAAM;AAAA,IACvB,OACK;AACD,WAAK,QAAQ,MAAM;AACnB,WAAK,qBAAqB,EAAE;AAAA,IAChC;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,sCAAsC,IAAI;AACtC,QAAI,OAAO,YAAE,qBAAqB,OAAO,YAAE,KAAK;AAC5C,WAAK,KAAK,IAAI,aAAa;AAAA,IAC/B;AACA,SAAK,QAAQ,MAAM;AACnB,SAAK,iBAAiB,EAAE;AAAA,EAC5B;AAAA;AAAA;AAAA,EAGA,qBAAqB,IAAI;AACrB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,iBAAiB,IAAI;AACjB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,kBAAkB;AACrB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,cAAc;AACjB,cAAM,QAAQ;AACd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,qBAAqB,IAAI;AACrB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,cAAc;AACjB,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,wBAAwB;AACtC,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ;AACd,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,cAAc,IAAI;AACd,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,aAAK,oBAAoB,IAAI;AAC7B,cAAM,QAAQ,KAAK;AACnB,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,kCAAkC;AAChD,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,wBAAwB,IAAI;AACxB,QAAI,aAAa,EAAE,GAAG;AAClB,WAAK,oBAAoB,OAAO,aAAa,aAAa,EAAE,CAAC,CAAC;AAC9D,WAAK,QAAQ,MAAM;AAAA,IACvB;AAEI,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,oBAAoB,qBAAqB;AAC9C,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,kBAAkB;AAChC,eAAK,oBAAoB,IAAI;AAC7B,gBAAM,QAAQ,KAAK;AACnB,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,oBAAoB,IAAI;AAC7B,gBAAM,QAAQ,KAAK;AACnB,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,oBAAoB,OAAO,cAAc,EAAE,CAAC;AACjD,eAAK,QAAQ,MAAM;AAAA,QACvB;AAAA,MACJ;AAAA,EACR;AAAA;AAAA;AAAA,EAGA,kBAAkB,IAAI;AAClB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,QAAQ;AACd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,MAC/E;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,uBAAuB,IAAI;AACvB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,YAAI,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AAChD,eAAK,QAAQ,MAAM;AAAA,QACvB,WACS,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AACrD,eAAK,QAAQ,MAAM;AAAA,QACvB,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,KAAK,IAAI,wCAAwC;AACtD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,KAAK,IAAI,0CAA0C;AACxD,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,aAAK,KAAK,IAAI,0CAA0C;AACxD,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,8BAA8B;AAC5C,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oCAAoC,IAAI;AACpC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,8BAA8B;AAC5C,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0CAA0C,IAAI;AAC1C,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,YAAY;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,6BAA6B;AAC3C,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,YAAY,OAAO,cAAc,EAAE;AAAA,MAC7C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0CAA0C,IAAI;AAC1C,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,YAAY;AACf,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,YAAY;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,6BAA6B;AAC3C,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,YAAY,OAAO,cAAc,EAAE;AAAA,MAC7C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mCAAmC,IAAI;AACnC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,KAAK,IAAI,yDAAyD;AACvE,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,aAAK,KAAK,IAAI,yDAAyD;AACvE,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,+CAA+C,IAAI;AAC/C,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AACd,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,aAAK,KAAK,IAAI,0CAA0C;AACxD,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,aAAK,KAAK,IAAI,0CAA0C;AACxD,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,8BAA8B;AAC5C,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oCAAoC,IAAI;AACpC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,gBAAgB;AACnB,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,YAAY;AACf,cAAM,WAAW;AACjB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,8BAA8B;AAC5C,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,yCAAyC;AACvD,cAAM,cAAc;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0CAA0C,IAAI;AAC1C,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,gBAAgB;AACnB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,YAAY;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,6BAA6B;AAC3C,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,YAAY,OAAO,cAAc,EAAE;AAAA,MAC7C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0CAA0C,IAAI;AAC1C,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,YAAY;AACf,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC,cAAM,YAAY;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,KAAK,IAAI,6BAA6B;AAC3C,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,cAAM,YAAY,OAAO,cAAc,EAAE;AAAA,MAC7C;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mCAAmC,IAAI;AACnC,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE;AAAA,MACP,KAAK,YAAE,WAAW;AAEd;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,mBAAmB;AACtB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,YAAY;AAC1B,cAAM,cAAc;AACpB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,KAAK,IAAI,+CAA+C;AAC7D,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mBAAmB,IAAI;AACnB,UAAM,QAAQ,KAAK;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,mBAAmB;AACtB,aAAK,mBAAmB,KAAK;AAC7B,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,MAAM;AACT,aAAK,KAAK,IAAI,uBAAuB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,mBAAmB,KAAK;AAC7B,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,mBAAmB,IAAI;AACnB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,sBAAsB;AACzB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,KAAK;AACR,aAAK,KAAK,IAAI,UAAU;AACxB,aAAK,cAAc;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,0BAA0B,IAAI;AAC1B,QAAI,OAAO,YAAE,sBAAsB;AAC/B,WAAK,QAAQ,MAAM;AAAA,IACvB,OACK;AACD,WAAK,WAAW,GAAG;AACnB,WAAK,QAAQ,MAAM;AACnB,WAAK,mBAAmB,EAAE;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,sBAAsB,IAAI;AACtB,YAAQ,IAAI;AAAA,MACR,KAAK,YAAE,mBAAmB;AACtB,aAAK,QAAQ,MAAM;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,YAAE,sBAAsB;AACzB,aAAK,WAAW,GAAG;AACnB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,2BAA2B;AACvB,QAAI,SAAS,KAAK,cAAc,MAAM,KAAK,aAAa,MAAM,KAAK,aAAa,GAAG;AACnF,QAAI,SAAS,GAAG;AACZ,UAAI,KAAK,aAAa,kBAAkB;AACpC,iBAAS,KAAK,cAAc,IAAI;AAAA,MACpC,OACK;AAED,aAAK,SAAS;AAEd,aAAK,aAAa,MAAM,KAAK,aAAa,KAAK,SAAS;AACxD,aAAK,wBAAwB;AAC7B,aAAK,aAAa,gBAAgB;AAClC;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,WAAW,GAAG;AAGd,WAAK,aAAa,MAAM,KAAK;AAC7B,WAAK,4CAA4C,YAAE,SAAS;AAC5D,WAAK,QACD,CAAC,KAAK,iCAAiC,KAAKH,qBAAoB,KAAK,aAAa,KAAK,CAAC,CAAC,IACnF,MAAM,sBACN,KAAK;AAAA,IACnB,OACK;AAED,WAAK,QAAQ,KAAK;AAAA,IACtB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,yBAAyB,IAAI;AACzB,QAAIA,qBAAoB,EAAE,GAAG;AACzB,WAAK,4CAA4C,EAAE;AAAA,IACvD,OACK;AACD,UAAI,OAAO,YAAE,WAAW;AACpB,aAAK,KAAK,IAAI,8BAA8B;AAAA,MAChD;AACA,WAAK,QAAQ,KAAK;AAClB,WAAK,WAAW,EAAE;AAAA,IACtB;AAAA,EACJ;AACJ;;;ACnpFA,IAAM,4BAA4B,oBAAI,IAAI,CAAC,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,UAAU,OAAE,QAAQ,OAAE,GAAG,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,GAAG,CAAC;AAChH,IAAM,uCAAuC,oBAAI,IAAI;AAAA,EACjD,GAAG;AAAA,EACH,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AACN,CAAC;AACD,IAAM,wBAAwB,oBAAI,IAAI;AAAA,EAClC,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AAAA,EACF,OAAE;AACN,CAAC;AACD,IAAM,6BAA6B,oBAAI,IAAI,CAAC,GAAG,uBAAuB,OAAE,IAAI,OAAE,EAAE,CAAC;AACjF,IAAM,+BAA+B,oBAAI,IAAI,CAAC,GAAG,uBAAuB,OAAE,MAAM,CAAC;AACjF,IAAM,0BAA0B,oBAAI,IAAI,CAAC,OAAE,gBAAgB,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,KAAK,CAAC;AAC3F,IAAM,uBAAuB,oBAAI,IAAI,CAAC,OAAE,MAAM,OAAE,gBAAgB,OAAE,KAAK,CAAC;AACxE,IAAM,oBAAoB,oBAAI,IAAI,CAAC,OAAE,IAAI,OAAE,UAAU,OAAE,IAAI,CAAC;AAC5D,IAAM,qBAAqB,oBAAI,IAAI,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI,CAAC;AAClF,IAAM,gBAAgB,oBAAI,IAAI,CAAC,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI,CAAC;AAC3D,IAAM,cAAc,oBAAI,IAAI,CAAC,OAAE,IAAI,OAAE,EAAE,CAAC;AAEjC,IAAM,mBAAN,MAAuB;AAAA,EAC1B,IAAI,2BAA2B;AAC3B,WAAO,KAAK,cAAc,IAAI,KAAK,YAAY,mBAAmB,KAAK,OAAO,IAAI,KAAK;AAAA,EAC3F;AAAA,EACA,YAAYI,WAAU,aAAa,SAAS;AACxC,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,QAAQ,CAAC;AACd,SAAK,SAAS,CAAC;AACf,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,eAAe,OAAE;AACtB,SAAK,UAAUA;AAAA,EACnB;AAAA;AAAA,EAEA,SAASC,UAAS;AACd,WAAO,KAAK,MAAM,YAAYA,UAAS,KAAK,QAAQ;AAAA,EACxD;AAAA;AAAA,EAEA,gBAAgB;AACZ,WAAO,KAAK,iBAAiB,OAAE,YAAY,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG;AAAA,EACrG;AAAA,EACA,wBAAwB;AACpB,SAAK,UAAU,KAAK,MAAM,KAAK,QAAQ;AACvC,SAAK,eAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,EACjD;AAAA;AAAA,EAEA,KAAKA,UAAS,OAAO;AACjB,SAAK;AACL,SAAK,MAAM,KAAK,QAAQ,IAAIA;AAC5B,SAAK,UAAUA;AACf,SAAK,OAAO,KAAK,QAAQ,IAAI;AAC7B,SAAK,eAAe;AACpB,QAAI,KAAK,cAAc,GAAG;AACtB,WAAK;AAAA,IACT;AACA,SAAK,QAAQ,WAAWA,UAAS,OAAO,IAAI;AAAA,EAChD;AAAA,EACA,MAAM;AACF,UAAM,SAAS,KAAK;AACpB,QAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,WAAK;AAAA,IACT;AACA,SAAK;AACL,SAAK,sBAAsB;AAC3B,SAAK,QAAQ,UAAU,QAAQ,IAAI;AAAA,EACvC;AAAA,EACA,QAAQ,YAAY,YAAY;AAC5B,UAAM,MAAM,KAAK,SAAS,UAAU;AACpC,SAAK,MAAM,GAAG,IAAI;AAClB,QAAI,QAAQ,KAAK,UAAU;AACvB,WAAK,UAAU;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,YAAY,kBAAkB,YAAY,cAAc;AACpD,UAAM,eAAe,KAAK,SAAS,gBAAgB,IAAI;AACvD,SAAK,MAAM,OAAO,cAAc,GAAG,UAAU;AAC7C,SAAK,OAAO,OAAO,cAAc,GAAG,YAAY;AAChD,SAAK;AACL,QAAI,iBAAiB,KAAK,UAAU;AAChC,WAAK,sBAAsB;AAAA,IAC/B;AACA,SAAK,QAAQ,WAAW,KAAK,SAAS,KAAK,cAAc,iBAAiB,KAAK,QAAQ;AAAA,EAC3F;AAAA,EACA,sBAAsB,SAAS;AAC3B,QAAI,YAAY,KAAK,WAAW;AAChC,OAAG;AACC,kBAAY,KAAK,OAAO,YAAY,SAAS,YAAY,CAAC;AAAA,IAC9D,SAAS,YAAY,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,SAAS,CAAC,MAAM,GAAG;AACzF,SAAK,gBAAgB,YAAY,IAAI,IAAI,SAAS;AAAA,EACtD;AAAA,EACA,gBAAgB,KAAK;AACjB,WAAO,KAAK,YAAY,KAAK;AACzB,YAAM,SAAS,KAAK;AACpB,UAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,aAAK,aAAa;AAAA,MACtB;AACA,WAAK;AACL,WAAK,sBAAsB;AAC3B,WAAK,QAAQ,UAAU,QAAQ,KAAK,WAAW,GAAG;AAAA,IACtD;AAAA,EACJ;AAAA,EACA,sBAAsBA,UAAS;AAC3B,UAAM,MAAM,KAAK,SAASA,QAAO;AACjC,SAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,EAC1C;AAAA,EACA,eAAe,UAAU,UAAU;AAC/B,UAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,SAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,EAC1C;AAAA,EACA,+BAA+B;AAC3B,SAAK,eAAe,kBAAkB,GAAG,IAAI;AAAA,EACjD;AAAA,EACA,0BAA0B;AACtB,SAAK,eAAe,aAAa,GAAG,IAAI;AAAA,EAC5C;AAAA,EACA,wBAAwB;AAGpB,SAAK,YAAY;AACjB,SAAK,gBAAgB,CAAC;AAAA,EAC1B;AAAA,EACA,iBAAiB,UAAU,WAAW;AAClC,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,UAAI,SAAS,IAAI,KAAK,OAAO,CAAC,CAAC,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAM,WAAW;AAC/F,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,YAAY,UAAU,UAAU;AAC5B,UAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,SAAK,gBAAgB,MAAM,CAAC;AAAA,EAChC;AAAA,EACA,0BAA0B;AACtB,SAAK,YAAY,eAAe,GAAG,IAAI;AAAA,EAC3C;AAAA,EACA,8BAA8B;AAC1B,SAAK,YAAY,oBAAoB,GAAG,IAAI;AAAA,EAChD;AAAA,EACA,6BAA6B;AACzB,SAAK,YAAY,mBAAmB,GAAG,IAAI;AAAA,EAC/C;AAAA,EACA,OAAOA,UAAS;AACZ,UAAM,MAAM,KAAK,SAASA,QAAO;AACjC,QAAI,OAAO,GAAG;AACV,UAAI,QAAQ,KAAK,UAAU;AACvB,aAAK,IAAI;AAAA,MACb,OACK;AACD,aAAK,MAAM,OAAO,KAAK,CAAC;AACxB,aAAK,OAAO,OAAO,KAAK,CAAC;AACzB,aAAK;AACL,aAAK,sBAAsB;AAC3B,aAAK,QAAQ,UAAUA,UAAS,KAAK;AAAA,MACzC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEA,mCAAmC;AAE/B,WAAO,KAAK,YAAY,KAAK,KAAK,OAAO,CAAC,MAAM,OAAE,OAAO,KAAK,MAAM,CAAC,IAAI;AAAA,EAC7E;AAAA,EACA,SAASA,UAAS;AACd,WAAO,KAAK,SAASA,QAAO,IAAI;AAAA,EACpC;AAAA,EACA,kBAAkBA,UAAS;AACvB,UAAM,aAAa,KAAK,SAASA,QAAO,IAAI;AAC5C,WAAO,cAAc,IAAI,KAAK,MAAM,UAAU,IAAI;AAAA,EACtD;AAAA,EACA,2BAA2B;AACvB,WAAO,KAAK,aAAa,KAAK,KAAK,OAAO,CAAC,MAAM,OAAE;AAAA,EACvD;AAAA;AAAA,EAEA,kBAAkB,SAAS,WAAW;AAClC,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,YAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,GAAG;AAAA,QACrD,KAAK,GAAG,MAAM;AACV,cAAI,OAAO;AACP,mBAAO;AACX,cAAI,UAAU,IAAI,EAAE;AAChB,mBAAO;AACX;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,KAAK;AACT,cAAI,qBAAqB,IAAI,EAAE;AAC3B,mBAAO;AACX;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,QAAQ;AACZ,cAAI,wBAAwB,IAAI,EAAE;AAC9B,mBAAO;AACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW,SAAS;AAChB,WAAO,KAAK,kBAAkB,SAAS,qBAAqB;AAAA,EAChE;AAAA,EACA,mBAAmB,SAAS;AACxB,WAAO,KAAK,kBAAkB,SAAS,0BAA0B;AAAA,EACrE;AAAA,EACA,iBAAiB,SAAS;AACtB,WAAO,KAAK,kBAAkB,SAAS,4BAA4B;AAAA,EACvE;AAAA,EACA,2BAA2B;AACvB,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,YAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAQ,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,GAAG;AAAA,QACrD,KAAK,GAAG,MAAM;AACV,cAAI,iBAAiB,IAAI,EAAE;AACvB,mBAAO;AACX,cAAI,sBAAsB,IAAI,EAAE;AAC5B,mBAAO;AACX;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,KAAK;AACT,cAAI,qBAAqB,IAAI,EAAE;AAC3B,mBAAO;AACX;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,QAAQ;AACZ,cAAI,wBAAwB,IAAI,EAAE;AAC9B,mBAAO;AACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB,SAAS;AACrB,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM;AAC7D;AAAA,MACJ;AACA,cAAQ,KAAK,OAAO,CAAC,GAAG;AAAA,QACpB,KAAK,SAAS;AACV,iBAAO;AAAA,QACX;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,MAAM;AACT,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kCAAkC;AAC9B,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM;AAC7D;AAAA,MACJ;AACA,cAAQ,KAAK,OAAO,CAAC,GAAG;AAAA,QACpB,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,OAAO;AACV,iBAAO;AAAA,QACX;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,MAAM;AACT,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,iBAAiB,SAAS;AACtB,aAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,UAAI,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAM,GAAG,MAAM;AAC7D;AAAA,MACJ;AACA,cAAQ,KAAK,OAAO,CAAC,GAAG;AAAA,QACpB,KAAK,SAAS;AACV,iBAAO;AAAA,QACX;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,UAAU;AACb;AAAA,QACJ;AAAA,QACA,SAAS;AACL,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,yBAAyB;AACrB,WAAO,0BAA0B,IAAI,KAAK,YAAY,GAAG;AACrD,WAAK,IAAI;AAAA,IACb;AAAA,EACJ;AAAA,EACA,mCAAmC;AAC/B,WAAO,qCAAqC,IAAI,KAAK,YAAY,GAAG;AAChE,WAAK,IAAI;AAAA,IACb;AAAA,EACJ;AAAA,EACA,oCAAoC,aAAa;AAC7C,WAAO,KAAK,iBAAiB,eAAe,qCAAqC,IAAI,KAAK,YAAY,GAAG;AACrG,WAAK,IAAI;AAAA,IACb;AAAA,EACJ;AACJ;;;AC9TA,IAAM,oBAAoB;AACnB,IAAI;AAAA,CACV,SAAUC,YAAW;AAClB,EAAAA,WAAUA,WAAU,QAAQ,IAAI,CAAC,IAAI;AACrC,EAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AAC1C,GAAG,cAAc,YAAY,CAAC,EAAE;AAChC,IAAM,SAAS,EAAE,MAAM,UAAU,OAAO;AAEjC,IAAM,wBAAN,MAA4B;AAAA,EAC/B,YAAY,aAAa;AACrB,SAAK,cAAc;AACnB,SAAK,UAAU,CAAC;AAChB,SAAK,WAAW;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAIA,+BAA+B,YAAY,SAAS;AAChD,UAAM,aAAa,CAAC;AACpB,UAAM,gBAAgB,QAAQ;AAC9B,UAAM,YAAY,KAAK,YAAY,WAAW,UAAU;AACxD,UAAM,iBAAiB,KAAK,YAAY,gBAAgB,UAAU;AAClE,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,YAAM,QAAQ,KAAK,QAAQ,CAAC;AAC5B,UAAI,MAAM,SAAS,UAAU,QAAQ;AACjC;AAAA,MACJ;AACA,YAAM,EAAE,SAAAC,SAAQ,IAAI;AACpB,UAAI,KAAK,YAAY,WAAWA,QAAO,MAAM,aACzC,KAAK,YAAY,gBAAgBA,QAAO,MAAM,gBAAgB;AAC9D,cAAM,eAAe,KAAK,YAAY,YAAYA,QAAO;AACzD,YAAI,aAAa,WAAW,eAAe;AACvC,qBAAW,KAAK,EAAE,KAAK,GAAG,OAAO,aAAa,CAAC;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,wBAAwB,YAAY;AAChC,QAAI,KAAK,QAAQ,SAAS;AACtB;AACJ,UAAM,UAAU,KAAK,YAAY,YAAY,UAAU;AACvD,UAAM,aAAa,KAAK,+BAA+B,YAAY,OAAO;AAC1E,QAAI,WAAW,SAAS;AACpB;AAEJ,UAAM,aAAa,IAAI,IAAI,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,CAAC;AAC/E,QAAI,kBAAkB;AAEtB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,YAAM,YAAY,WAAW,CAAC;AAE9B,UAAI,UAAU,MAAM,MAAM,CAAC,UAAU,WAAW,IAAI,MAAM,IAAI,MAAM,MAAM,KAAK,GAAG;AAC9E,2BAAmB;AACnB,YAAI,mBAAmB,mBAAmB;AACtC,eAAK,QAAQ,OAAO,UAAU,KAAK,CAAC;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEA,eAAe;AACX,SAAK,QAAQ,QAAQ,MAAM;AAAA,EAC/B;AAAA,EACA,YAAYA,UAAS,OAAO;AACxB,SAAK,wBAAwBA,QAAO;AACpC,SAAK,QAAQ,QAAQ;AAAA,MACjB,MAAM,UAAU;AAAA,MAChB,SAAAA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,2BAA2BA,UAAS,OAAO;AACvC,UAAM,cAAc,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AACtD,SAAK,QAAQ,OAAO,aAAa,GAAG;AAAA,MAChC,MAAM,UAAU;AAAA,MAChB,SAAAA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,YAAY,OAAO;AACf,UAAM,aAAa,KAAK,QAAQ,QAAQ,KAAK;AAC7C,QAAI,cAAc,GAAG;AACjB,WAAK,QAAQ,OAAO,YAAY,CAAC;AAAA,IACrC;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,oBAAoB;AAChB,UAAM,YAAY,KAAK,QAAQ,QAAQ,MAAM;AAC7C,QAAI,aAAa,GAAG;AAChB,WAAK,QAAQ,OAAO,GAAG,YAAY,CAAC;AAAA,IACxC,OACK;AACD,WAAK,QAAQ,SAAS;AAAA,IAC1B;AAAA,EACJ;AAAA;AAAA,EAEA,kCAAkC,SAAS;AACvC,UAAM,QAAQ,KAAK,QAAQ,KAAK,CAACC,WAAUA,OAAM,SAAS,UAAU,UAAU,KAAK,YAAY,WAAWA,OAAM,OAAO,MAAM,OAAO;AACpI,WAAO,SAAS,MAAM,SAAS,UAAU,UAAU,QAAQ;AAAA,EAC/D;AAAA,EACA,gBAAgBD,UAAS;AACrB,WAAO,KAAK,QAAQ,KAAK,CAAC,UAAU,MAAM,SAAS,UAAU,WAAW,MAAM,YAAYA,QAAO;AAAA,EACrG;AACJ;;;AC5GO,IAAM,qBAAqB;AAAA;AAAA,EAE9B,iBAAiB;AACb,WAAO;AAAA,MACH,UAAU;AAAA,MACV,MAAM,cAAc;AAAA,MACpB,YAAY,CAAC;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,yBAAyB;AACrB,WAAO;AAAA,MACH,UAAU;AAAA,MACV,YAAY,CAAC;AAAA,IACjB;AAAA,EACJ;AAAA,EACA,cAAc,SAAS,cAAc,OAAO;AACxC,WAAO;AAAA,MACH,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,CAAC;AAAA,MACb,YAAY;AAAA,IAChB;AAAA,EACJ;AAAA,EACA,kBAAkB,MAAM;AACpB,WAAO;AAAA,MACH,UAAU;AAAA,MACV;AAAA,MACA,YAAY;AAAA,IAChB;AAAA,EACJ;AAAA,EACA,eAAe,OAAO;AAClB,WAAO;AAAA,MACH,UAAU;AAAA,MACV;AAAA,MACA,YAAY;AAAA,IAChB;AAAA,EACJ;AAAA;AAAA,EAEA,YAAY,YAAY,SAAS;AAC7B,eAAW,WAAW,KAAK,OAAO;AAClC,YAAQ,aAAa;AAAA,EACzB;AAAA,EACA,aAAa,YAAY,SAAS,eAAe;AAC7C,UAAM,eAAe,WAAW,WAAW,QAAQ,aAAa;AAChE,eAAW,WAAW,OAAO,cAAc,GAAG,OAAO;AACrD,YAAQ,aAAa;AAAA,EACzB;AAAA,EACA,mBAAmB,iBAAiB,gBAAgB;AAChD,oBAAgB,UAAU;AAAA,EAC9B;AAAA,EACA,mBAAmB,iBAAiB;AAChC,WAAO,gBAAgB;AAAA,EAC3B;AAAA,EACA,gBAAgBE,WAAU,MAAM,UAAU,UAAU;AAChD,UAAM,cAAcA,UAAS,WAAW,KAAK,CAAC,SAAS,KAAK,aAAa,eAAe;AACxF,QAAI,aAAa;AACb,kBAAY,OAAO;AACnB,kBAAY,WAAW;AACvB,kBAAY,WAAW;AAAA,IAC3B,OACK;AACD,YAAM,OAAO;AAAA,QACT,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,MAChB;AACA,yBAAmB,YAAYA,WAAU,IAAI;AAAA,IACjD;AAAA,EACJ;AAAA,EACA,gBAAgBA,WAAU,MAAM;AAC5B,IAAAA,UAAS,OAAO;AAAA,EACpB;AAAA,EACA,gBAAgBA,WAAU;AACtB,WAAOA,UAAS;AAAA,EACpB;AAAA,EACA,WAAW,MAAM;AACb,QAAI,KAAK,YAAY;AACjB,YAAM,MAAM,KAAK,WAAW,WAAW,QAAQ,IAAI;AACnD,WAAK,WAAW,WAAW,OAAO,KAAK,CAAC;AACxC,WAAK,aAAa;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,WAAW,YAAY,MAAM;AACzB,QAAI,WAAW,WAAW,SAAS,GAAG;AAClC,YAAM,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,CAAC;AACvE,UAAI,mBAAmB,WAAW,QAAQ,GAAG;AACzC,iBAAS,SAAS;AAClB;AAAA,MACJ;AAAA,IACJ;AACA,uBAAmB,YAAY,YAAY,mBAAmB,eAAe,IAAI,CAAC;AAAA,EACtF;AAAA,EACA,iBAAiB,YAAY,MAAM,eAAe;AAC9C,UAAM,WAAW,WAAW,WAAW,WAAW,WAAW,QAAQ,aAAa,IAAI,CAAC;AACvF,QAAI,YAAY,mBAAmB,WAAW,QAAQ,GAAG;AACrD,eAAS,SAAS;AAAA,IACtB,OACK;AACD,yBAAmB,aAAa,YAAY,mBAAmB,eAAe,IAAI,GAAG,aAAa;AAAA,IACtG;AAAA,EACJ;AAAA,EACA,gBAAgB,WAAW,OAAO;AAC9B,UAAM,oBAAoB,IAAI,IAAI,UAAU,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AAC1E,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAI,CAAC,kBAAkB,IAAI,MAAM,CAAC,EAAE,IAAI,GAAG;AACvC,kBAAU,MAAM,KAAK,MAAM,CAAC,CAAC;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEA,cAAc,MAAM;AAChB,WAAO,KAAK,WAAW,CAAC;AAAA,EAC5B;AAAA,EACA,cAAc,MAAM;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,cAAc,MAAM;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,YAAYC,UAAS;AACjB,WAAOA,SAAQ;AAAA,EACnB;AAAA;AAAA,EAEA,WAAWA,UAAS;AAChB,WAAOA,SAAQ;AAAA,EACnB;AAAA,EACA,gBAAgBA,UAAS;AACrB,WAAOA,SAAQ;AAAA,EACnB;AAAA,EACA,mBAAmB,UAAU;AACzB,WAAO,SAAS;AAAA,EACpB;AAAA,EACA,sBAAsB,aAAa;AAC/B,WAAO,YAAY;AAAA,EACvB;AAAA,EACA,wBAAwB,aAAa;AACjC,WAAO,YAAY;AAAA,EACvB;AAAA,EACA,4BAA4B,aAAa;AACrC,WAAO,YAAY;AAAA,EACvB;AAAA,EACA,4BAA4B,aAAa;AACrC,WAAO,YAAY;AAAA,EACvB;AAAA;AAAA,EAEA,WAAW,MAAM;AACb,WAAO,KAAK,aAAa;AAAA,EAC7B;AAAA,EACA,cAAc,MAAM;AAChB,WAAO,KAAK,aAAa;AAAA,EAC7B;AAAA,EACA,mBAAmB,MAAM;AACrB,WAAO,KAAK,aAAa;AAAA,EAC7B;AAAA,EACA,cAAc,MAAM;AAChB,WAAO,OAAO,UAAU,eAAe,KAAK,MAAM,SAAS;AAAA,EAC/D;AAAA;AAAA,EAEA,0BAA0B,MAAMC,WAAU;AACtC,SAAK,qBAAqBA;AAAA,EAC9B;AAAA,EACA,0BAA0B,MAAM;AAC5B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,6BAA6B,MAAM,aAAa;AAC5C,SAAK,qBAAqB,EAAE,GAAG,KAAK,oBAAoB,GAAG,YAAY;AAAA,EAC3E;AACJ;;;AC1KA,IAAM,qBAAqB;AAC3B,IAAM,kBAAkB;AACxB,IAAM,wBAAwB;AAC9B,IAAM,iCAAiC;AAAA,EACnhD,GAAG;AAAA,EACH;AAAA,EACA;AACJ;AACA,IAAM,yBAAyB,oBAAI,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACD,IAAM,oCAAoC,CAAC,oCAAoC,sCAAsC;AACrH,IAAM,mDAAmD;AAAA,EACrD,GAAG;AAAA,EACH;AAAA,EACA;AACJ;AAEA,SAAS,UAAU,UAAU,UAAU;AACnC,SAAO,SAAS,KAAK,CAAC,WAAW,SAAS,WAAW,MAAM,CAAC;AAChE;AAEO,SAAS,aAAa,OAAO;AAChC,SAAQ,MAAM,SAAS,sBACnB,MAAM,aAAa,SAClB,MAAM,aAAa,QAAQ,MAAM,aAAa;AACvD;AACO,SAAS,gBAAgB,OAAO;AACnC,MAAI,MAAM,SAAS,oBAAoB;AACnC,WAAO,cAAc;AAAA,EACzB;AACA,QAAM,EAAE,SAAS,IAAI;AACrB,MAAI,YAAY,SAAS,YAAY,MAAM,uBAAuB;AAC9D,WAAO,cAAc;AAAA,EACzB;AACA,MAAI,EAAE,SAAS,IAAI;AACnB,MAAI,aAAa,MAAM;AACnB,eAAW,SAAS,YAAY;AAChC,QAAI,uBAAuB,IAAI,QAAQ,GAAG;AACtC,aAAO,cAAc;AAAA,IACzB;AACA,QAAI,WAAW,aAAa,OAAO,8CAA8C;AACjF,QAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,aAAO,cAAc;AAAA,IACzB;AACA,eACI,aAAa,OAAO,oCAAoC;AAC5D,QAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,aAAO,cAAc;AAAA,IACzB;AAAA,EACJ;AACA,SAAO,cAAc;AACzB;;;ACjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAM,aAAa;AAAA,EACf,WAAW;AAAA,EACX,iBAAiB;AACrB;AAEA,IAAM,sBAAsB;AAC5B,IAAM,+BAA+B;AACrC,IAAM,2BAA2B,IAAI,IAAI;AAAA,EACroBAAI,IAAI;AAAA,EACrC,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,EAC3E,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,EAC3E,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,EACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,EACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,EACrE,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,EACvE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,EACrE,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI,CAAC;AAAA,EAC/D,CAAC,aAAa,EAAE,QAAQ,OAAO,MAAM,SAAS,WAAW,GAAG,IAAI,CAAC;AAAA,EACjE,CAAC,SAAS,EAAE,QAAQ,IAAI,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,EAC5D,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAC3E,CAAC;AAEM,IAAM,+BAA+B,IAAI,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;AAErC,IAAM,wBAAwB,oBAAI,IAAI;AAAA,EACleAAe;AACtC,QAAM,KAAK,cAAc;AACzB,QAAM,kBAAkB,OAAO,OAAE,QAC7B,cAAc,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,MAAM,SAAS,SAAS,MAAM,QAAQ,SAAS,MAAM,IAAI;AAC7G,SAAO,mBAAmB,sBAAsB,IAAI,EAAE;AAC1D;AAEO,SAAS,uBAAuB,OAAO;AAC1C,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,QAAI,MAAM,MAAM,CAAC,EAAE,SAAS,qBAAqB;AAC7C,YAAM,MAAM,CAAC,EAAE,OAAO;AACtB;AAAA,IACJ;AAAA,EACJ;AACJ;AACO,SAAS,oBAAoB,OAAO;AACvC,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,UAAM,mBAAmB,yBAAyB,IAAI,MAAM,MAAM,CAAC,EAAE,IAAI;AACzE,QAAI,oBAAoB,MAAM;AAC1B,YAAM,MAAM,CAAC,EAAE,OAAO;AAAA,IAC1B;AAAA,EACJ;AACJ;AACO,SAAS,oBAAoB,OAAO;AACvC,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,UAAM,oBAAoB,yBAAyB,IAAI,MAAM,MAAM,CAAC,EAAE,IAAI;AAC1E,QAAI,mBAAmB;AACnB,YAAM,MAAM,CAAC,EAAE,SAAS,kBAAkB;AAC1C,YAAM,MAAM,CAAC,EAAE,OAAO,kBAAkB;AACxC,YAAM,MAAM,CAAC,EAAE,YAAY,kBAAkB;AAAA,IACjD;AAAA,EACJ;AACJ;AACO,SAAS,sBAAsB,OAAO;AACzC,QAAM,kBAAkB,6BAA6B,IAAI,MAAM,OAAO;AACtE,MAAI,mBAAmB,MAAM;AACzB,UAAM,UAAU;AAChB,UAAM,QAAQ,SAAS,MAAM,OAAO;AAAA,EACxC;AACJ;AAEA,SAAS,6BAA6B,IAAI,IAAI;AAC1C,SAAO,OAAO,GAAG,WAAW,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE;AACrG;AACA,SAAS,uBAAuB,IAAI,IAAI,OAAO;AAC3C,MAAI,OAAO,GAAG,UAAU,OAAO,OAAE,gBAAgB;AAC7C,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAI,MAAM,CAAC,EAAE,SAAS,MAAM,UAAU;AAClC,cAAM,QAAQ,MAAM,CAAC,EAAE,MAAM,YAAY;AACzC,eAAO,UAAU,WAAW,aAAa,UAAU,WAAW;AAAA,MAClE;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,OAAO,GAAG,QAAQ,OAAO,OAAE,kBAAkB,OAAO,OAAE,QAAQ,OAAO,OAAE;AAClF;AACO,SAAS,mBAAmB,IAAI,IAAI,OAAO,WAAW;AACzD,UAAU,CAAC,aAAa,cAAc,GAAG,SAAS,uBAAuB,IAAI,IAAI,KAAK,MAChF,CAAC,aAAa,cAAc,GAAG,WAAW,6BAA6B,IAAI,EAAE;AACvF;;;ACxNA,IAAM,oBAAoB;AAE1B,IAAM,qBAAqB;AAC3B,IAAM,qBAAqB;AAE3B,IAAI;AAAA,CACH,SAAUC,gBAAe;AACtB,EAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,EAAAA,eAAcA,eAAc,aAAa,IAAI,CAAC,IAAI;AAClD,EAAAA,eAAcA,eAAc,aAAa,IAAI,CAAC,IAAI;AAClD,EAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,EAAAA,eAAcA,eAAc,mBAAmB,IAAI,CAAC,IAAI;AACxD,EAAAA,eAAcA,eAAc,YAAY,IAAI,CAAC,IAAI;AACjD,EAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,EAAAA,eAAcA,eAAc,MAAM,IAAI,CAAC,IAAI;AAC3C,EAAAA,eAAcA,eAAc,UAAU,IAAI,CAAC,IAAI;AAC/C,EAAAA,eAAcA,eAAc,eAAe,IAAI,CAAC,IAAI;AACpD,EAAAA,eAAcA,eAAc,YAAY,IAAI,EAAE,IAAI;AAClD,EAAAA,eAAcA,eAAc,iBAAiB,IAAI,EAAE,IAAI;AACvD,EAAAA,eAAcA,eAAc,eAAe,IAAI,EAAE,IAAI;AACrD,EAAAA,eAAcA,eAAc,QAAQ,IAAI,EAAE,IAAI;AAC9C,EAAAA,eAAcA,eAAc,SAAS,IAAI,EAAE,IAAI;AAC/C,EAAAA,eAAcA,eAAc,WAAW,IAAI,EAAE,IAAI;AACjD,EAAAA,eAAcA,eAAc,oBAAoB,IAAI,EAAE,IAAI;AAC1D,EAAAA,eAAcA,eAAc,aAAa,IAAI,EAAE,IAAI;AACnD,EAAAA,eAAcA,eAAc,YAAY,IAAI,EAAE,IAAI;AAClD,EAAAA,eAAcA,eAAc,aAAa,IAAI,EAAE,IAAI;AACnD,EAAAA,eAAcA,eAAc,gBAAgB,IAAI,EAAE,IAAI;AACtD,EAAAA,eAAcA,eAAc,kBAAkB,IAAI,EAAE,IAAI;AACxD,EAAAA,eAAcA,eAAc,sBAAsB,IAAI,EAAE,IAAI;AAChE,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACxC,IAAM,WAAW;AAAA,EACb,WAAW;AAAA,EACX,UAAU;AAAA,EACV,aAAa;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AACf;AACA,IAAM,uBAAuB,oBAAI,IAAI,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,EAAE,CAAC;AAC/E,IAAM,uBAAuB;AAAA,EACzB,kBAAkB;AAAA,EAClB,wBAAwB;AAAA,EACxB,aAAa;AAAA,EACb,cAAc;AAClB;AAEO,IAAM,SAAN,MAAa;AAAA,EAChB,YAAY,SAASC,WAErB,kBAAkB,MAElB,gBAAgB,MAAM;AAClB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,SAAK,UAAU;AAEf,SAAK,gBAAgB,cAAc;AAEnC,SAAK,wBAAwB,cAAc;AAE3C,SAAK,cAAc;AAEnB,SAAK,cAAc;AAEnB,SAAK,mBAAmB;AAOxB,SAAK,yBAAyB,CAAC;AAE/B,SAAK,yBAAyB,CAAC;AAE/B,SAAK,wCAAwC;AAE7C,SAAK,aAAa;AAElB,SAAK,kBAAkB;AAEvB,SAAK,yBAAyB;AAC9B,SAAK,UAAU;AAAA,MACX,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AACA,SAAK,cAAc,KAAK,QAAQ;AAChC,SAAK,eAAe,KAAK,QAAQ;AAEjC,QAAI,KAAK,cAAc;AACnB,WAAK,QAAQ,yBAAyB;AAAA,IAC1C;AACA,SAAK,WAAWA,cAAa,QAAQA,cAAa,SAASA,YAAW,KAAK,YAAY,eAAe;AACtG,SAAK,YAAY,IAAI,UAAU,KAAK,SAAS,IAAI;AACjD,SAAK,2BAA2B,IAAI,sBAAsB,KAAK,WAAW;AAC1E,SAAK,oBAAoB,kBAAkB,SAAS,KAAK,YAAY,WAAW,eAAe,CAAC,IAAI,OAAE;AACtG,SAAK,iBAAiB,oBAAoB,QAAQ,oBAAoB,SAAS,kBAAkB,KAAK,UAAU,KAAK,iBAAiB;AACtI,SAAK,eAAe,IAAI,iBAAiB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,EAClF;AAAA;AAAA,EAEA,OAAO,MAAMC,OAAM,SAAS;AACxB,UAAMC,UAAS,IAAI,KAAK,OAAO;AAC/B,IAAAA,QAAO,UAAU,MAAMD,OAAM,IAAI;AACjC,WAAOC,QAAO;AAAA,EAClB;AAAA,EACA,OAAO,kBAAkB,iBAAiB,SAAS;AAC/C,UAAM,OAAO;AAAA,MACT,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AAGA,wBAAoB,QAAQ,oBAAoB,SAAS,kBAAmB,kBAAkB,KAAK,YAAY,cAAc,UAAG,UAAU,GAAG,MAAM,CAAC,CAAC;AAIrJ,UAAM,eAAe,KAAK,YAAY,cAAc,gBAAgB,GAAG,MAAM,CAAC,CAAC;AAC/E,UAAMA,UAAS,IAAI,KAAK,MAAM,cAAc,eAAe;AAC3D,QAAIA,QAAO,sBAAsB,OAAE,UAAU;AACzC,MAAAA,QAAO,uBAAuB,QAAQ,cAAc,WAAW;AAAA,IACnE;AACA,IAAAA,QAAO,iCAAiC;AACxC,IAAAA,QAAO,uBAAuB;AAC9B,IAAAA,QAAO,oBAAoB;AAC3B,IAAAA,QAAO,2BAA2B;AAClC,WAAOA;AAAA,EACX;AAAA,EACA,cAAc;AACV,UAAM,cAAc,KAAK,YAAY,cAAc,KAAK,QAAQ;AAChE,UAAM,WAAW,KAAK,YAAY,uBAAuB;AACzD,SAAK,YAAY,aAAa,QAAQ;AACtC,WAAO;AAAA,EACX;AAAA;AAAA;AAAA,EAGA,KAAK,OAAO,MAAM,aAAa;AAC3B,QAAIC;AACJ,QAAI,CAAC,KAAK;AACN;AACJ,UAAM,OAAOA,MAAK,MAAM,cAAc,QAAQA,QAAO,SAASA,MAAK;AACnE,UAAM,MAAM;AAAA,MACR;AAAA,MACA,WAAW,IAAI;AAAA,MACf,UAAU,IAAI;AAAA,MACd,aAAa,IAAI;AAAA,MACjB,SAAS,cAAc,IAAI,YAAY,IAAI;AAAA,MAC3C,QAAQ,cAAc,IAAI,WAAW,IAAI;AAAA,MACzC,WAAW,cAAc,IAAI,cAAc,IAAI;AAAA,IACnD;AACA,SAAK,aAAa,GAAG;AAAA,EACzB;AAAA;AAAA;AAAA,EAGA,WAAW,MAAM,KAAK,OAAO;AACzB,QAAIA,KAAI;AACR,KAAC,MAAMA,MAAK,KAAK,aAAa,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,IAAI;AAC/F,QAAI,SAAS,KAAK,aAAa,WAAW;AACtC,WAAK,iBAAiB,MAAM,GAAG;AAAA,EACvC;AAAA;AAAA,EAEA,UAAU,MAAM,OAAO;AACnB,QAAIA,KAAI;AACR,QAAI,KAAK,QAAQ,wBAAwB;AACrC,WAAK,gBAAgB,MAAM,KAAK,YAAY;AAAA,IAChD;AACA,KAAC,MAAMA,MAAK,KAAK,aAAa,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,MAAM,KAAK,aAAa,OAAO;AACzH,QAAI,OAAO;AACP,UAAI;AACJ,UAAI;AACJ,UAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,kBAAU,KAAK;AACf,uBAAe,KAAK;AAAA,MACxB,OACK;AACD,SAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,MACtC;AACA,WAAK,iBAAiB,SAAS,YAAY;AAAA,IAC/C;AAAA,EACJ;AAAA,EACA,iBAAiB,SAAS,KAAK;AAC3B,UAAM,SAAS,YAAY,KAAK,YAAY,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG;AAC7F,SAAK,mBAAmB,CAAC;AACzB,SAAK,UAAU,gBAAgB,CAAC,UAAU,CAAC,KAAK,oBAAoB,KAAK,OAAO;AAAA,EACpF;AAAA;AAAA,EAEA,qBAAqB,cAAc,oBAAoB;AACnD,SAAK,eAAe,cAAc,GAAG,IAAI;AACzC,SAAK,UAAU,QAAQ;AACvB,SAAK,wBAAwB,KAAK;AAClC,SAAK,gBAAgB,cAAc;AAAA,EACvC;AAAA,EACA,2BAA2B;AACvB,SAAK,gBAAgB,cAAc;AACnC,SAAK,wBAAwB,cAAc;AAC3C,SAAK,UAAU,QAAQ,cAAc;AAAA,EACzC;AAAA;AAAA;AAAA,EAGA,6BAA6B;AACzB,WAAO,KAAK,aAAa,aAAa,KAAK,KAAK,kBAC1C,KAAK,kBACL,KAAK,aAAa;AAAA,EAC5B;AAAA;AAAA,EAEA,6BAA6B;AACzB,QAAI,OAAO,KAAK;AAChB,WAAO,MAAM;AACT,UAAI,KAAK,YAAY,WAAW,IAAI,MAAM,UAAG,MAAM;AAC/C,aAAK,cAAc;AACnB;AAAA,MACJ;AACA,aAAO,KAAK,YAAY,cAAc,IAAI;AAAA,IAC9C;AAAA,EACJ;AAAA,EACA,mCAAmC;AAC/B,QAAI,CAAC,KAAK,mBAAmB,KAAK,YAAY,gBAAgB,KAAK,eAAe,MAAM,GAAG,MAAM;AAC7F;AAAA,IACJ;AACA,YAAQ,KAAK,mBAAmB;AAAA,MAC5B,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,aAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,aAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,aAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,WAAW;AACd,aAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,iBAAiB,OAAO;AACpB,UAAM,OAAO,MAAM,QAAQ;AAC3B,UAAM,WAAW,MAAM,YAAY;AACnC,UAAM,WAAW,MAAM,YAAY;AACnC,SAAK,YAAY,gBAAgB,KAAK,UAAU,MAAM,UAAU,QAAQ;AACxE,QAAI,MAAM,UAAU;AAChB,YAAM,mBAAmB,KAAK,YAAY,cAAc,KAAK,QAAQ;AACrE,YAAM,cAAc,iBAAiB,KAAK,CAAC,SAAS,KAAK,YAAY,mBAAmB,IAAI,CAAC;AAC7F,UAAI,aAAa;AACb,aAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,MAC1E;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEA,qBAAqBC,UAASC,WAAU;AACpC,QAAI,KAAK,QAAQ,wBAAwB;AACrC,YAAM,MAAMA,aAAY;AAAA,QACpB,GAAGA;AAAA,QACH,UAAUA;AAAA,MACd;AACA,WAAK,YAAY,0BAA0BD,UAAS,GAAG;AAAA,IAC3D;AACA,QAAI,KAAK,+BAA+B,GAAG;AACvC,WAAK,qBAAqBA,QAAO;AAAA,IACrC,OACK;AACD,YAAME,UAAS,KAAK,aAAa;AACjC,WAAK,YAAY,YAAYA,SAAQF,QAAO;AAAA,IAChD;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,OAAO,cAAc;AAChC,UAAMA,WAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,SAAK,qBAAqBA,UAAS,MAAM,QAAQ;AAAA,EACrD;AAAA;AAAA,EAEA,eAAe,OAAO,cAAc;AAChC,UAAMA,WAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,SAAK,qBAAqBA,UAAS,MAAM,QAAQ;AACjD,SAAK,aAAa,KAAKA,UAAS,MAAM,KAAK;AAAA,EAC/C;AAAA;AAAA,EAEA,mBAAmB,SAAS,OAAO;AAC/B,UAAMA,WAAU,KAAK,YAAY,cAAc,SAAS,GAAG,MAAM,CAAC,CAAC;AACnE,SAAK,qBAAqBA,UAAS,IAAI;AACvC,SAAK,aAAa,KAAKA,UAAS,KAAK;AAAA,EACzC;AAAA;AAAA,EAEA,gBAAgB,OAAO;AACnB,UAAM,OAAO,KAAK,YAAY,cAAc,MAAM,SAAS,GAAG,MAAM,MAAM,KAAK;AAC/E,UAAM,UAAU,KAAK,YAAY,uBAAuB;AACxD,SAAK,YAAY,mBAAmB,MAAM,OAAO;AACjD,SAAK,qBAAqB,MAAM,MAAM,QAAQ;AAC9C,SAAK,aAAa,KAAK,MAAM,MAAM,KAAK;AACxC,QAAI,KAAK,QAAQ;AACb,WAAK,YAAY,0BAA0B,SAAS,IAAI;AAAA,EAChE;AAAA;AAAA,EAEA,yBAAyB;AACrB,UAAMA,WAAU,KAAK,YAAY,cAAc,UAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AACnE,QAAI,KAAK,QAAQ;AACb,WAAK,YAAY,0BAA0BA,UAAS,IAAI;AAC5D,SAAK,YAAY,YAAY,KAAK,aAAa,SAASA,QAAO;AAC/D,SAAK,aAAa,KAAKA,UAAS,OAAE,IAAI;AAAA,EAC1C;AAAA;AAAA,EAEA,mBAAmB,OAAOE,SAAQ;AAC9B,UAAM,cAAc,KAAK,YAAY,kBAAkB,MAAM,IAAI;AACjE,SAAK,YAAY,YAAYA,SAAQ,WAAW;AAChD,QAAI,KAAK,QAAQ,wBAAwB;AACrC,WAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,IAC1E;AAAA,EACJ;AAAA;AAAA,EAEA,kBAAkB,OAAO;AACrB,QAAIA;AACJ,QAAI;AACJ,QAAI,KAAK,+BAA+B,GAAG;AACvC,OAAC,EAAE,QAAAA,SAAQ,cAAc,IAAI,KAAK,6BAA6B;AAC/D,UAAI,eAAe;AACf,aAAK,YAAY,iBAAiBA,SAAQ,MAAM,OAAO,aAAa;AAAA,MACxE,OACK;AACD,aAAK,YAAY,WAAWA,SAAQ,MAAM,KAAK;AAAA,MACnD;AAAA,IACJ,OACK;AACD,MAAAA,UAAS,KAAK,aAAa;AAC3B,WAAK,YAAY,WAAWA,SAAQ,MAAM,KAAK;AAAA,IACnD;AACA,QAAI,CAAC,MAAM;AACP;AACJ,UAAM,WAAW,KAAK,YAAY,cAAcA,OAAM;AACtD,UAAM,cAAc,gBAAgB,SAAS,YAAY,aAAa,IAAI,SAAS;AACnF,UAAM,WAAW,SAAS,cAAc,CAAC;AAEzC,UAAM,QAAQ,KAAK,YAAY,0BAA0B,QAAQ;AACjE,QAAI,OAAO;AACP,YAAM,EAAE,SAAS,QAAQ,UAAU,IAAI,MAAM;AAC7C,WAAK,YAAY,6BAA6B,UAAU,EAAE,SAAS,QAAQ,UAAU,CAAC;AAAA,IAC1F,WACS,KAAK,QAAQ,wBAAwB;AAC1C,WAAK,YAAY,0BAA0B,UAAU,MAAM,QAAQ;AAAA,IACvE;AAAA,EACJ;AAAA;AAAA,EAEA,YAAY,OAAO,WAAW;AAC1B,aAAS,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG,OAAO,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG;AAC1G,WAAK,YAAY,WAAW,KAAK;AACjC,WAAK,YAAY,YAAY,WAAW,KAAK;AAAA,IACjD;AAAA,EACJ;AAAA;AAAA,EAEA,gBAAgBF,UAAS,cAAc;AACnC,QAAI,KAAK,YAAY,0BAA0BA,QAAO,KAAK,aAAa,UAAU;AAC9E,YAAM,QAAQ,aAAa;AAC3B,YAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAC9C,YAAM;AAAA;AAAA;AAAA,QAGN,aAAa,SAAS,UAAU,WAAW,OAAO,aAAa,UACzD;AAAA,UACE,QAAQ,EAAE,GAAG,MAAM;AAAA,UACnB,SAAS,MAAM;AAAA,UACf,QAAQ,MAAM;AAAA,UACd,WAAW,MAAM;AAAA,QACrB,IACE;AAAA,UACE,SAAS,MAAM;AAAA,UACf,QAAQ,MAAM;AAAA,UACd,WAAW,MAAM;AAAA,QACrB;AAAA;AACJ,WAAK,YAAY,6BAA6BA,UAAS,MAAM;AAAA,IACjE;AAAA,EACJ;AAAA;AAAA,EAEA,2CAA2C,OAAO;AAE9C,QAAI,CAAC,KAAK;AACN,aAAO;AACX,QAAI;AACJ,QAAI;AACJ,QAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,gBAAU,KAAK;AACf,qBAAe,KAAK;AAAA,IACxB,OACK;AACD,OAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,IACtC;AACA,QAAI,MAAM,UAAU,OAAE,OAClB,KAAK,YAAY,WAAW,OAAO,MAAM,UAAG,kBAC5C,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG,QAAQ;AACzD,aAAO;AAAA,IACX;AACA;AAAA;AAAA,MAEA,KAAK,UAAU;AAAA;AAAA,OAGT,MAAM,UAAU,OAAE,UAAU,MAAM,UAAU,OAAE,eAC5C,CAAC,KAAK,oBAAoB,cAAc,SAAS,GAAG,IAAI;AAAA;AAAA,EACpE;AAAA;AAAA,EAEA,cAAc,OAAO;AACjB,YAAQ,MAAM,MAAM;AAAA,MAChB,KAAK,UAAU,WAAW;AACtB,aAAK,YAAY,KAAK;AACtB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,gBAAgB;AAC3B,aAAK,gBAAgB,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,SAAS;AACpB,aAAK,UAAU,KAAK;AACpB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,SAAS;AACpB,aAAK,UAAU,KAAK;AACpB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,WAAW;AACtB,aAAK,iBAAiB,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,SAAS;AACpB,aAAK,SAAS,KAAK;AACnB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,KAAK;AAChB,aAAK,MAAM,KAAK;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,sBAAsB;AACjC,aAAK,sBAAsB,KAAK;AAChC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,oBAAoB,KAAKA,UAAS,WAAW;AACzC,UAAM,KAAK,KAAK,YAAY,gBAAgBA,QAAO;AACnD,UAAM,QAAQ,KAAK,YAAY,YAAYA,QAAO;AAClD,WAAsB,mBAAmB,KAAK,IAAI,OAAO,SAAS;AAAA,EACtE;AAAA;AAAA;AAAA,EAGA,uCAAuC;AACnC,UAAM,aAAa,KAAK,yBAAyB,QAAQ;AACzD,QAAI,YAAY;AACZ,YAAM,WAAW,KAAK,yBAAyB,QAAQ,UAAU,CAAC,UAAU,MAAM,SAAS,UAAU,UAAU,KAAK,aAAa,SAAS,MAAM,OAAO,CAAC;AACxJ,YAAM,YAAY,WAAW,IAAI,aAAa,IAAI,WAAW;AAC7D,eAAS,IAAI,WAAW,KAAK,GAAG,KAAK;AACjC,cAAM,QAAQ,KAAK,yBAAyB,QAAQ,CAAC;AACrD,aAAK,eAAe,MAAM,OAAO,KAAK,YAAY,gBAAgB,MAAM,OAAO,CAAC;AAChF,cAAM,UAAU,KAAK,aAAa;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kBAAkB;AACd,SAAK,aAAa,uBAAuB;AACzC,SAAK,aAAa,wBAAwB;AAC1C,SAAK,yBAAyB,kBAAkB;AAChD,SAAK,gBAAgB,cAAc;AAAA,EACvC;AAAA;AAAA,EAEA,iBAAiB;AACb,SAAK,aAAa,oCAAoC,OAAE,CAAC;AACzD,SAAK,aAAa,sBAAsB,OAAE,CAAC;AAAA,EAC/C;AAAA;AAAA;AAAA,EAGA,sBAAsB;AAClB,aAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAElD,cAAQ,MAAM,KAAK,KAAK,kBAAkB,KAAK,oBAAoB,KAAK,aAAa,OAAO,CAAC,GAAG;AAAA,QAC5F,KAAK,OAAE,IAAI;AACP,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,OAAO;AACV,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,SAAS;AACZ,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,UAAU;AACb,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,OAAO;AACV,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,MAAM;AACT,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,UAAU;AACb,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,QAAQ;AACX,eAAK,6BAA6B,CAAC;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,UAAU;AACb,eAAK,gBAAgB,KAAK,uBAAuB,CAAC;AAClD;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,MAAM;AACT,eAAK,gBAAgB,KAAK,cAAc,cAAc,aAAa,cAAc;AACjF;AAAA,QACJ;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,IAAI;AACP,cAAI,IAAI,GAAG;AACP,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AACA;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,MAAM;AACT,cAAI,IAAI,GAAG;AACP,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,gBAAgB,cAAc;AAAA,EACvC;AAAA;AAAA,EAEA,6BAA6B,WAAW;AACpC,QAAI,YAAY,GAAG;AACf,eAAS,IAAI,YAAY,GAAG,IAAI,GAAG,KAAK;AACpC,cAAM,KAAK,KAAK,aAAa,OAAO,CAAC;AACrC,YAAI,OAAO,OAAE,UAAU;AACnB;AAAA,QACJ,WACS,OAAO,OAAE,OAAO;AACrB,eAAK,gBAAgB,cAAc;AACnC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,gBAAgB,cAAc;AAAA,EACvC;AAAA;AAAA;AAAA,EAGA,gCAAgC,IAAI;AAChC,WAAO,qBAAqB,IAAI,EAAE;AAAA,EACtC;AAAA;AAAA,EAEA,iCAAiC;AAC7B,WAAO,KAAK,0BAA0B,KAAK,gCAAgC,KAAK,aAAa,YAAY;AAAA,EAC7G;AAAA;AAAA,EAEA,+BAA+B;AAC3B,aAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,YAAM,cAAc,KAAK,aAAa,MAAM,CAAC;AAC7C,cAAQ,KAAK,aAAa,OAAO,CAAC,GAAG;AAAA,QACjC,KAAK,OAAE,UAAU;AACb,cAAI,KAAK,YAAY,gBAAgB,WAAW,MAAM,GAAG,MAAM;AAC3D,mBAAO,EAAE,QAAQ,KAAK,YAAY,mBAAmB,WAAW,GAAG,eAAe,KAAK;AAAA,UAC3F;AACA;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,OAAO;AACV,gBAAME,UAAS,KAAK,YAAY,cAAc,WAAW;AACzD,cAAIA,SAAQ;AACR,mBAAO,EAAE,QAAAA,SAAQ,eAAe,YAAY;AAAA,UAChD;AACA,iBAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,IAAI,CAAC,GAAG,eAAe,KAAK;AAAA,QACzE;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,CAAC,GAAG,eAAe,KAAK;AAAA,EACrE;AAAA;AAAA,EAEA,qBAAqBF,UAAS;AAC1B,UAAMC,YAAW,KAAK,6BAA6B;AACnD,QAAIA,UAAS,eAAe;AACxB,WAAK,YAAY,aAAaA,UAAS,QAAQD,UAASC,UAAS,aAAa;AAAA,IAClF,OACK;AACD,WAAK,YAAY,YAAYA,UAAS,QAAQD,QAAO;AAAA,IACzD;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,kBAAkBA,UAAS,IAAI;AAC3B,UAAM,KAAK,KAAK,YAAY,gBAAgBA,QAAO;AACnD,WAAO,iBAAiB,EAAE,EAAE,IAAI,EAAE;AAAA,EACtC;AAAA;AAAA,EAEA,YAAY,OAAO;AACf,SAAK,kBAAkB;AACvB,QAAI,KAAK,UAAU,eAAe;AAC9B,gCAA0B,MAAM,KAAK;AACrC;AAAA,IACJ;AACA,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,oBAAY,MAAM,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,mBAAmB;AAClC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,oBAAoB;AACnC,aAAK,kBAAkB,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,QAAQ;AACvB,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,6BAAqB,MAAM,KAAK;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,iBAAiB;AAChC,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,kBAAkB;AACjC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,gBAAgB,OAAO;AACnB,SAAK,kBAAkB;AACvB,QAAI,KAAK,UAAU,eAAe;AAC9B,oCAA8B,MAAM,KAAK;AACzC;AAAA,IACJ;AACA,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,oBAAY,MAAM,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,mBAAmB;AAClC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,MAAM;AACrB,aAAK,kBAAkB,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,QAAQ;AACvB,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,iBAAiB;AAChC,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,kBAAkB;AACjC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,UAAU,OAAO;AACb,SAAK,kBAAkB;AACvB,QAAI,KAAK,kBAAkB;AACvB,oBAAc,MAAM,KAAK;AACzB;AAAA,IACJ;AACA,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,gBAAgB;AAC/B,sBAAc,MAAM,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uCAA+B,MAAM,KAAK;AAC1C;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,sBAAsB;AACrC,gCAAwB,MAAM,KAAK;AACnC;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,UAAU,OAAO;AACb,SAAK,kBAAkB;AACvB,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,6BAAqB,MAAM,KAAK;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,YAAY;AAC3B,aAAK,KAAK,OAAO,IAAI,gBAAgB;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,WAAW,OAAO;AACd,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,iBAAiB,KAAK;AAC3B,QAAI,MAAM,eAAe,CAAC,MAAM,gBAAgB;AAC5C,WAAK,KAAK,OAAO,IAAI,6CAA6C;AAAA,IACtE;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,iBAAiB,OAAO;AACpB,QAAI,KAAK,2CAA2C,KAAK,GAAG;AACxD,+BAAyB,MAAM,KAAK;AAAA,IACxC,OACK;AACD,WAAK,+BAA+B,KAAK;AAAA,IAC7C;AAAA,EACJ;AAAA;AAAA,EAEA,+BAA+B,OAAO;AAClC,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,mBAAmB;AAClC,+BAAuB,MAAM,KAAK;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,0BAAkB,MAAM,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,UAAU;AACzB,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,0BAAkB,MAAM,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,iBAAiB;AAChC,8BAAsB,MAAM,KAAK;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,QAAQ;AACvB,sBAAc,MAAM,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,WAAW;AAC1B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,oBAAoB;AACnC,gCAAwB,MAAM,KAAK;AACnC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,0BAAkB,MAAM,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,gBAAgB;AAC/B,8BAAsB,MAAM,KAAK;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,kBAAkB;AACjC,+BAAuB,MAAM,KAAK;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,sBAAsB;AACrC,mCAA2B,MAAM,KAAK;AACtC;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,SAAS,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,QAAI,KAAK,kBAAkB;AACvB,6BAAuB,MAAM,KAAK;AAAA,IACtC,OACK;AACD,WAAK,6BAA6B,KAAK;AAAA,IAC3C;AAAA,EACJ;AAAA;AAAA,EAEA,6BAA6B,OAAO;AAChC,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,qBAAa,MAAM,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,mBAAmB;AAClC,6BAAqB,MAAM,KAAK;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,qBAAa,MAAM,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,MAAM;AACrB,qBAAa,MAAM,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,UAAU;AACzB,sBAAc,MAAM,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,iBAAiB;AAChC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,0BAAkB,MAAM,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,QAAQ;AACvB,oBAAY,MAAM,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,qBAAa,MAAM,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,WAAW;AAC1B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,oBAAoB;AACnC,8BAAsB,MAAM,KAAK;AACjC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,gBAAgB;AAC/B,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,kBAAkB;AACjC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,MAAM,OAAO;AACT,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc,SAAS;AACxB,2BAAmB,MAAM,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,wBAAgB,MAAM,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,SAAS;AACxB,oBAAY,MAAM,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,mBAAmB;AAClC,4BAAoB,MAAM,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,YAAY;AAC3B,uBAAe,MAAM,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,oBAAoB;AACnC,kBAAU,MAAM,KAAK;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,MAAM;AACrB,kBAAU,MAAM,KAAK;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,aAAa;AAC5B,sBAAc,MAAM,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,sBAAsB;AACrC,oBAAY,MAAM,KAAK;AACvB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAAA;AAAA,EAEA,sBAAsB,OAAO;AACzB,QAAI,KAAK,iBAAiB;AACtB,WAAK,kBAAkB;AACvB,UAAI,MAAM,MAAM,WAAW,CAAC,MAAc,YAAY,WAAW;AAC7D,YAAI,MAAM,MAAM,WAAW,GAAG;AAC1B;AAAA,QACJ;AACA,cAAM,QAAQ,MAAM,MAAM,OAAO,CAAC;AAAA,MACtC;AAAA,IACJ;AACA,QAAI,KAAK,UAAU,eAAe;AAC9B,WAAK,kBAAkB,KAAK;AAC5B;AAAA,IACJ;AACA,YAAQ,KAAK,eAAe;AAAA,MACxB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,gBAAgB;AAC/B,aAAK,kBAAkB,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,sBAAsB;AACrC,kCAA0B,MAAM,KAAK;AACrC;AAAA,MACJ;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc,QAAQ;AACvB,yBAAiB,MAAM,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,cAAc,eAAe;AAC9B,uCAA+B,MAAM,KAAK;AAC1C;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AACJ;AAKA,SAAS,+BAA+B,GAAG,OAAO;AAC9C,MAAI,yBAAyB,EAAE,yBAAyB,kCAAkC,MAAM,OAAO;AACvG,MAAI,wBAAwB;AACxB,QAAI,CAAC,EAAE,aAAa,SAAS,uBAAuB,OAAO,GAAG;AAC1D,QAAE,yBAAyB,YAAY,sBAAsB;AAC7D,+BAAyB;AAAA,IAC7B,WACS,CAAC,EAAE,aAAa,WAAW,MAAM,KAAK,GAAG;AAC9C,+BAAyB;AAAA,IAC7B;AAAA,EACJ,OACK;AACD,wBAAoB,GAAG,KAAK;AAAA,EAChC;AACA,SAAO;AACX;AAEA,SAAS,sBAAsB,GAAG,wBAAwB;AACtD,MAAI,gBAAgB;AACpB,MAAI,MAAM,EAAE,aAAa;AACzB,SAAO,OAAO,GAAG,OAAO;AACpB,UAAMA,WAAU,EAAE,aAAa,MAAM,GAAG;AACxC,QAAIA,aAAY,uBAAuB,SAAS;AAC5C;AAAA,IACJ;AACA,QAAI,EAAE,kBAAkBA,UAAS,EAAE,aAAa,OAAO,GAAG,CAAC,GAAG;AAC1D,sBAAgBA;AAAA,IACpB;AAAA,EACJ;AACA,MAAI,CAAC,eAAe;AAChB,MAAE,aAAa,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAChD,MAAE,yBAAyB,YAAY,sBAAsB;AAAA,EACjE;AACA,SAAO;AACX;AAEA,SAAS,YAAY,GAAG,eAAe,mBAAmB;AACtD,MAAI,cAAc;AAClB,MAAI,cAAc,EAAE,aAAa,kBAAkB,aAAa;AAChE,WAAS,IAAI,GAAGA,WAAU,aAAaA,aAAY,mBAAmB,KAAKA,WAAU,aAAa;AAE9F,kBAAc,EAAE,aAAa,kBAAkBA,QAAO;AACtD,UAAM,eAAe,EAAE,yBAAyB,gBAAgBA,QAAO;AACvE,UAAM,kBAAkB,gBAAgB,KAAK;AAC7C,UAAM,+BAA+B,CAAC,gBAAgB;AACtD,QAAI,8BAA8B;AAC9B,UAAI,iBAAiB;AACjB,UAAE,yBAAyB,YAAY,YAAY;AAAA,MACvD;AACA,QAAE,aAAa,OAAOA,QAAO;AAAA,IACjC,OACK;AACD,MAAAA,WAAU,2BAA2B,GAAG,YAAY;AACpD,UAAI,gBAAgB,eAAe;AAC/B,UAAE,yBAAyB,WAAW;AAAA,MAC1C;AACA,QAAE,YAAY,WAAW,WAAW;AACpC,QAAE,YAAY,YAAYA,UAAS,WAAW;AAC9C,oBAAcA;AAAA,IAClB;AAAA,EACJ;AACA,SAAO;AACX;AAEA,SAAS,2BAA2B,GAAG,cAAc;AACjD,QAAM,KAAK,EAAE,YAAY,gBAAgB,aAAa,OAAO;AAC7D,QAAM,aAAa,EAAE,YAAY,cAAc,aAAa,MAAM,SAAS,IAAI,aAAa,MAAM,KAAK;AACvG,IAAE,aAAa,QAAQ,aAAa,SAAS,UAAU;AACvD,eAAa,UAAU;AACvB,SAAO;AACX;AAEA,SAAS,iCAAiC,GAAG,gBAAgB,aAAa;AACtE,QAAM,KAAK,EAAE,YAAY,WAAW,cAAc;AAClD,QAAM,MAAM,SAAS,EAAE;AACvB,MAAI,EAAE,gCAAgC,GAAG,GAAG;AACxC,MAAE,qBAAqB,WAAW;AAAA,EACtC,OACK;AACD,UAAM,KAAK,EAAE,YAAY,gBAAgB,cAAc;AACvD,QAAI,QAAQ,OAAE,YAAY,OAAO,GAAG,MAAM;AACtC,uBAAiB,EAAE,YAAY,mBAAmB,cAAc;AAAA,IACpE;AACA,MAAE,YAAY,YAAY,gBAAgB,WAAW;AAAA,EACzD;AACJ;AAEA,SAAS,2BAA2B,GAAG,eAAe,wBAAwB;AAC1E,QAAM,KAAK,EAAE,YAAY,gBAAgB,uBAAuB,OAAO;AACvE,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,aAAa,EAAE,YAAY,cAAc,MAAM,SAAS,IAAI,MAAM,KAAK;AAC7E,IAAE,YAAY,eAAe,UAAU;AACvC,IAAE,YAAY,YAAY,eAAe,UAAU;AACnD,IAAE,yBAAyB,2BAA2B,YAAY,KAAK;AACvE,IAAE,yBAAyB,YAAY,sBAAsB;AAC7D,IAAE,aAAa,OAAO,uBAAuB,OAAO;AACpD,IAAE,aAAa,YAAY,eAAe,YAAY,MAAM,KAAK;AACrE;AAEA,SAAS,mBAAmB,GAAG,OAAO;AAClC,WAAS,IAAI,GAAG,IAAI,oBAAoB,KAAK;AACzC,UAAM,yBAAyB,+BAA+B,GAAG,KAAK;AACtE,QAAI,CAAC,wBAAwB;AACzB;AAAA,IACJ;AACA,UAAM,gBAAgB,sBAAsB,GAAG,sBAAsB;AACrE,QAAI,CAAC,eAAe;AAChB;AAAA,IACJ;AACA,MAAE,yBAAyB,WAAW;AACtC,UAAM,cAAc,YAAY,GAAG,eAAe,uBAAuB,OAAO;AAChF,UAAM,iBAAiB,EAAE,aAAa,kBAAkB,uBAAuB,OAAO;AACtF,MAAE,YAAY,WAAW,WAAW;AACpC,QAAI;AACA,uCAAiC,GAAG,gBAAgB,WAAW;AACnE,+BAA2B,GAAG,eAAe,sBAAsB;AAAA,EACvE;AACJ;AAGA,SAAS,cAAc,GAAG,OAAO;AAC7B,IAAE,mBAAmB,OAAO,EAAE,aAAa,wBAAwB;AACvE;AACA,SAAS,+BAA+B,GAAG,OAAO;AAC9C,IAAE,mBAAmB,OAAO,EAAE,aAAa,MAAM,CAAC,CAAC;AACvD;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,IAAE,mBAAmB,OAAO,EAAE,QAAQ;AAC1C;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,IAAE,UAAU;AAEZ,MAAI,MAAM,UAAU;AAGhB,UAAM,SAAS,EAAE,kBAAkB,IAAI;AACvC,aAAS,IAAI,EAAE,aAAa,UAAU,KAAK,QAAQ,KAAK;AACpD,QAAE,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,KAAK;AAAA,IACpD;AAEA,QAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,YAAY,GAAG;AACpD,YAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,YAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,UAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,UAAE,gBAAgB,aAAa,KAAK;AACpC,YAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,gBAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,gBAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,cAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,cAAE,gBAAgB,aAAa,KAAK;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAGA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,iBAAiB,KAAK;AACxB,QAAM,OAAO,MAAM,cAAc,cAAc,SAAiB,gBAAgB,KAAK;AACrF,MAAI,CAAS,aAAa,KAAK,GAAG;AAC9B,MAAE,KAAK,OAAO,IAAI,oBAAoB;AAAA,EAC1C;AACA,IAAE,YAAY,gBAAgB,EAAE,UAAU,IAAI;AAC9C,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,KAAK,OAAO,IAAI,gBAAgB,IAAI;AACtC,IAAE,YAAY,gBAAgB,EAAE,UAAU,cAAc,MAAM;AAC9D,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC,OACK;AACD,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,uBAAuB;AACzB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,cAAc,EAAE,aAAa;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,oBAAgB,GAAG,KAAK;AAAA,EAC5B,OACK;AACD,MAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,EACtD;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,IAAE,cAAc,EAAE,aAAa;AAC/B,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,QAAE,qBAAqB,OAAO,cAAc,MAAM;AAClD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,QAAQ,kBAAkB;AAC5B,UAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,MACvD,OACK;AACD,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,qBAAqB,OAAO,cAAc,OAAO;AACnD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,QAAE,qBAAqB,OAAO,cAAc,WAAW;AACvD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,gBAAgB,KAAK;AACvB,QAAE,yBAAyB,aAAa;AACxC,QAAE,aAAa;AACf,QAAE,gBAAgB,cAAc;AAChC,QAAE,uBAAuB,QAAQ,cAAc,WAAW;AAC1D;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,IACJ;AAAA,IACA,SAAS;AACL,kBAAY,GAAG,KAAK;AAAA,IACxB;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,QAAE,aAAa,IAAI;AACnB,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AACT,kBAAY,GAAG,KAAK;AACpB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,MAAE,aAAa,iCAAiC;AAChD,QAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,QAAE,KAAK,OAAO,IAAI,qCAAqC;AAAA,IAC3D;AACA,MAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,MAAE,yBAAyB,kBAAkB;AAC7C,MAAE,uBAAuB,MAAM;AAC/B,MAAE,oBAAoB;AAAA,EAC1B,OACK;AACD,MAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,EACtD;AACJ;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,uBAAuB,GAAG,OAAO;AACtC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,KAAK,OAAO,IAAI,oBAAoB;AACtC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,0BAAoB,GAAG,KAAK;AAAA,IAChC;AAAA,EACJ;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,QAAE,aAAa,IAAI;AACnB,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,UAAU,MAAM,SAAS,UAAU,MAAM,IAAI,2BAA2B,IAAI;AAClF,IAAE,KAAK,OAAO,OAAO;AACrB,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,kBAAkB,GAAG,OAAO;AACjC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,aAAa;AACf,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,KAAK,OAAO,IAAI,yBAAyB;AAC3C,QAAE,aAAa,KAAK,EAAE,aAAa,OAAE,IAAI;AACzC,qBAAe,GAAG,KAAK;AACvB,QAAE,aAAa,OAAO,EAAE,WAAW;AACnC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,IACJ;AAAA,IACA,SAAS;AACL,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,IAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,WAAW,GAAG,OAAO;AAC1B,UAAQ,MAAM,MAAM;AAAA,IAChB,KAAK,UAAU,WAAW;AACtB,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,sBAAsB;AACjC,gCAA0B,GAAG,KAAK;AAClC;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,SAAS;AACpB,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,WAAW;AACtB,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,SAAS;AACpB,mBAAa,GAAG,KAAK;AACrB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,KAAK;AAChB,gBAAU,GAAG,KAAK;AAClB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,0BAA0B,GAAG,OAAO;AACzC,IAAE,qCAAqC;AACvC,IAAE,kBAAkB,KAAK;AAC7B;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,qCAAqC;AACvC,IAAE,kBAAkB,KAAK;AACzB,IAAE,aAAa;AACnB;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,EAAE,aAAa,cAAc,GAAG;AAChC,MAAE,YAAY,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,MAAM,KAAK;AAAA,EACtE;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,MAAI,eAAe,EAAE,aAAa,cAAc,GAAG;AAC/C,MAAE,aAAa;AACf,MAAE,YAAY,gBAAgB,aAAa,MAAM,KAAK;AAAA,EAC1D;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,QAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,MAAI,EAAE,cAAc,aAAa;AAC7B,MAAE,YAAY,WAAW,WAAW;AACpC,MAAE,aAAa,sBAAsB;AACrC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACJ;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,6BAA6B,GAAG,OAAO;AAC5C,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,MAAI,iBAAiB,IAAI,EAAE,aAAa,YAAY,GAAG;AACnD,MAAE,aAAa,IAAI;AAAA,EACvB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,IAAE,kBAAkB;AACpB,IAAE,aAAa;AACnB;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,MAAI,CAAC,EAAE,eAAe,YAAY;AAC9B,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAI,CAAC,YAAY;AACb,QAAE,cAAc,EAAE,aAAa;AAAA,IACnC;AAAA,EACJ;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,aAAa;AACf,QAAM,KAAK,MAAM;AACjB,WAAS,IAAI,EAAE,aAAa,UAAU,KAAK,GAAG,KAAK;AAC/C,UAAM,YAAY,EAAE,aAAa,OAAO,CAAC;AACzC,QAAK,OAAO,OAAE,MAAM,cAAc,OAAE,OAC9B,OAAO,OAAE,MAAM,OAAO,OAAE,QAAQ,cAAc,OAAE,MAAM,cAAc,OAAE,KAAM;AAC9E,QAAE,aAAa,oCAAoC,SAAS;AAC5D,QAAE,aAAa,sBAAsB,SAAS;AAC9C;AAAA,IACJ;AACA,QAAI,cAAc,OAAE,WAChB,cAAc,OAAE,OAChB,cAAc,OAAE,KAChB,EAAE,kBAAkB,EAAE,aAAa,MAAM,CAAC,GAAG,SAAS,GAAG;AACzD;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,UAAU,QAAQ,cAAc;AACtC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,WAAW,OAAE,MAAM,GAAG;AACrC,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,OAAE,MAAM;AAAA,EACjD;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACnB;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,QAAM,qBAAqB,EAAE,yBAAyB,kCAAkC,UAAG,CAAC;AAC5F,MAAI,oBAAoB;AACpB,uBAAmB,GAAG,KAAK;AAC3B,MAAE,aAAa,OAAO,mBAAmB,OAAO;AAChD,MAAE,yBAAyB,YAAY,kBAAkB;AAAA,EAC7D;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,uBAAmB,GAAG,KAAK;AAC3B,MAAE,qCAAqC;AAAA,EAC3C;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,aAAa;AACxC,IAAE,aAAa;AACnB;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,EAAE,YAAY,gBAAgB,EAAE,QAAQ,MAAM,cAAc,UAAU,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AAC5G,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,QAAM,iBAAiB;AAC3B;AACA,SAAS,cAAc,OAAO;AAC1B,QAAM,YAAY,aAAa,OAAO,MAAM,IAAI;AAChD,SAAO,aAAa,QAAQ,UAAU,YAAY,MAAM;AAC5D;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAI,CAAC,cAAc,KAAK,GAAG;AACvB,MAAE,aAAa;AAAA,EACnB;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAM,iBAAiB;AAC3B;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,UAAU,UAAG;AACnB,QAAM,QAAQ,OAAE;AAChB,qBAAmB,GAAG,KAAK;AAC/B;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,IAAE,kBAAkB;AACpB,IAAE,UAAU,QAAQ,cAAc;AAClC,IAAE,wBAAwB,EAAE;AAC5B,IAAE,aAAa;AACf,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,qCAAqC;AACvC,IAAE,aAAa;AACf,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,aAAa;AACf,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,IAAE,gBACE,EAAE,kBAAkB,cAAc,YAC9B,EAAE,kBAAkB,cAAc,cAClC,EAAE,kBAAkB,cAAc,iBAClC,EAAE,kBAAkB,cAAc,UAClC,EAAE,kBAAkB,cAAc,UAChC,cAAc,qBACd,cAAc;AAC5B;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,MAAE,aAAa,IAAI;AAAA,EACvB;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,aAAa,uBAAuB;AAAA,EAC1C;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,aAAa,oCAAoC,OAAE,GAAG;AAAA,EAC5D;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,EAAe,uBAAuB,KAAK;AAC3C,EAAe,oBAAoB,KAAK;AACxC,MAAI,MAAM,aAAa;AACnB,MAAE,eAAe,OAAO,GAAG,MAAM;AAAA,EACrC,OACK;AACD,MAAE,eAAe,OAAO,GAAG,MAAM;AAAA,EACrC;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,IAAE,qCAAqC;AACvC,EAAe,oBAAoB,KAAK;AACxC,EAAe,oBAAoB,KAAK;AACxC,MAAI,MAAM,aAAa;AACnB,MAAE,eAAe,OAAO,GAAG,GAAG;AAAA,EAClC,OACK;AACD,MAAE,eAAe,OAAO,GAAG,GAAG;AAAA,EAClC;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,GAAG;AACN,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,mCAA6B,GAAG,KAAK;AACrf,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,KAAK;AACR,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,QAAQ,kBAAkB;AAC5B,8BAAsB,GAAG,KAAK;AAAA,MAClC,OACK;AACD,8BAAsB,GAAG,KAAK;AAAA,MAClC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,WAAW;AACd,8BAAwB,GAAG,KAAK;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AAEb;AAAA,IACJ;AAAA,IACA,SAAS;AACL,4BAAsB,GAAG,KAAK;AAAA,IAClC;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,gBAAgB,cAAc;AAGhC,QAAI,EAAE,QAAQ,wBAAwB;AAClC,YAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,UAAI,aAAa;AACb,UAAE,gBAAgB,aAAa,KAAK;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,gBAAgB,cAAc;AAChC,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,EAAE;AAAA,EAC3C;AACJ;AACA,SAAS,iBAAiB,GAAG;AACzB,QAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,QAAM,EAAE,YAAY,IAAI;AACxB,MAAI,CAAC,YAAY;AACb,MAAE,cAAc;AAAA,EACpB;AACA,OAAK,eAAe,eAAe,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AAClE,MAAE,aAAa,uBAAuB;AACtC,QAAI,YAAY;AACZ,QAAE,aAAa,sBAAsB,OAAE,IAAI;AAAA,IAC/C,WACS,aAAa;AAClB,QAAE,aAAa,OAAO,WAAW;AAAA,IACrC;AAAA,EACJ;AACJ;AACA,SAAS,cAAc,GAAG;AACtB,MAAI,CAAC,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACvC,MAAE,mBAAmB,UAAG,GAAG,OAAE,CAAC;AAAA,EAClC;AACA,IAAE,eAAe;AACrB;AACA,SAAS,eAAe,GAAG;AACvB,MAAI,EAAE,aAAa,mBAAmB,OAAE,EAAE,GAAG;AACzC,MAAE,aAAa,oCAAoC,OAAE,EAAE;AACvD,MAAE,aAAa,sBAAsB,OAAE,EAAE;AAAA,EAC7C;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,oCAAoC,EAAE;AACrD,MAAE,aAAa,sBAAsB,EAAE;AAAA,EAC3C;AACJ;AACA,SAAS,2BAA2B,GAAG;AACnC,MAAI,EAAE,aAAa,yBAAyB,GAAG;AAC3C,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,6BAA6B;AAAA,EAChD;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,EAAE;AACvC,MAAE,yBAAyB,kBAAkB;AAAA,EACjD;AACJ;AACA,SAAS,eAAe,GAAG;AACvB,IAAE,qCAAqC;AACvC,IAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,IAAE,aAAa,IAAI;AACnB,IAAE,aAAa;AACnB;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,KAAK,MAAM;AACjB,QAAM,MAAM,MAAM;AAClB,WAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,UAAMA,WAAU,EAAE,aAAa,MAAM,CAAC;AACtC,UAAM,YAAY,EAAE,aAAa,OAAO,CAAC;AAEzC,QAAI,QAAQ,cAAc,QAAQ,OAAE,WAAW,EAAE,YAAY,WAAWA,QAAO,MAAM,KAAK;AACtF,QAAE,aAAa,oCAAoC,GAAG;AACtD,UAAI,EAAE,aAAa,YAAY;AAC3B,UAAE,aAAa,gBAAgB,CAAC;AACpC;AAAA,IACJ;AACA,QAAI,EAAE,kBAAkBA,UAAS,SAAS,GAAG;AACzC;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,GAAG;AACN,oBAAc,CAAC;AACff,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,qBAAe,CAAC;AAChB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,iCAA2B,CAAC;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,qBAAe,CAAC;AAChB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,CAAC;AAClB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,0BAAoB,GAAG,KAAK;AAAA,IAChC;AAAA,EACJ;AACJ;AACA,SAAS,UAAU,GAAG,OAAO;AACzB,MAAI,EAAE,uBAAuB,SAAS,GAAG;AACrC,kBAAc,GAAG,KAAK;AAAA,EAC1B,OACK;AACD,gBAAY,GAAG,KAAK;AAAA,EACxB;AACJ;AAGA,SAAS,aAAa,GAAG,OAAO;AAC5B,MAAID;AACJ,MAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,KAACA,MAAK,EAAE,mBAAmB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,GAAG,EAAE,aAAa,OAAO;AAAA,EACjG;AACA,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,EAAE;AACxB;AACA,SAAS,UAAU,GAAG,OAAO;AACzB,IAAE,KAAK,OAAO,IAAI,kCAAkC;AACpD,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,EAAE;AACpB,IAAE,MAAM,KAAK;AACjB;AAGA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,qBAAqB,IAAI,EAAE,aAAa,YAAY,GAAG;AACvD,MAAE,uBAAuB,SAAS;AAClC,MAAE,wCAAwC;AAC1C,MAAE,wBAAwB,EAAE;AAC5B,MAAE,gBAAgB,cAAc;AAChC,YAAQ,MAAM,MAAM;AAAA,MAChB,KAAK,UAAU,WAAW;AACtB,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,sBAAsB;AACjC,uCAA+B,GAAG,KAAK;AACvC;AAAA,MACJ;AAAA,IAEJ;AAAA,EACJ,OACK;AACD,iBAAa,GAAG,KAAK;AAAA,EACzB;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,aAAa,wBAAwB;AACvC,IAAE,yBAAyB,aAAa;AACxC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,IAAE,aAAa,wBAAwB;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,aAAa,wBAAwB;AACvC,IAAE,mBAAmB,UAAG,UAAU,OAAE,QAAQ;AAC5C,IAAE,gBAAgB,cAAc;AAChC,wBAAsB,GAAG,KAAK;AAClC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,aAAa,wBAAwB;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,IAAE,aAAa,wBAAwB;AACvC,IAAE,mBAAmB,UAAG,OAAO,OAAE,KAAK;AACtC,IAAE,gBAAgB,cAAc;AAChC,sBAAoB,GAAG,KAAK;AAChC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,MAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,MAAE,oBAAoB;AACtB,MAAE,iBAAiB,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,cAAc,KAAK,GAAG;AACtB,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC,OACK;AACD,iBAAa,GAAG,KAAK;AAAA,EACzB;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,CAAC,EAAE,eAAe,EAAE,aAAa,cAAc,GAAG;AAClD,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,cAAc,EAAE,aAAa;AAC/B,MAAE,aAAa,IAAI;AAAA,EACvB;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,SAAS;AACZ,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,8BAAwB,GAAG,KAAK;AAChC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AACA,SAAS,cAAc,GAAG,OAAO;AAC7B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,UAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,UAAE,oBAAoB;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,QAAM,4BAA4B,EAAE;AACpC,IAAE,yBAAyB;AAE3B,aAAW,GAAG,KAAK;AACnB,IAAE,yBAAyB;AAC/B;AAGA,SAAS,+BAA+B,GAAG,OAAO;AAC9C,IAAE,uBAAuB,KAAK,KAAK;AACvC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,uBAAuB,KAAK,KAAK;AACnC,IAAE,wCAAwC;AAC9C;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,IAAI;AACR,MAAI,EAAE,uCAAuC;AACzC,WAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,mBAAa,GAAG,EAAE,uBAAuB,CAAC,CAAC;AAAA,IAC/C;AAAA,EACJ,OACK;AACD,WAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,QAAE,kBAAkB,EAAE,uBAAuB,CAAC,CAAC;AAAA,IACnD;AAAA,EACJ;AACA,IAAE,gBAAgB,EAAE;AACpB,IAAE,cAAc,KAAK;AACzB;AAGA,IAAM,sBAAsB,oBAAI,IAAI,CAAC,OAAE,SAAS,OAAE,KAAK,OAAE,UAAU,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,EAAE,CAAC;AAC/G,SAAS,kBAAkB,GAAG,OAAO;AACjC,QAAM,KAAK,MAAM;AACjB,MAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,QAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,QAAE,yBAAyB,kBAAkB;AAC7C,QAAE,gBAAgB,cAAc;AAChC,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,QAAM,KAAK,MAAM;AACjB,UAAQ,IAAI;AAAA,IACR,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,UAAE,aAAa,uBAAuB;AACtC,UAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,UAAE,yBAAyB,kBAAkB;AAC7C,UAAE,gBAAgB,cAAc;AAChC,YAAI,OAAO,OAAE,OAAO;AAChB,wBAAc,GAAG,KAAK;AAAA,QAC1B;AAAA,MACJ;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,SAAS;AACL,yBAAmB,GAAG,KAAK;AAAA,IAC/B;AAAA,EACJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AAER;AAAA,IACJ;AAAA,IACA,SAAS;AACL,yBAAmB,GAAG,KAAK;AAAA,IAC/B;AAAA,EACJ;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AACJ;AAGA,SAAS,oBAAoB,GAAG,OAAO;AACnC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,4BAA4B;AAC3C,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,4BAA4B;AAC3C,QAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,QAAE,gBAAgB,cAAc;AAChC,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AACA;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,QAAM,KAAK,MAAM;AACjB,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,sBAAc,GAAG,KAAK;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ;AACJ;AAGA,SAAS,cAAc,GAAG,OAAO;AAC7B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,2BAA2B;AAC1C,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC,QAAE,yBAAyB,aAAa;AACxC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,4BAAoB,GAAG,KAAK;AAAA,MAChC;AACA;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,0BAAkB,GAAG,KAAK;AAAA,MAC9B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,MAAM,KAAK,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACrF,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,0BAAkB,GAAG,KAAK;AAAA,MAC9B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ;AACJ;AAGA,SAAS,eAAe,GAAG,OAAO;AAC9B,QAAM,KAAK,MAAM;AACjB,MAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,QAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AAC9E,QAAE,gBAAgB;AAClB,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,QAAM,KAAK,MAAM;AACjB,UAAQ,IAAI;AAAA,IACR,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,aAAa,uBAAuB;AACtC,UAAE,aAAa,sBAAsB,EAAE;AACvC,UAAE,yBAAyB,kBAAkB;AAC7C,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,gBAAgB;AAClB,oBAAY,GAAG,KAAK;AAAA,MACxB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AAET;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AAGA,SAAS,iBAAiB,GAAG,OAAO;AAChC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,UAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,UAAE,oBAAoB;AACtB,YAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,YAAE,iBAAiB,KAAK;AAAA,QAC5B;AAAA,MACJ;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,WAAW,KAC1B,EAAE,aAAa,iBAAiB,OAAE,UAClC,EAAE,aAAa,OAAO,EAAE,aAAa,WAAW,CAAC,MAAM,OAAE,UAAU;AACnE,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,UAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,UAAE,oBAAoB;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AAGA,SAAS,wBAAwB,GAAG,OAAO;AACvC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,MAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,MAAE,oBAAoB;AACtB,MAAE,iBAAiB,KAAK;AAAA,EAC5B,OACK;AACD,qBAAiB,GAAG,KAAK;AAAA,EAC7B;AACJ;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,QAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,QAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,QAAE,oBAAoB;AACtB,QAAE,SAAS,KAAK;AAAA,IACpB;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IAEjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IAEA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,QAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,QAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,MAAM,UAAU,OAAE,UAAU;AAC5B,yBAAqB,GAAG,KAAK;AAAA,EACjC;AACJ;AACA,SAAS,cAAc,GAAG,OAAO;AAC7B,MAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,MAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,MAAE,yBAAyB,kBAAkB;AAC7C,MAAE,uBAAuB,MAAM;AAC/B,MAAE,oBAAoB;AACtB,MAAE,MAAM,KAAK;AAAA,EACjB,OACK;AACD,gBAAY,GAAG,KAAK;AAAA,EACxB;AACJ;AAGA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,mBAAe,GAAG,KAAK;AAAA,EAC3B,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAIA;AACJ,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,QAAI,CAAC,EAAE,iBAAiB;AACpB,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAGA,QAAI,EAAE,QAAQ,0BAA0B,EAAE,aAAa,OAAO,CAAC,MAAM,OAAE,MAAM;AACzE,QAAE,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,KAAK;AAEhD,YAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,UAAI,eAAe,GAAGA,MAAK,EAAE,YAAY,0BAA0B,WAAW,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS;AAC9H,UAAE,gBAAgB,aAAa,KAAK;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,MAAM,UAAU,OAAE,YAAY,CAAC,EAAE,aAAa,yBAAyB,GAAG;AAC1E,MAAE,aAAa,IAAI;AACnB,QAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAClE,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAAA,EACJ;AACJ;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACJ;AAGA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,mBAAe,GAAG,KAAK;AAAA,EAC3B,OACK;AACD,wBAAoB,GAAG,KAAK;AAAA,EAChC;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,2BAA2B,GAAG,OAAO;AAC1C,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AAGA,SAAS,8BAA8B,GAAG,OAAO;AAC7C,QAAM,QAAgB;AACtB,IAAE,kBAAkB,KAAK;AAC7B;AACA,SAAS,0BAA0B,GAAG,OAAO;AACzC,IAAE,kBAAkB,KAAK;AACzB,IAAE,aAAa;AACnB;AACA,SAAS,+BAA+B,GAAG;AACvC,SAAO,EAAE,YAAY,gBAAgB,EAAE,aAAa,OAAO,MAAM,GAAG,QAChE,CAAC,EAAE,oBAAoB,EAAE,aAAa,cAAc,EAAE,aAAa,OAAO,GAAG;AAC7E,MAAE,aAAa,IAAI;AAAA,EACvB;AACJ;AACA,SAAS,yBAAyB,GAAG,OAAO;AACxC,MAAmB,WAAW,KAAK,GAAG;AAClC,mCAA+B,CAAC;AAChC,MAAE,+BAA+B,KAAK;AAAA,EAC1C,OACK;AACD,UAAM,UAAU,EAAE,2BAA2B;AAC7C,UAAM,YAAY,EAAE,YAAY,gBAAgB,OAAO;AACvD,QAAI,cAAc,GAAG,QAAQ;AACzB,MAAe,uBAAuB,KAAK;AAAA,IAC/C,WACS,cAAc,GAAG,KAAK;AAC3B,MAAe,sBAAsB,KAAK;AAC1C,MAAe,oBAAoB,KAAK;AAAA,IAC5C;AACA,IAAe,oBAAoB,KAAK;AACxC,QAAI,MAAM,aAAa;AACnB,QAAE,eAAe,OAAO,SAAS;AAAA,IACrC,OACK;AACD,QAAE,eAAe,OAAO,SAAS;AAAA,IACrC;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,MAAM,UAAU,OAAE,KAAK,MAAM,UAAU,OAAE,IAAI;AAC7C,mCAA+B,CAAC;AAChC,MAAE,6BAA6B,KAAK;AACpC;AAAA,EACJ;AACA,WAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,UAAMC,WAAU,EAAE,aAAa,MAAM,CAAC;AACtC,QAAI,EAAE,YAAY,gBAAgBA,QAAO,MAAM,GAAG,MAAM;AACpD,QAAE,6BAA6B,KAAK;AACpC;AAAA,IACJ;AACA,UAAM,UAAU,EAAE,YAAY,WAAWA,QAAO;AAChD,QAAI,QAAQ,YAAY,MAAM,MAAM,SAAS;AAEzC,YAAM,UAAU;AAChB,QAAE,aAAa,gBAAgB,CAAC;AAChC;AAAA,IACJ;AAAA,EACJ;AACJ;;;ACrqGA,IAAM,aAAa,oBAAI,IAAI;EACvB,CAAC,IAAI,QAAQ;EACb,CAAC,IAAI,OAAO;EACZ,CAAC,IAAI,QAAQ;EACb,CAAC,IAAI,MAAM;EACX,CAAC,IAAI,MAAM;CACd;AAGM,IAAM;;EAET,OAAO,UAAU,eAAe,OAC1B,CAAC,KAAa,UAA0B,IAAI,YAAY,KAAK;;IAE7D,CAAC,GAAW,WACP,EAAE,WAAW,KAAK,IAAI,WAAY,SAC5B,EAAE,WAAW,KAAK,IAAI,SAAU,OACjC,EAAE,WAAW,QAAQ,CAAC,IACtB,QACA,QACA,EAAE,WAAW,KAAK;;;AA0DtC,SAAS,WACL,OACA,KAAwB;AAExB,SAAO,SAAS,OAAO,MAAY;AAC/B,QAAI;AACJ,QAAI,UAAU;AACd,QAAI,SAAS;AAEb,WAAQ,QAAQ,MAAM,KAAK,IAAI,GAAI;AAC/B,UAAI,YAAY,MAAM,OAAO;AACzB,kBAAU,KAAK,UAAU,SAAS,MAAM,KAAK;;AAIjD,gBAAU,IAAI,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;AAGxC,gBAAU,MAAM,QAAQ;;AAG5B,WAAO,SAAS,KAAK,UAAU,OAAO;EAC1C;AACJ;AASO,IAAM,aAAa,WAAW,YAAY,UAAU;AAQpD,IAAM,kBAAkB,WAC3B,eACA,oBAAI,IAAI;EACJ,CAAC,IAAI,QAAQ;EACb,CAAC,IAAI,OAAO;EACZ,CAAC,KAAK,QAAQ;CACjB,CAAC;AASC,IAAM,aAAa,WACtB,gBACA,oBAAI,IAAI;EACJ,CAAC,IAAI,OAAO;EACZ,CAAC,IAAI,MAAM;EACX,CAAC,IAAI,MAAM;EACX,CAAC,KAAK,QAAQ;CACjB,CAAC;;;AC1IN,IAAM,gBAAgB,oBAAI,IAAI;AAAA,EAC1B,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AAAA,EACF,UAAE;AACN,CAAC;;;ACMM,SAASG,OAAMC,OAAM,SAAS;AACjC,SAAO,OAAO,MAAMA,OAAM,OAAO;AACrC;AACO,SAAS,cAAc,iBAAiBA,OAAM,SAAS;AAC1D,MAAI,OAAO,oBAAoB,UAAU;AACrC,cAAUA;AACV,IAAAA,QAAO;AACP,sBAAkB;AAAA,EACtB;AACA,QAAMC,UAAS,OAAO,kBAAkB,iBAAiB,OAAO;AAChE,EAAAA,QAAO,UAAU,MAAMD,OAAM,IAAI;AACjC,SAAOC,QAAO,YAAY;AAC9B;;;AC9BO,IAAM,SAAS;AAAA;AAAA,EAEpB,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,6BAA6B;AAAA,IAC3B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,uCAAuC;AAAA,IACrC,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,uCAAuC;AAAA,IACrC,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,mCAAmC;AAAA,IACjC,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,kCAAkC;AAAA,IAChC,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,kBAAkB;AAAA,IAChB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,YAAY;AAAA,IACV,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,UAAU;AAAA,IACR,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,0CAA0C;AAAA,IACxC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,kBAAkB;AAAA,IAChB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,iCAAiC;AAAA,IAC/B,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,uBAAuB;AAAA,IACrB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,gBAAgB;AAAA,IACd,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,mBAAmB;AAAA,IACjB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,2CAA2C;AAAA,IACzC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,2CAA2C;AAAA,IACzC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,yCAAyC;AAAA,IACvC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,2DAA2D;AAAA,IACzD,QACE;AAAA,IACF,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,eAAe;AAAA,IACb,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,+CAA+C;AAAA,IAC7C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QACE;AAAA,IACF,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA;AAAA,EAEA,6BAA6B;AAAA,IAC3B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,iDAAiD;AAAA,IAC/C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,6CAA6C;AAAA,IAC3C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,yCAAyC;AAAA,IACvC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,yBAAyB;AAAA,IACvB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,wCAAwC;AAAA,IACtC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA;AAAA,EAEA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA;AAAA,EAEA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AACF;;;AC9UA,IAAM,OAAO;AAEb,IAAM,gBAAgB;AACtB,IAAM,YAAY;AAClB,IAAM,YAAY;AAElB,IAAM,aAAa,EAAC,GAAG,MAAM,GAAG,OAAO,GAAG,KAAI;AAG9C,IAAM,eAAe,CAAC;AAYf,SAAS,SAAS,OAAO,SAAS;AACvC,QAAM,WAAW,WAAW;AAC5B,QAAM,UAAU,SAAS;AACzB,QAAM,OAAO,iBAAiB,QAAQ,QAAQ,IAAI,MAAM,KAAK;AAC7D,QAAM,gBAAgB,SAAS,WAAW,gBAAgBC;AAC1D,QAAMC,YAAW,OAAO,IAAI;AAC5B,QAAM,aAAa,cAAcA,WAAU;AAAA,IACzC,wBAAwB;AAAA;AAAA,IAExB,cAAc,SAAS,UAAU,kBAAkB;AAAA,IACnD,kBAAkB;AAAA,EACpB,CAAC;AAGD;AAAA;AAAA,IACE,WAAW,YAAY;AAAA,MACrB;AAAA,MACA,OAAO,SAAS;AAAA,MAChB,SAAS,SAAS;AAAA,IACpB,CAAC;AAAA;AAWH,WAAS,gBAAgB,OAAO;AAC9B,UAAM,OAAO,MAAM;AACnB,UAAM,OAAO,UAAU,IAAI;AAC3B,UAAM,UAAU,SAAS,IAAI;AAC7B,UAAM,SAAS,YAAY,QAAQ,YAAY,SAAY,OAAO;AAClE,UAAM,QAAQ,OAAO,WAAW,WAAW,SAAS,SAAS,IAAI;AAEjE,QAAI,OAAO;AACT,YAAM,OAAO,OAAO,IAAI;AACxB,SAAO,MAAM,oCAAoC;AAEjD,YAAM,UAAU,IAAI,aAAa,OAAO,KAAK,MAAM,GAAG;AAAA,QACpD,OAAO;AAAA,UACL,OAAO;AAAA,YACL,MAAM,MAAM;AAAA,YACZ,QAAQ,MAAM;AAAA,YACd,QAAQ,MAAM;AAAA,UAChB;AAAA,UACA,KAAK;AAAA,YACH,MAAM,MAAM;AAAA,YACZ,QAAQ,MAAM;AAAA,YACd,QAAQ,MAAM;AAAA,UAChB;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV,CAAC;AAED,UAAI,KAAK,MAAM;AACb,gBAAQ,OAAO,KAAK;AACpB,gBAAQ,OAAO,KAAK,OAAO,MAAM,QAAQ;AAAA,MAC3C;AAEA,cAAQ,QAAQ,WAAW,KAAK;AAChC,cAAQ,OAAO,OAAO,KAAK,WAAW;AACtC,cAAQ,MAAM,KAAK,QAAQ,QAAQ,SAAY,OAAO;AAEtD,SAAO,SAAS,yDAAyD;AACzE,cAAQ,OAAO;AAAA,IACjB;AAUA,aAAS,OAAOC,QAAO;AACrB,aAAOA,OAAM,QAAQ,WAAW,OAAO,EAAE,QAAQ,WAAW,OAAO;AAcnE,eAAS,QAAQ,GAAG,IAAI,IAAI;AAC1B,cAAM,UACH,KAAK,OAAO,SAAS,IAAI,EAAE,IAAI,MAAM,OAAO,MAAM,KAAK;AAC1D,cAAM,OAAOD,UAAS,OAAO,MAAM,cAAc,MAAM;AACvD,eAAO,mBAAmB,IAAI;AAAA,MAChC;AAQA,eAAS,UAAU;AACjB,eAAO,uBAAuBA,UAAS,WAAW,MAAM,WAAW,CAAC;AAAA,MACtE;AAAA,IACF;AAAA,EACF;AACF;AAQA,SAAS,UAAU,OAAO;AAExB;AAAA;AAAA,IAAiC,MAAM,QAAQ,eAAe,WAAW;AAAA;AAC3E;AAQA,SAAS,YAAY,IAAI;AACvB,SAAO,GAAG,OAAO,CAAC,EAAE,YAAY;AAClC;AAQA,SAAS,mBAAmB,MAAM;AAChC,SAAO,SAAS,MAAM,UAAU;AAClC;AAQA,SAAS,uBAAuB,UAAU;AACxC,SAAO,OAAO,SAAS,SAAS,EAAE,EAAE,YAAY;AAClD;;;ACxJe,SAAR,YAA6B,SAAS;AAG3C,QAAME,QAAO;AACb,QAAM,EAAC,iBAAiB,GAAG,SAAQ,IAAI,EAAC,GAAGA,MAAK,KAAK,UAAU,GAAG,GAAG,QAAO;AAE5E,EAAAA,MAAK,SAASC;AAKd,WAASA,QAAOC,WAAU,MAAM;AAC9B,WAAO,SAASA,WAAU;AAAA,MACxB,GAAG;AAAA,MACH,SAAS,kBACL,SAAU,SAAS;AACjB,YAAI,KAAK,MAAM;AACb,kBAAQ,OAAO,KAAK,OAAO,MAAM,QAAQ;AACzC,kBAAQ,OAAO,KAAK;AAAA,QACtB;AAEA,aAAK,SAAS,KAAK,OAAO;AAAA,MAC5B,IACA;AAAA,IACN,CAAC;AAAA,EACH;AACF;;;AC9DO,IAAI,sBAAsB,CAAC;AAC3B,IAAI,oBAAoB,CAAC;AAChC,SAAS,YAAY,MAAM,OAAO;AAC9B,MAAI,eAAe;AACnB,WAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,OAAO;AACxC,QAAI,SAAS,QAAQ,KAAK,SAAS;AACnC,QAAI,OAAO,KAAK,OAAO,GAAG;AAC1B,QAAI,YAAY,aAAa,IAAI,MAAM,aAAa,IAAI,IAAI,EAAE,OAAO,CAAC,EAAE;AACxE,QAAI,QAAQ;AACR,gBAAU,OAAO;AAAA,IACrB;AACA,mBAAe,UAAU;AAAA,EAC7B;AACJ;AACO,SAAS,qBAAqB,OAAO;AACxC,MAAI,MAAM,WAAW,GAAG;AACpB,WAAO;AAAA,EACX;AACA,MAAI,QAAQ,CAAC;AACb,WAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,QAAI,OAAO,QAAQ,EAAE;AACrB,gBAAY,MAAM,KAAK;AAAA,EAC3B;AACA,SAAO;AACX;AACO,SAAS,mBAAmB,OAAO;AACtC,MAAI,MAAM,WAAW,GAAG;AACpB,WAAO;AAAA,EACX;AACA,MAAI,SAAS,CAAC;AACd,WAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,QAAI,OAAO,QAAQ,EAAE;AACrB,WAAO,IAAI,IAAI;AAAA,EACnB;AACA,SAAO;AACX;;;ACnCO,IAAI,wBAAwB,CAAC;AAC7B,IAAI,yBAAyB;AAAA,EAChC,MAAM;AAAA,EACN,UAAU;AACd;AACA,SAAS,yBAAyB,OAAO;AACrC,MAAI,SAAS;AAAA,IACT,MAAM;AAAA,IACN,UAAU;AAAA,EACd;AACA,WAAS,cAAcC,OAAM;AACzB,QAAI,OAAO,QAAQ,OAAO,SAASA,SAAQ,OAAO,SAAS,cAAc;AACrE,YAAM,IAAI,MAAM,4CAA6C,OAAO,OAAO,MAAM,QAAU,EAAE,OAAOA,OAAM,IAAK,CAAC;AAAA,IACpH;AACA,WAAO,OAAOA;AAAA,EAClB;AACA,WAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,QAAI,OAAO,QAAQ,EAAE;AACrB,QAAI,SAAS,cAAc;AACvB,aAAO,WAAW;AAAA,IACtB;AACA,QAAI,SAAS,WAAW;AACpB,oBAAc,SAAS;AAAA,IAC3B;AACA,QAAI,SAAS,qBAAqB;AAC9B,oBAAc,SAAS;AACvB,aAAO,aAAa;AAAA,IACxB;AACA,QAAI,SAAS,UAAU;AACnB,oBAAc,QAAQ;AAAA,IAC1B;AACA,QAAI,SAAS,YAAY;AACrB,oBAAc,UAAU;AAAA,IAC5B;AAAA,EACJ;AACA,SAAO;AACX;AACO,SAAS,kBAAkB,KAAK;AACnC,MAAI,SAAS,CAAC;AACd,WAAS,KAAK,GAAGC,MAAK,OAAO,KAAK,GAAG,GAAG,KAAKA,IAAG,QAAQ,MAAM;AAC1D,QAAI,WAAWA,IAAG,EAAE;AACpB,QAAI,QAAQ,IAAI,QAAQ;AACxB,QAAI,OAAO;AACP,eAAS,KAAK,GAAG,KAAK,OAAO,KAAK,GAAG,QAAQ,MAAM;AAC/C,YAAI,OAAO,GAAG,EAAE;AAChB,SAAC,OAAO,IAAI,MAAM,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ;AAAA,MACvD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AACO,SAAS,0BAA0B,aAAa;AACnD,MAAI,+BAA+B,kBAAkB,WAAW;AAChE,MAAI,SAAS,CAAC;AACd,WAAS,KAAK,GAAGA,MAAK,OAAO,KAAK,4BAA4B,GAAG,KAAKA,IAAG,QAAQ,MAAM;AACnF,QAAI,cAAcA,IAAG,EAAE;AACvB,QAAI,gBAAgB,6BAA6B,WAAW;AAC5D,QAAI,eAAe;AACf,aAAO,WAAW,IAAI,yBAAyB,aAAa;AAAA,IAChE;AAAA,EACJ;AACA,SAAO;AACX;;;AC9DA,IAAI,WAAsC,WAAY;AAClD,aAAW,OAAO,UAAU,SAAS,GAAG;AACpC,aAASC,IAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,MAAAA,KAAI,UAAU,CAAC;AACf,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC;AAC1D,UAAE,CAAC,IAAIA,GAAE,CAAC;AAAA,IAClB;AACA,WAAO;AAAA,EACX;AACA,SAAO,SAAS,MAAM,MAAM,SAAS;AACzC;AACA,IAAI,kBAAkB,CAAC;AACvB,IAAI,oBAAoB,EAAE,UAAU,KAAK;AAClC,SAAS,cAAc,OAAO;AACjC,MAAI,OAAO;AACP,QAAI,OAAO,UAAU,WAAW;AAC5B,aAAO;AAAA,IACX,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ,OACK;AACD,WAAO;AAAA,EACX;AACJ;AACA,SAAS,cAAc,WAAWC,QAAO;AACrC,SAAO,SAAUC,OAAM,WAAW;AAAE,WAAOD,OAAM,UAAUC,KAAI,GAAG,UAAU,SAAS,CAAC;AAAA,EAAG;AAC7F;AACA,SAAS,eAAeD,QAAO;AAC3B,SAAO,SAAUC,OAAM,WAAW;AAC9B,QAAI,SAASD,OAAMC,OAAM,SAAS;AAClC,QAAI,CAAC,QAAQ;AACT,YAAM,IAAI,MAAM,gDAAgD;AAAA,IACpE;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,aAAa,UAAUD,QAAO;AACnC,SAAO,SAAUC,OAAM,WAAW;AAC9B,QAAI,cAAc,MAAM;AACpB,aAAO;AAAA,IACX;AACA,WAAOD,OAAMC,UAAS,OAAO,WAAWA,OAAM,SAAS;AAAA,EAC3D;AACJ;AACA,SAAS,aAAa,QAAQ;AAC1B,SAAO,SAAUA,OAAM,WAAW;AAC9B,QAAI,CAAC,aAAa,CAACA,OAAM;AACrB,aAAO;AAAA,IACX;AACA,QAAI,OAAO,cAAc,YAAY,cAAc,MAAM;AACrD,YAAM,IAAI,MAAM,gDAAgD,OAAO,WAAW,GAAG,CAAC;AAAA,IAC1F;AACA,QAAI,SAAS,SAAS,CAAC,GAAGA,KAAI;AAC9B,aAAS,KAAK,GAAGC,MAAK,OAAO,QAAQ,SAAS,GAAG,KAAKA,IAAG,QAAQ,MAAM;AACnE,UAAI,KAAKA,IAAG,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC;AAC1C,UAAI,QAAQ,UAAU;AAClB;AAAA,MACJ;AACA,UAAI,cAAc,OAAO,GAAG;AAC5B,aAAO,GAAG,IAAI,YAAYD,MAAK,GAAG,GAAG,KAAK;AAAA,IAC9C;AACA,WAAO;AAAA,EACX;AACJ;AACA,SAAS,wBAAwBA,OAAM,WAAW;AAC9C,MAAI,cAAc,QAAW;AACzB,WAAO;AAAA,EACX;AACA,SAAOA;AACX;AACA,SAAS,YAAYA,OAAM,WAAW;AAClC,MAAI,CAAC,WAAW;AACZ,WAAOA;AAAA,EACX;AACA,MAAI,CAACA,OAAM;AACP,WAAO;AAAA,EACX;AACA,SAAOA,MAAK,OAAO,SAAS;AAChC;AACA,SAAS,iBAAiBA,OAAM,WAAW;AACvC,MAAI,CAAC,WAAW;AACZ,WAAOA;AAAA,EACX;AACA,MAAI,CAACA,OAAM;AACP,WAAO;AAAA,EACX;AACA,MAAI,SAAS,SAAS,CAAC,GAAGA,KAAI;AAC9B,WAAS,KAAK,GAAGC,MAAK,OAAO,QAAQ,SAAS,GAAG,KAAKA,IAAG,QAAQ,MAAM;AACnE,QAAI,KAAKA,IAAG,EAAE,GAAG,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC;AAC1C,QAAI,CAAC,OAAO;AACR,aAAO,OAAO,GAAG;AACjB;AAAA,IACJ;AACA,QAAI,YAAYD,MAAK,GAAG;AACxB,QAAI,CAAC,WAAW;AACZ,aAAO,GAAG,IAAI;AACd;AAAA,IACJ;AACA,WAAO,GAAG,IAAI,UAAU,OAAO,KAAK;AAAA,EACxC;AACA,SAAO;AACX;AACO,IAAI,yBAAyB,eAAe,aAAa;AAAA,EAC5D,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,KAAK,aAAa,mBAAmB,aAAa;AAAA,IAC9C,UAAU;AAAA,EACd,CAAC,CAAC;AAAA,EACF,KAAK;AAAA,EACL,YAAY;AAAA,EACZ,WAAW,aAAa,mBAAmB,aAAa;AAAA,IACpD,UAAU;AAAA,EACd,CAAC,CAAC;AAAA,EACF,aAAa;AAAA,EACb,YAAY,aAAa;AAAA,IACrB,WAAW;AAAA,IACX,0BAA0B;AAAA,IAC1B,iCAAiC;AAAA,EACrC,CAAC;AAAA,EACD,eAAe,aAAa;AAAA,IACxB,SAAS;AAAA,IACT,aAAa;AAAA,EACjB,CAAC;AAAA,EACD,gBAAgB,aAAa;AAAA,IACzB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa,cAAc,SAAU,aAAa;AAAE,aAAQ,MAAM,QAAQ,WAAW,IAAI,EAAE,YAAY,YAAY,IAAI;AAAA,IAAc,GAAG,gBAAgB;AAAA,EAC5J,CAAC;AACL,CAAC,CAAC;AACF,IAAI,uBAAuB;AAAA,EACvB,KAAK,CAAC;AAAA,EACN,KAAK;AAAA,EACL,YAAY;AAAA,EACZ,aAAa,CAAC;AAAA,EACd,gBAAgB;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa,CAAC,gBAAgB,YAAY;AAAA,EAC9C;AAAA,EACA,eAAe;AAAA,IACX,SAAS;AAAA,IACT,aAAa;AAAA,MACT,YAAY,CAAC,QAAQ,WAAW,QAAQ;AAAA,IAC5C;AAAA,EACJ;AACJ;AACA,IAAI,uBAAuB,uBAAuB,sBAAsB;AAAA,EACpE,KAAK,EAAE,UAAU,KAAK;AAAA,EACtB,aAAa,CAAC,KAAK,GAAG;AAAA,EACtB,YAAY;AAAA,IACR,iCAAiC;AAAA,IACjC,WAAW,CAAC,KAAK,MAAM,IAAI;AAAA,EAC/B;AAAA,EACA,gBAAgB;AAAA,IACZ,aAAa,CAAC,UAAU,OAAO;AAAA,EACnC;AAAA,EACA,eAAe;AAAA,IACX,SAAS;AAAA,IACT,aAAa;AAAA,MACT,YAAY,CAAC,SAAS,SAAS,aAAa;AAAA,MAC5C,QAAQ,CAAC,MAAM;AAAA,IACnB;AAAA,EACJ;AACJ,CAAC;AACD,IAAI,6BAA6B,uBAAuB,sBAAsB;AAAA,EAC1E,WAAW;AAAA,IACP,UAAU;AAAA,EACd;AAAA,EACA,aAAa,CAAC,GAAG;AAAA,EACjB,YAAY;AAAA,IACR,WAAW,CAAC,MAAM,MAAM,IAAI;AAAA,EAChC;AAAA,EACA,gBAAgB;AAAA,IACZ,UAAU;AAAA,EACd;AAAA,EACA,eAAe;AAAA,IACX,aAAa;AAAA,MACT,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,SAAS,CAAC,aAAa,kBAAkB,eAAe,kBAAkB;AAAA,MAC1E,UAAU,CAAC,KAAK;AAAA,IACpB;AAAA,EACJ;AACJ,CAAC;AACD,IAAI,6BAA6B,uBAAuB,4BAA4B;AAAA,EAChF,aAAa,CAAC,IAAI;AAAA,EAClB,YAAY;AAAA,IACR,0BAA0B,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA,EACjD;AAAA,EACA,eAAe;AAAA,IACX,aAAa;AAAA,MACT,YAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,SAAS,CAAC,WAAW,cAAc;AAAA,MACnC,QAAQ,CAAC,KAAK;AAAA,MACd,mBAAmB,CAAC,aAAa,gBAAgB;AAAA,MACjD,UAAU,CAAC,WAAW,MAAM,SAAS,OAAO,OAAO;AAAA,IACvD;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,aAAa;AAAA,MACT,YAAY,CAAC,QAAQ;AAAA,MACrB,UAAU,CAAC,MAAM;AAAA,IACrB;AAAA,EACJ;AACJ,CAAC;AASM,IAAI,aAAa;AAAA,EACpB,kBAAkB;AAAA,IACd,QAAQ;AAAA,IACR,eAAe;AAAA,MACX,aAAa;AAAA,QACT,YAAY,CAAC,UAAU,YAAY,UAAU;AAAA,MACjD;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,kBAAkB;AAAA,IACd,QAAQ;AAAA,IACR,eAAe;AAAA,MACX,aAAa;AAAA,QACT,YAAY,CAAC,UAAU,YAAY,YAAY,OAAO;AAAA,MAC1D;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,kBAAkB;AAAA,IACd,QAAQ;AAAA,IACR,eAAe;AAAA,MACX,aAAa;AAAA,QACT,YAAY,CAAC,UAAU,SAAS,YAAY,YAAY,QAAQ;AAAA,MACpE;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,kBAAkB;AAAA,IACd,QAAQ;AAAA,IACR,eAAe;AAAA,MACX,aAAa;AAAA,QACT,YAAY,CAAC,UAAU,SAAS,YAAY,YAAY,UAAU,SAAS;AAAA,MAC/E;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,iBAAiB;AAAA,IACb,QAAQ;AAAA,IACR,eAAe;AAAA,MACX,aAAa;AAAA,QACT,YAAY,CAAC,QAAQ,cAAc;AAAA,QACnC,UAAU,CAAC,QAAQ,cAAc;AAAA,MACrC;AAAA,IACJ;AAAA,IACA,gBAAgB;AAAA,MACZ,aAAa;AAAA,QACT,UAAU,CAAC,SAAS;AAAA,MACxB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,QAAQ;AAAA,IACR,gBAAgB;AAAA,MACZ,aAAa;AAAA,QACT,YAAY;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,QACA,QAAQ,CAAC,WAAW;AAAA,MACxB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,sBAAsB;AAAA,IAClB,QAAQ;AAAA,IACR,gBAAgB;AAAA,MACZ,aAAa;AAAA,QACT,UAAU,CAAC,MAAM;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,IAAI,yBAAyB,SAAS,SAAS,CAAC,GAAG,0BAA0B,GAAG,EAAE,SAAS,OAAO,QAAQ,UAAU,EAC3G,OAAO,SAAUC,KAAI;AACtB,MAAI,SAASA,IAAG,CAAC,EAAE;AACnB,SAAO;AACX,CAAC,EACI,IAAI,SAAUA,KAAI;AACnB,MAAI,OAAOA,IAAG,CAAC;AACf,SAAO;AACX,CAAC,EAAE,CAAC;AACR,IAAI,8BAA8B,uBAAuB,wBAAwB;AAAA,EAC7E,gBAAgB;AAAA,IACZ,SAAS;AAAA,EACb;AAAA,EACA,eAAe;AAAA,IACX,SAAS;AAAA,EACb;AAAA,EACA,YAAY;AAAA,IACR,iCAAiC;AAAA,EACrC;AACJ,CAAC;AACM,IAAI,uBAAuB;AAAA,EAC9B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,eAAe;AAAA,EACf,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,aAAa;AACjB;AAKO,SAAS,2BAA2B;AACvC,MAAI,QAAQ;AAAA,IACR,eAAe,CAAC;AAAA,IAChB,gBAAgB,CAAC;AAAA,EACrB;AAEA,MAAI,YAAY,CAAC,QAAQ,QAAQ,QAAQ,eAAe,aAAa;AACrE,WAAS,KAAK,GAAG,cAAc,WAAW,KAAK,YAAY,QAAQ,MAAM;AACrE,QAAI,QAAQ,YAAY,EAAE;AAC1B,QAAI,SAAS,qBAAqB,KAAK;AAEvC,QAAI,OAAO,iBAAiB,OAAO,OAAO,kBAAkB,UAAU;AAClE,UAAI,cAAc,OAAO,cAAc;AACvC,UAAI,aAAa;AACb,iBAASA,MAAK,GAAG,KAAK,OAAO,QAAQ,WAAW,GAAGA,MAAK,GAAG,QAAQA,OAAM;AACrE,cAAI,KAAK,GAAGA,GAAE,GAAG,QAAQ,GAAG,CAAC;AAC7B,mBAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,gBAAI,SAAS,QAAQ,EAAE;AACvB,gBAAI,CAAC,MAAM,cAAc,MAAM,GAAG;AAC9B,oBAAM,cAAc,MAAM,IAAI,CAAC;AAAA,YACnC;AACA,gBAAI,CAAC,MAAM,cAAc,MAAM,EAAE,SAAS,KAAK,GAAG;AAC9C,oBAAM,cAAc,MAAM,EAAE,KAAK,KAAK;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,OAAO,kBAAkB,OAAO,OAAO,mBAAmB,UAAU;AACpE,UAAI,cAAc,OAAO,eAAe;AACxC,UAAI,aAAa;AACb,YAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,mBAAS,KAAK,GAAG,gBAAgB,aAAa,KAAK,cAAc,QAAQ,MAAM;AAC3E,gBAAI,SAAS,cAAc,EAAE;AAC7B,gBAAI,CAAC,MAAM,eAAe,MAAM,GAAG;AAC/B,oBAAM,eAAe,MAAM,IAAI,CAAC;AAAA,YACpC;AACA,gBAAI,CAAC,MAAM,eAAe,MAAM,EAAE,SAAS,KAAK,GAAG;AAC/C,oBAAM,eAAe,MAAM,EAAE,KAAK,KAAK;AAAA,YAC3C;AAAA,UACJ;AAAA,QACJ,OACK;AACD,mBAAS,KAAK,GAAG,KAAK,OAAO,OAAO,WAAW,GAAG,KAAK,GAAG,QAAQ,MAAM;AACpE,gBAAI,QAAQ,GAAG,EAAE;AACjB,qBAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,kBAAI,SAAS,QAAQ,EAAE;AACvB,kBAAI,CAAC,MAAM,eAAe,MAAM,GAAG;AAC/B,sBAAM,eAAe,MAAM,IAAI,CAAC;AAAA,cACpC;AACA,kBAAI,CAAC,MAAM,eAAe,MAAM,EAAE,SAAS,KAAK,GAAG;AAC/C,sBAAM,eAAe,MAAM,EAAE,KAAK,KAAK;AAAA,cAC3C;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,KAAK,GAAG,KAAK,OAAO,QAAQ,UAAU,GAAG,KAAK,GAAG,QAAQ,MAAM;AACpE,QAAI,KAAK,GAAG,EAAE,GAAG,aAAa,GAAG,CAAC,GAAG,eAAe,GAAG,CAAC;AAExD,QAAI,aAAa,iBAAiB,OAAO,aAAa,kBAAkB,UAAU;AAC9E,UAAI,cAAc,aAAa,cAAc;AAC7C,UAAI,aAAa;AACb,iBAAS,KAAK,GAAG,KAAK,OAAO,OAAO,WAAW,GAAG,KAAK,GAAG,QAAQ,MAAM;AACpE,cAAI,QAAQ,GAAG,EAAE;AACjB,mBAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,gBAAI,SAAS,QAAQ,EAAE;AACvB,gBAAI,CAAC,MAAM,cAAc,MAAM,GAAG;AAC9B,oBAAM,cAAc,MAAM,IAAI,CAAC;AAAA,YACnC;AACA,gBAAI,CAAC,MAAM,cAAc,MAAM,EAAE,SAAS,UAAU,GAAG;AACnD,oBAAM,cAAc,MAAM,EAAE,KAAK,UAAU;AAAA,YAC/C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,aAAa,kBAAkB,OAAO,aAAa,mBAAmB,UAAU;AAChF,UAAI,cAAc,aAAa,eAAe;AAC9C,UAAI,aAAa;AACb,YAAI,MAAM,QAAQ,WAAW,GAAG;AAC5B,mBAAS,KAAK,GAAG,gBAAgB,aAAa,KAAK,cAAc,QAAQ,MAAM;AAC3E,gBAAI,SAAS,cAAc,EAAE;AAC7B,gBAAI,CAAC,MAAM,eAAe,MAAM,GAAG;AAC/B,oBAAM,eAAe,MAAM,IAAI,CAAC;AAAA,YACpC;AACA,gBAAI,CAAC,MAAM,eAAe,MAAM,EAAE,SAAS,UAAU,GAAG;AACpD,oBAAM,eAAe,MAAM,EAAE,KAAK,UAAU;AAAA,YAChD;AAAA,UACJ;AAAA,QACJ,OACK;AACD,mBAAS,KAAK,GAAG,KAAK,OAAO,OAAO,WAAW,GAAG,KAAK,GAAG,QAAQ,MAAM;AACpE,gBAAI,QAAQ,GAAG,EAAE;AACjB,qBAAS,KAAK,GAAG,UAAU,OAAO,KAAK,QAAQ,QAAQ,MAAM;AACzD,kBAAI,SAAS,QAAQ,EAAE;AACvB,kBAAI,CAAC,MAAM,eAAe,MAAM,GAAG;AAC/B,sBAAM,eAAe,MAAM,IAAI,CAAC;AAAA,cACpC;AACA,kBAAI,CAAC,MAAM,eAAe,MAAM,EAAE,SAAS,UAAU,GAAG;AACpD,sBAAM,eAAe,MAAM,EAAE,KAAK,UAAU;AAAA,cAChD;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAEO,IAAI,sBAAsB,yBAAyB;;;ACrenD,SAAS,aAAa,GAAG;AAC5B,SAAQ,KAAK,OAAO,KAAK,OAAS,KAAK,OAAO,KAAK,OAAQ,MAAM,OAAO,MAAM,OAAO,MAAM,QAAQ,KAAK;AAC5G;AACO,SAAS,QAAQ,GAAG;AACvB,SAAS,KAAK,OAAO,KAAK,OACrB,KAAK,OAAO,KAAK,OACjB,KAAK,OAAO,KAAK,OAClB,MAAM,OACN,MAAM,OACN,KAAK;AACb;AACO,SAAS,MAAM,GAAG;AACrB,SAAQ,KAAK,OAAO,KAAK,OAAS,KAAK,OAAO,KAAK,OAAS,KAAK,OAAO,KAAK;AACjF;AAuCO,IAAI,kBAAkB;AAAA,EACzB,KAAK;AAAA,EACL,KAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AACV;AACO,IAAI,aAAa;AAAA,EACpB,KAAK;AAAA,EACL,KAAK;AACT;AACO,IAAI,cAAc;AAAA,EACrB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACP;AACO,IAAI,eAAe;;;ACvE1B,IAAI,cAAc;AAIX,SAAS,aAAa,SAAS;AAClC,MAAI,YAAY,QAAQ;AAAE,cAAU,CAAC;AAAA,EAAG;AACxC,MAAIC,MAAK,QAAQ,QAAQ,SAASA,QAAO,SAAS,WAAWA,KAAI,cAAc,QAAQ,aAAa,KAAK,QAAQ,QAAQ,SAAS,OAAO,SAAS,OAAO,IAAI,UAAU,QAAQ;AAC/K,MAAI,mBAAmB,OAAO,WAAW,WAAW,SAAS,qBAAqB,MAAM;AACxF,MAAI,iBAAiB,YAAY;AAC7B,uBAAmB,uBAAuB,qBAAqB,iBAAiB,UAAU,GAAG,gBAAgB;AAAA,EACjH;AAEA,MAAI,iBAAiB,WAAW,iBAAiB,QAAQ,SAAS,GAAG;AACjE,aAAS,KAAK,GAAG,KAAK,iBAAiB,SAAS,KAAK,GAAG,QAAQ,MAAM;AAClE,UAAI,WAAW,GAAG,EAAE;AACpB,UAAI,eAAe,WAAW,QAAQ;AACtC,UAAI,cAAc;AACd,2BAAmB,uBAAuB,cAAc,gBAAgB;AAAA,MAC5E;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,WAAW,QAAQ,SAAS,GAAG;AAC/B,aAAS,KAAK,GAAG,YAAY,SAAS,KAAK,UAAU,QAAQ,MAAM;AAC/D,UAAI,WAAW,UAAU,EAAE;AAC3B,UAAI,eAAe,WAAW,QAAQ;AACtC,UAAI,cAAc;AACd,2BAAmB,uBAAuB,cAAc,gBAAgB;AAAA,MAC5E;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,KAAK,iBAAiB,MACpB,CAAC,MAAM,QAAQ,cAAc,iBAAiB,GAAG,EAAE,QAAQ,CAAC,IAC5D,CAAC,OAAO,KAAK,GAAG,iBAAiB,GAAG,CAAC,GAAG,yBAAyB,GAAG,CAAC;AAC3E,MAAI,YAAY,QAAQ,iBAAiB,GAAG;AAC5C,MAAI,oBAAoB,QAAQ,iBAAiB,UAAU;AAC3D,MAAI,mBAAmB,QAAQ,iBAAiB,SAAS;AACzD,MAAI,2BAA2B,iBAAiB,cAC3C,iBAAiB,cAAc,QAAQ,iBAAiB,UAAU,aAAa;AACpF,MAAI,oBAAoB,CAAC,gBAAgB;AACrC,UAAM,IAAI,MAAM,GAAG,OAAO,aAAa,uDAAuD,CAAC;AAAA,EACnG;AACA,MAAI,qBAAqB,QAAQ,WAAW;AAC5C,MAAI,mBAAmB,iBAAiB,cAClC,qBAAqB,iBAAiB,WAAW,IACjD;AACN,MAAI,KAAK,iBAAiB,aACpB;AAAA,IACE;AAAA,IACA,iBAAiB,WAAW,YACtB,qBAAqB,iBAAiB,WAAW,SAAS,IAC1D;AAAA,IACN,iBAAiB,WAAW,2BACtB,mBAAmB,iBAAiB,WAAW,wBAAwB,IACvE;AAAA,IACN,iBAAiB,WAAW,oCAAoC;AAAA,EACpE,IACE,CAAC,OAAO,qBAAqB,mBAAmB,KAAK,GAAG,oBAAoB,GAAG,CAAC,GAAG,2BAA2B,GAAG,CAAC,GAAG,qCAAqC,GAAG,CAAC,GAAG,kDAAkD,GAAG,CAAC;AAC7N,MAAI,4CAA4C,mDAAmD,OAAO,KAAK,kCAAkC,EAAE,SAAS;AAC5J,MAAI,KAAK,iBAAiB,gBACpB;AAAA,IACE;AAAA,IACA,iBAAiB,cAAc,cACzB,0BAA0B,iBAAiB,cAAc,WAAW,IACpE;AAAA,IACN,iBAAiB,cAAc,YAAY;AAAA,EAC/C,IACE,CAAC,OAAO,uBAAuB,KAAK,GAAG,uBAAuB,GAAG,CAAC,GAAG,2BAA2B,GAAG,CAAC,GAAG,6BAA6B,GAAG,CAAC;AAC9I,MAAI,KAAK,iBAAiB,iBACpB;AAAA,IACE;AAAA,IACA,iBAAiB,eAAe,aAAa,iBACzC,iBAAiB,eAAe,aAAa;AAAA,IACjD,CAAC,iBAAiB,eAAe,YAC7B,iBAAiB,eAAe,aAAa,iBAC7C,iBAAiB,eAAe,aAAa;AAAA,IACjD,iBAAiB,eAAe,cAC1B,0BAA0B,MAAM,QAAQ,iBAAiB,eAAe,WAAW,IAC/E,EAAE,YAAY,iBAAiB,eAAe,YAAY,IAC1D,iBAAiB,eAAe,WAAW,IAC/C;AAAA,IACN,iBAAiB,eAAe,YAAY;AAAA,EAChD,IACE,CAAC,OAAO,OAAO,OAAO,uBAAuB,KAAK,GAAG,wBAAwB,GAAG,CAAC,GAAG,2CAA2C,GAAG,CAAC,GAAG,2CAA2C,GAAG,CAAC,GAAG,4BAA4B,GAAG,CAAC,GAAG,8BAA8B,GAAG,CAAC;AACnQ,MAAI,MAAM;AACV,MAAI,IAAI,IAAI;AACZ,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAIC,MAAK,SAAU,YAAY;AAAE,WAAO,QAAQ;AAAA,EAAY;AAC5D,MAAI,aAAa,WAAY;AAAE,WAAOA,IAAG,GAAG,KAAK,aAAa,GAAG;AAAA,EAAG;AACpE,MAAI,SAAS,SAAU,QAAQ;AAC3B,UAAM;AACN,UAAM,IAAI,OAAO,GAAG;AAAA,EACxB;AACA,MAAIC,QAAO,WAAY;AACnB;AACA,UAAM,IAAI,OAAO,GAAG;AAAA,EACxB;AACA,MAAI,cAAc,WAAY;AAC1B,QAAI,UAAU;AACd;AACA,UAAM,IAAI,OAAO,GAAG;AACpB,WAAO;AAAA,EACX;AAEA,WAAS,KAAK,cAAc;AACxB,QAAIC,YAAW,KAAK,IAAI,IAAI,GAAG,GAAG;AAClC,QAAI,QAAQ,IAAI,MAAM,GAAG,OAAO,WAAW,EAAE,OAAO,cAAc,QAAQ,EAAE,OAAOA,WAAU,GAAG,CAAC;AACjG,UAAM,WAAWA;AACjB,UAAM,OAAO;AACb,UAAM;AAAA,EACV;AACA,WAAS,OAAO,WAAW,cAAc;AACrC,QAAI,CAAC,WAAW;AACZ,aAAO,KAAK,YAAY;AAAA,IAC5B;AAAA,EACJ;AACA,MAAI,eAAe,WAAY;AAC3B,WAAO,MAAM,GAAG,0BAA0B;AAAA,EAC9C;AACA,MAAI,QAAQ,WAAY;AAAE,WAAO,OAAO;AAAA,EAAG;AAC3C,MAAI,OAAO,SAAU,WAAW;AAC5B,WAAO,MAAM,GAAG,aAAc,OAAO,WAAW,6BAA8B,CAAC;AAC/E,WAAO,QAAQ,WAAW,aAAc,OAAO,WAAW,SAAW,EAAE,OAAO,KAAK,UAAW,CAAC;AAC/F;AACA,UAAM,IAAI,OAAO,GAAG;AAAA,EACxB;AACA,WAAS,oBAAoB,OAAO;AAChC,QAAI,QAAQ,uBAAuB,OAAO,GAAG;AAC7C,QAAI,OAAO;AACP,aAAO,MAAM;AACb,YAAM,IAAI,OAAO,GAAG;AACpB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,WAAS,uBAAuB,OAAO,QAAQ;AAC3C,QAAI,OAAO,IAAI,OAAO,MAAM;AAC5B,QAAI,YAAY,MAAM,IAAI;AAC1B,QAAI,WAAW;AACX,UAAI,WAAW,uBAAuB,UAAU,OAAO,SAAS,CAAC;AACjE,UAAI,UAAU;AACV,eAAO;AAAA,MACX;AACA,UAAI,UAAU,MAAM;AAChB,eAAO,UAAU;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AAIA,WAAS,WAAW;AAChB,QAAI,MAAM,YAAY;AACtB,QAAIC,SAAQ;AACZ,WAAO,MAAM,GAAG,KAAKA,SAAQ,cAAc;AACvC,aAAO,YAAY;AACnB,MAAAA;AAAA,IACJ;AACA,yBAAqB;AACrB,WAAO,OAAO,aAAa,SAAS,KAAK,EAAE,CAAC;AAAA,EAChD;AAIA,WAAS,YAAY,OAAO;AACxB,QAAI,SAAS;AACb,SAAK,KAAK;AACV,WAAO,MAAM,GAAG;AACZ,UAAIH,IAAG,KAAK,GAAG;AACX,QAAAC,MAAK;AACL,eAAO;AAAA,MACX,WACSD,IAAG,IAAI,GAAG;AACf,QAAAC,MAAK;AACL,YAAID,IAAG,KAAK,GAAG;AACX,oBAAU;AACV,UAAAC,MAAK;AAAA,QACT,WACS,QAAQ,QAAQ,QAAQ,MAAM;AACnC,UAAAA,MAAK;AAAA,QACT,WACS,QAAQ,MAAM;AACnB,UAAAA,MAAK;AACL,cAAID,IAAG,IAAI,GAAG;AACV,YAAAC,MAAK;AAAA,UACT;AAAA,QACJ,WACS,MAAM,GAAG,GAAG;AACjB,oBAAU,SAAS;AAAA,QACvB,OACK;AACD,oBAAU;AACV,UAAAA,MAAK;AAAA,QACT;AAAA,MACJ,OACK;AACD,kBAAU;AACV,QAAAA,MAAK;AAAA,MACT;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAIA,WAAS,kBAAkB;AACvB,QAAI,CAAC,aAAa,GAAG,GAAG;AACpB,aAAO;AAAA,IACX;AACA,QAAI,SAAS;AACb,WAAOD,IAAG,GAAG,GAAG;AACZ,gBAAU;AACV,MAAAC,MAAK;AAAA,IACT;AACA,QAAI,WAAW,OAAO,CAAC,QAAQ,GAAG,KAAK,CAACD,IAAG,IAAI,GAAG;AAC9C,WAAK,gDAAgD;AAAA,IACzD;AACA,QAAI,UAAU,OAAO,UAAU,GAAG;AAE9B,WAAK,gEAAgE;AAAA,IACzE;AACA,QAAI,YAAY,GAAG,GAAG;AAClB,WAAK,2DAA2D;AAAA,IACpE;AACA,WAAO,MAAM,GAAG;AACZ,UAAI,QAAQ,GAAG,GAAG;AACd,kBAAU,YAAY;AAAA,MAC1B,WACSA,IAAG,IAAI,GAAG;AACf,QAAAC,MAAK;AACL,qBAAa;AACb,YAAI,MAAM,GAAG,GAAG;AACZ,oBAAU,SAAS;AAAA,QACvB,OACK;AACD,oBAAU,YAAY;AAAA,QAC1B;AAAA,MACJ,OACK;AACD;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,WAAS,yBAAyB;AAC9B,QAAI,SAAS;AACb,WAAO,MAAM,GAAG;AACZ,UAAID,IAAG,GAAG,GAAG;AACT;AAAA,MACJ,WACSA,IAAG,IAAI,GAAG;AACf,QAAAC,MAAK;AACL,YAAI,MAAM,KAAK,CAAC,QAAQ;AACpB,kBAAQ,SAAS,MAAM,KAAK;AAAA,QAChC;AACA,qBAAa;AACb,YAAI,MAAM,GAAG,GAAG;AACZ,oBAAU,SAAS;AAAA,QACvB,OACK;AACD,oBAAU,YAAY;AAAA,QAC1B;AAAA,MACJ,OACK;AACD,kBAAU,YAAY;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO,OAAO,KAAK;AAAA,EACvB;AACA,WAAS,uBAAuB;AAC5B,QAAI,QAAQ,OAAO,QAAQ,OAAQ,QAAQ,QAAQ,QAAQ,MAAM;AAC7D,MAAAA,MAAK;AACL;AAAA,IACJ;AACA,QAAI,QAAQ,MAAM;AACd,MAAAA,MAAK;AAAA,IACT;AACA,QAAI,QAAQ,MAAM;AACd,MAAAA,MAAK;AAAA,IACT;AAAA,EACJ;AACA,WAAS,iBAAiB;AACtB,WAAO,gBAAgB,GAAG,GAAG;AACzB,MAAAA,MAAK;AAAA,IACT;AAAA,EACJ;AACA,WAASG,eAAc,UAAU;AAC7B,QAAI,aAAa,QAAQ;AAAE,iBAAW;AAAA,IAAO;AAC7C,mBAAe;AACf,QAAI,QAAQ,CAAC,UAAU,QAAQ,CAAC;AAChC,WAAOJ,IAAG,GAAG,GAAG;AACZ,MAAAC,MAAK;AACL,qBAAe;AACf,YAAM,KAAK,UAAU,QAAQ,CAAC;AAAA,IAClC;AACA,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,iBAAiB;AACtB,SAAK,GAAG;AACR,mBAAe;AACf,QAAI;AACJ,QAAID,IAAG,GAAG,GAAG;AACT,aAAO,kBAAkB,6BAA6B;AACtD,MAAAC,MAAK;AACL,UAAI,SAAS,gBAAgB;AAC7B,aAAO,QAAQ,0BAA0B;AACzC,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,QACN,WAAW,EAAE,MAAM,cAAc;AAAA,MACrC;AAAA,IACJ,WACSD,IAAG,GAAG,GAAG;AACd,aAAO,kBAAkB,6BAA6B;AACtD,aAAO,0BAA0B,oCAAoC;AACrE,MAAAC,MAAK;AACL,WAAK,GAAG;AACR,UAAI,SAAS,gBAAgB;AAC7B,aAAO,QAAQ,0BAA0B;AACzC,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,QACN,WAAW,EAAE,MAAM,oBAAoB;AAAA,MAC3C;AAAA,IACJ,OACK;AACD,UAAI,aAAa,gBAAgB;AACjC,aAAO,YAAY,0BAA0B;AAC7C,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AACA,UAAID,IAAG,GAAG,GAAG;AACT,YAAI,WAAW;AACf,QAAAC,MAAK;AACL,YAAI,aAAa,GAAG,GAAG;AACnB,iBAAO,kBAAkB,6BAA6B;AACtD,cAAI,SAAS,gBAAgB;AAC7B,iBAAO,QAAQ,0BAA0B;AACzC,iBAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN,WAAW,EAAE,MAAM,iBAAiB,MAAM,WAAW;AAAA,UACzD;AAAA,QACJ,OACK;AACD,iBAAO,QAAQ;AAAA,QACnB;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,KAAK,MAAM,0BAA0B;AAC5C,mBAAe;AACf,QAAI,MAAM,KAAK,CAAC,QAAQ;AACpB,aAAO;AAAA,IACX;AACA,QAAID,IAAG,GAAG,GAAG;AACT,MAAAC,MAAK;AAAA,IACT,OACK;AACD,WAAK,WAAW,oBAAoB,wBAAwB;AAC5D,aAAO,KAAK,UAAU,+CAA+C;AACrE,qBAAe;AACf,mBAAa;AACb,UAAI,WAAW,GAAG,GAAG;AACjB,aAAK,QAAQ;AAAA,UACT,MAAM;AAAA,UACN,OAAO,YAAY,GAAG;AAAA,QAC1B;AAAA,MACJ,WACS,sBAAsBD,IAAG,GAAG,GAAG;AACpC,QAAAC,MAAK;AACL,YAAI,SAAS,gBAAgB;AAC7B,eAAO,QAAQ,2BAA2B;AAC1C,aAAK,QAAQ;AAAA,UACT,MAAM;AAAA,UACN,MAAM;AAAA,QACV;AAAA,MACJ,OACK;AACD,YAAI,QAAQ,gBAAgB;AAC5B,eAAO,OAAO,2BAA2B;AACzC,aAAK,QAAQ;AAAA,UACT,MAAM;AAAA,UACN;AAAA,QACJ;AAAA,MACJ;AACA,qBAAe;AACf,UAAI,MAAM,KAAK,CAAC,QAAQ;AACpB,eAAO;AAAA,MACX;AACA,UAAI,CAACD,IAAG,GAAG,GAAG;AACV,YAAI,0BAA0B,gBAAgB;AAC9C,eAAO,yBAAyB,qCAAqC;AACrE,aAAK,0BAA0B;AAC/B,eAAO,2CAA2C,uDAAuD;AACzG,eAAO,mDACH,mCAAmC,KAAK,uBAAuB,GAAG,8CAA8C;AACpH,uBAAe;AACf,YAAI,MAAM,KAAK,CAAC,QAAQ;AACpB,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,WAAK,GAAG;AAAA,IACZ;AACA,WAAO;AAAA,EACX;AACA,WAAS,cAAc;AACnB,QAAI,SAAS;AACb,WAAO,YAAY,GAAG,GAAG;AACrB,gBAAU,YAAY;AAAA,IAC1B;AACA,WAAO,WAAW,IAAI,sBAAsB;AAC5C,WAAO,SAAS,MAAM;AAAA,EAC1B;AACA,MAAI,gBAAgB,WAAY;AAAE,WAAOA,IAAG,GAAG,KAAKA,IAAG,GAAG,KAAK,YAAY,GAAG;AAAA,EAAG;AACjF,WAAS,eAAe;AACpB,QAAIA,IAAG,GAAG,KAAKA,IAAG,GAAG,GAAG;AACpB,UAAI,QAAQ,gBAAgB;AAC5B,UAAI,UAAU,QAAQ;AAClB,uBAAe;AACf,eAAO,CAAC,GAAG,CAAC;AAAA,MAChB;AACA,UAAI,UAAU,OAAO;AACjB,uBAAe;AACf,eAAO,CAAC,GAAG,CAAC;AAAA,MAChB;AAAA,IACJ;AACA,QAAI,cAAc;AAClB,QAAI,wBAAwB;AAC5B,QAAIA,IAAG,GAAG,GAAG;AACT,MAAAC,MAAK;AACL,8BAAwB;AAAA,IAC5B;AACA,QAAI,cAAc,GAAG;AACjB,UAAID,IAAG,GAAG,GAAG;AACT,QAAAC,MAAK;AAAA,MACT;AACA,oBAAc,YAAY;AAC1B,UAAI,CAACD,IAAG,IAAI,KAAK,CAACA,IAAG,GAAG,GAAG;AACvB,eAAO,CAAC,GAAG,cAAc,qBAAqB;AAAA,MAClD;AAAA,IACJ;AACA,QAAI,gBAAgB,MAAM;AACtB,oBAAc;AAAA,IAClB;AACA,mBAAe;AACf,QAAI;AACJ,QAAIA,IAAG,IAAI,GAAG;AACV,MAAAC,MAAK;AACL,UAAI,MAAM,GAAG,GAAG;AACZ,qBAAa,SAAS;AAAA,MAC1B,OACK;AACD,qBAAa,YAAY;AAAA,MAC7B;AAAA,IACJ,OACK;AACD,mBAAa,YAAY;AAAA,IAC7B;AACA,WAAO,eAAe,KAAK,oCAAoC;AAC/D,mBAAe;AACf,QAAID,IAAG,GAAG,KAAKA,IAAG,GAAG,GAAG;AACpB,UAAI,OAAOA,IAAG,GAAG,IAAI,IAAI;AACzB,MAAAC,MAAK;AACL,qBAAe;AACf,aAAO,CAAC,aAAa,OAAO,YAAY,CAAC;AAAA,IAC7C,OACK;AACD,aAAO,CAAC,aAAa,CAAC;AAAA,IAC1B;AAAA,EACJ;AACA,WAAS,oBAAoB,YAAY,MAAM,WAAW;AACtD,QAAI;AACJ,QAAID,IAAG,GAAG,GAAG;AACT,MAAAC,MAAK;AACL,qBAAe;AACf,UAAI,sBAAsBD,IAAG,GAAG,GAAG;AAC/B,QAAAC,MAAK;AACL,YAAI,SAAS,gBAAgB;AAC7B,eAAO,QAAQ,2BAA2B;AAC1C,mBAAW;AAAA,UACP,MAAM;AAAA,UACN,MAAM;AAAA,QACV;AAAA,MACJ,WACS,UAAU,SAAS,UAAU;AAClC,mBAAW;AAAA,UACP,MAAM;AAAA,UACN,OAAO,uBAAuB;AAAA,QAClC;AACA,eAAO,SAAS,OAAO,YAAY,OAAO,MAAM,kBAAkB,CAAC;AAAA,MACvE,WACS,UAAU,SAAS,YAAY;AACpC,mBAAWG,eAAc,IAAI;AAAA,MACjC,WACS,UAAU,SAAS,WAAW;AACnC,YAAIL,MAAK,aAAa,GAAG,IAAIA,IAAG,CAAC,GAAG,IAAIA,IAAG,CAAC;AAC5C,mBAAW;AAAA,UACP,MAAM;AAAA,UACN;AAAA,UACA;AAAA,QACJ;AACA,YAAI,UAAU,YAAY;AACtB,yBAAe;AACf,cAAIC,IAAG,GAAG,KAAKA,IAAG,IAAI,GAAG;AACrB,gBAAI,QAAQ,gBAAgB;AAC5B,mBAAO,UAAU,MAAM,kCAAkC;AACzD,2BAAe;AACf,uBAAW;AAAA,cACP,MAAM;AAAA,cACN;AAAA,cACA;AAAA,cACA,UAAU,UAAU;AAAA,YACxB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OACK;AACD,eAAO,KAAK,WAAW,OAAO,MAAM,aAAa,CAAC;AAAA,MACtD;AACA,qBAAe;AACf,UAAI,MAAM,KAAK,CAAC,QAAQ;AACpB,eAAO;AAAA,MACX;AACA,WAAK,GAAG;AAAA,IACZ,OACK;AACD,aAAO,UAAU,UAAU,4BAA4B,OAAO,MAAM,IAAK,EAAE,OAAO,YAAY,IAAK,CAAC;AAAA,IACxG;AACA,WAAO;AAAA,EACX;AACA,WAAS,eAAe;AACpB,QAAIA,IAAG,GAAG,GAAG;AACT,aAAO,wBAAwB,mCAAmC;AAClE,MAAAC,MAAK;AACL,aAAO,EAAE,MAAM,cAAc;AAAA,IACjC,WACS,aAAa,GAAG,GAAG;AACxB,aAAO,gBAAgB,4BAA4B;AACnD,UAAI,SAAS,gBAAgB;AAC7B,aAAO,QAAQ,oBAAoB;AACnC,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IACJ,OACK;AACD,aAAO,KAAK,oBAAoB;AAAA,IACpC;AAAA,EACJ;AACA,WAAS,4BAA4B;AACjC,QAAID,IAAG,GAAG,GAAG;AACT,UAAI,WAAW;AACf,MAAAC,MAAK;AACL,UAAI,CAACD,IAAG,GAAG,GAAG;AACV,eAAO,QAAQ;AACf,eAAO,aAAa;AAAA,MACxB;AACA,MAAAC,MAAK;AACL,UAAI,CAAC,WAAW,GAAG;AACf,eAAO,QAAQ;AACf,eAAO,aAAa;AAAA,MACxB;AACA,aAAO,kBAAkB,6BAA6B;AACtD,aAAO,0BAA0B,oCAAoC;AACrE,UAAI,UAAU,aAAa;AAC3B,cAAQ,YAAY,EAAE,MAAM,oBAAoB;AAChD,aAAO;AAAA,IACX,WACSD,IAAG,GAAG,GAAG;AACd,aAAO,kBAAkB,6BAA6B;AACtD,MAAAC,MAAK;AACL,UAAI,UAAU,aAAa;AAC3B,cAAQ,YAAY,EAAE,MAAM,cAAc;AAC1C,aAAO;AAAA,IACX,WACS,aAAa,GAAG,GAAG;AACxB,UAAI,aAAa,gBAAgB;AACjC,aAAO,YAAY,oBAAoB;AACvC,UAAI,CAACD,IAAG,GAAG,GAAG;AACV,eAAO,gBAAgB,4BAA4B;AACnD,eAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,QACV;AAAA,MACJ;AACA,UAAI,WAAW;AACf,MAAAC,MAAK;AACL,UAAI,CAAC,WAAW,GAAG;AACf,eAAO,QAAQ;AACf,eAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,QACV;AAAA,MACJ;AACA,aAAO,kBAAkB,6BAA6B;AACtD,UAAI,UAAU,aAAa;AAC3B,cAAQ,YAAY,EAAE,MAAM,iBAAiB,MAAM,WAAW;AAC9D,aAAO;AAAA,IACX,OACK;AACD,aAAO,KAAK,oBAAoB;AAAA,IACpC;AAAA,EACJ;AACA,WAAS,UAAU,UAAU;AACzB,QAAIF,KAAIM;AACR,QAAI,aAAa,QAAQ;AAAE,iBAAW;AAAA,IAAO;AAC7C,QAAI,OAAO,EAAE,MAAM,QAAQ,OAAO,CAAC,EAAE;AACrC,QAAI,UAAU;AACV,UAAI,aAAa,oBAAoB,gBAAgB;AACrD,UAAI,YAAY;AACZ,aAAK,aAAa;AAClB,uBAAe;AAAA,MACnB;AAAA,IACJ;AACA,WAAO,MAAM,GAAG;AACZ,UAAI,WAAW,GAAG;AACd,eAAO,KAAK,MAAM,WAAW,GAAG,iCAAiC;AACjE,aAAK,MAAM,KAAK,0BAA0B,CAAC;AAAA,MAC/C,WACSL,IAAG,GAAG,GAAG;AACd,YAAI,WAAW;AACf,QAAAC,MAAK;AACL,YAAI,WAAW,GAAG;AACd,iBAAO,KAAK,MAAM,WAAW,GAAG,iCAAiC;AACjE,iBAAO,QAAQ;AACf,eAAK,MAAM,KAAK,0BAA0B,CAAC;AAAA,QAC/C,OACK;AACD,iBAAO,QAAQ;AACf;AAAA,QACJ;AAAA,MACJ,WACSD,IAAG,GAAG,GAAG;AACd,eAAO,mBAAmB,8BAA8B;AACxD,QAAAC,MAAK;AACL,YAAI,YAAY,gBAAgB;AAChC,eAAO,WAAW,sBAAsB;AACxC,aAAK,MAAM,KAAK,EAAE,MAAM,aAAa,MAAM,UAAU,CAAC;AAAA,MAC1D,WACSD,IAAG,GAAG,GAAG;AACd,eAAO,WAAW,sBAAsB;AACxC,QAAAC,MAAK;AACL,YAAI,SAAS,gBAAgB;AAC7B,eAAO,QAAQ,mBAAmB;AAClC,aAAK,MAAM,KAAK,EAAE,MAAM,MAAM,MAAM,OAAO,CAAC;AAAA,MAChD,WACSD,IAAG,GAAG,GAAG;AACd,eAAO,mBAAmB,6BAA6B;AACvD,aAAK,MAAM,KAAK,eAAe,CAAC;AAAA,MACpC,WACSA,IAAG,GAAG,GAAG;AACd,YAAI,gBAAgB;AACpB,YAAI,kBAAkB;AACtB,QAAAC,MAAK;AACL,YAAID,IAAG,GAAG,GAAG;AACT,iBAAO,uBAAuB,kCAAkC;AAChE,iBAAO,0CAA0C,uDAAuD;AACxG,0BAAgB;AAChB,UAAAC,MAAK;AAAA,QACT;AACA,YAAI,aAAa,gBAAgB;AACjC,eAAO,iBAAiB,YAAY,6BAA6B;AACjE,eAAO,CAAC,iBAAiB,YAAY,+BAA+B;AACpE,eAAO,YAAY,6BAA6B;AAChD,YAAI,CAAC,iBACD,+BACA,OAAO,UAAU,eAAe,KAAK,2BAA2B,UAAU,GAAG;AAAA,QAEjF,OACK;AAED,cAAI,YAAY,oBAAoB,eAAe,UAAU;AAC7D,cAAI,eAAe,2BAA4B,OAAO,YAAY,GAAI;AACtE,cAAI,aAAa,UAAU,SAAS,GAAG;AACnC,4BAAgB,uBAAuB,OAAO,UAAU,KAAK,IAAI,CAAC;AAAA,UACtE;AACA,eAAK,eAAe,GAAG;AAAA,QAC3B;AACA,0BACI,0BACK,iBACI,CAAC,iBACE,4CACA,OAAO,UAAU,eAAe,KAAK,2BAA2B,UAAU;AAC1F,YAAI,iBAAiB;AACjB,cAAI,aAAaF,MAAK,0BAA0B,UAAU,OAAO,QAAQA,QAAO,SAASA,MAAM,+BAA+B;AAC9H,cAAI,gBAAgB;AAAA,YAChB,MAAM;AAAA,YACN,MAAM;AAAA,UACV;AACA,cAAI,WAAW,oBAAoB,YAAY,kBAAkB,SAAS;AAC1E,cAAI,UAAU;AACV,mBAAO,SAAS,SAAS,aAAa,SAAS,SAAS,qBAAqB,+CAA+C;AAC5H,0BAAc,WAAW;AAAA,UAC7B;AACA,eAAK,MAAM,KAAK,aAAa;AAAA,QACjC,OACK;AACD,iBAAO,sBAAsB,iCAAiC;AAC9D,cAAI,aAAaM,MAAK,yBAAyB,UAAU,OAAO,QAAQA,QAAO,SAASA,MAAM,8BAA8B;AAC5H,cAAI,WAAW;AAAA,UAEf,OACK;AAED,gBAAI,YAAY,oBAAoB,cAAc,UAAU;AAC5D,gBAAI,eAAe,0BAA2B,OAAO,YAAY,GAAI;AACrE,gBAAI,aAAa,UAAU,SAAS,GAAG;AACnC,8BAAgB,uBAAuB,OAAO,UAAU,KAAK,IAAI,CAAC;AAAA,YACtE;AACA,iBAAK,eAAe,GAAG;AAAA,UAC3B;AACA,cAAI,WAAW,oBAAoB,YAAY,gBAAgB,SAAS;AACxE,cAAI,cAAc;AAAA,YACd,MAAM;AAAA,YACN,MAAM;AAAA,UACV;AACA,cAAI,UAAU;AACV,wBAAY,WAAW;AAAA,UAC3B;AACA,eAAK,MAAM,KAAK,WAAW;AAAA,QAC/B;AAAA,MACJ,OACK;AACD;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,KAAK,MAAM,WAAW,GAAG;AACzB,UAAI,MAAM,GAAG;AACT,eAAO,KAAK,yCAAyC;AAAA,MACzD,OACK;AACD,eAAO,KAAK,sBAAuB,OAAO,KAAK,UAAW,CAAC;AAAA,MAC/D;AAAA,IACJ;AACA,mBAAe;AACf,QAAI,CAAC,MAAM,KAAK,CAACL,IAAG,GAAG,KAAK,CAACA,IAAG,GAAG,GAAG;AAClC,UAAI,aAAa,oBAAoB,gBAAgB;AACrD,qBAAe;AACf,WAAK,aAAa,UAAU;AAC5B,WAAK,WAAW,aAAa;AAAA,IACjC;AACA,WAAO;AAAA,EACX;AACA,SAAO,SAAU,OAAO;AAEpB,QAAI,OAAO,UAAU,UAAU;AAC3B,YAAM,IAAI,MAAM,GAAG,OAAO,aAAa,wBAAwB,CAAC;AAAA,IACpE;AACA,UAAM;AACN,QAAI,IAAI;AACR,UAAM;AACN,UAAM,IAAI,OAAO,CAAC;AAClB,WAAOI,eAAc;AAAA,EACzB;AACJ;;;AC3vBA,IAAIE,YAAsC,WAAY;AAClD,EAAAA,YAAW,OAAO,UAAU,SAAS,GAAG;AACpC,aAASC,IAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,MAAAA,KAAI,UAAU,CAAC;AACf,eAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC;AAC1D,UAAE,CAAC,IAAIA,GAAE,CAAC;AAAA,IAClB;AACA,WAAO;AAAA,EACX;AACA,SAAOD,UAAS,MAAM,MAAM,SAAS;AACzC;AACA,SAAS,WAAW,MAAM;AACtB,SAAO,SAAU,eAAe,aAAa;AACzC,QAAIE;AACJ,WAAQA,MAAK,CAAC,GACVA,IAAG,aAAa,IAAI,SAAU,OAAO;AAAE,aAAQF,UAAS,EAAE,KAAW,GAAG,KAAK;AAAA,IAAI,GACjFE,IAAG,WAAW,IAAI,SAAU,QAAQ;AAChC,aAAO,OAAO,WAAW,YAAY,WAAW,QAAQ,OAAO,SAAS;AAAA,IAC5E,GACAA;AAAA,EACR;AACJ;AAmCO,IAAI,MAAMF,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAASA,UAAS,CAAC,GAAG,WAAW,UAAU,EAAE,YAAY,YAAY,CAAC,GAAG,WAAW,MAAM,EAAE,QAAQ,QAAQ,CAAC,GAAG,WAAW,SAAS,EAAE,WAAW,WAAW,CAAC,GAAG,WAAW,IAAI,EAAE,MAAM,MAAM,CAAC,GAAG,WAAW,WAAW,EAAE,aAAa,aAAa,CAAC,GAAG,WAAW,aAAa,EAAE,eAAe,eAAe,CAAC,GAAG,WAAW,eAAe,EAAE,iBAAiB,iBAAiB,CAAC,GAAG,WAAW,mBAAmB,EAAE,qBAAqB,qBAAqB,CAAC,GAAG,WAAW,aAAa,EAAE,eAAe,eAAe,CAAC,GAAG,WAAW,WAAW,EAAE,aAAa,aAAa,CAAC,GAAG,WAAW,aAAa,EAAE,eAAe,eAAe,CAAC,GAAG,WAAW,eAAe,EAAE,iBAAiB,iBAAiB,CAAC,GAAG,WAAW,QAAQ,EAAE,UAAU,UAAU,CAAC,GAAG,WAAW,SAAS,EAAE,WAAW,WAAW,CAAC,GAAG,WAAW,mBAAmB,EAAE,qBAAqB,qBAAqB,CAAC,GAAG,WAAW,cAAc,EAAE,gBAAgB,gBAAgB,CAAC;;;AClDziC,IAAM,mBAAmB,aAAa,EAAC,QAAQ,cAAa,CAAC;AAMtD,SAASG,OAAM,UAAU;AAC9B,MAAI,OAAO,aAAa,UAAU;AAChC,UAAM,IAAI,UAAU,yCAAyC,WAAW,GAAG;AAAA,EAC7E;AAEA,SAAO,iBAAiB,QAAQ;AAClC;;;ACAO,SAAS,UAAU,OAAO;AAG/B,MAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACvC,gBAAY,iBAAiB;AAAA,EAC/B;AACF;AAMO,SAAS,OAAO,MAAM;AAC3B,YAAU,IAAI;AACd,SAAO,MAAM,QAAQ,KAAK,QAAQ;AACpC;;;ACfO,SAAS,UAAU,OAAO,MAAM;AACrC,YAAU,IAAI;AACd,QAAM,QAAQ,KAAK,MAAM,IAAI;AAG7B,MAAI,CAAC,MAAM,OAAO;AAChB,WAAO,UAAU,QAAQ,UAAU;AAAA,EACrC;AAEA,KAAO,MAAM,MAAM,SAAS,UAAU,uBAAuB;AAC7D,MAAI,MAAM,MAAM,MAAM;AACtB,MAAI,SAAS,UAAU,QAAQ,UAAU,SAAY,SAAY,OAAO,KAAK;AAG7E,MAAI,MAAM,4BAA4B,KAAK;AACzC,UAAM,IAAI,YAAY;AAEtB,QAAI,QAAQ;AACV,eAAS,OAAO,YAAY;AAAA,IAC9B;AAAA,EACF;AAEA,MAAI,UAAU,QAAW;AACvB,YAAQ,MAAM,UAAU;AAAA,MAEtB,KAAK,KAAK;AACR,eAAO,OAAO,WAAW,YAAY,QAAQ;AAAA,MAC/C;AAAA,MAGA,KAAK,MAAM;AACT,eAAO,OAAO,UAAU,YAAY,MAAM,MAAM,CAAC,IAAI,MAAM,MAAM;AAAA,MACnE;AAAA,MAGA,KAAK,MAAM;AACT,eAAO,OAAO,UAAU,YAAY,MAAM,SAAS,GAAG;AAAA,MACxD;AAAA,MAGA,KAAK,MAAM;AACT,eAAO,OAAO,UAAU,YAAY,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM;AAAA,MACvE;AAAA,MAGA,KAAK,MAAM;AAET,eAAQ,MAAM,QAAQ,KAAK,KAAK,MAAM,SAAS,GAAG,KAAM,WAAW;AAAA,MACrE;AAAA,IAGF;AAAA,EACF;AAEA,SAAO;AACT;;;ACtEA,IAAM,aAAa,oBAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC;AAC9C,IAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,IAAM,OAAO,IAAI,WAAW,CAAC;AASvB,SAAUC,OAAM,SAAe;AACjC,YAAU,QAAQ,KAAI,EAAG,YAAW;AAEpC,MAAI,YAAY,QAAQ;AACpB,WAAO,CAAC,GAAG,CAAC;aACL,YAAY,OAAO;AAC1B,WAAO,CAAC,GAAG,CAAC;;AAKhB,MAAI,MAAM;AAEV,MAAI,IAAI;AACR,MAAI,OAAO,SAAQ;AACnB,MAAIC,UAAS,WAAU;AAEvB,MAAI,MAAM,QAAQ,UAAU,QAAQ,OAAO,GAAG,MAAM,KAAK;AACrD;AACA,QAAI,QAAQA,YAAM,QAANA,YAAM,SAANA,UAAU;AAEtB,mBAAc;AAEd,QAAI,MAAM,QAAQ,QAAQ;AACtB,aAAO,SAAQ;AACf,qBAAc;AACd,MAAAA,UAAS,WAAU;WAChB;AACH,aAAOA,UAAS;;;AAKxB,MAAIA,YAAW,QAAQ,MAAM,QAAQ,QAAQ;AACzC,UAAM,IAAI,MAAM,kCAAkC,OAAO,IAAI;;AAGjE,SAAO,CAAC,GAAG,OAAOA,OAAM;AAExB,WAAS,WAAQ;AACb,QAAI,QAAQ,OAAO,GAAG,MAAM,KAAK;AAC7B;AACA,aAAO;;AAGX,QAAI,QAAQ,OAAO,GAAG,MAAM,KAAK;AAC7B;;AAGJ,WAAO;EACX;AAEA,WAAS,aAAU;AACf,UAAM,QAAQ;AACd,QAAI,QAAQ;AAEZ,WACI,MAAM,QAAQ,UACd,QAAQ,WAAW,GAAG,KAAK,QAC3B,QAAQ,WAAW,GAAG,KAAK,MAC7B;AACE,cAAQ,QAAQ,MAAM,QAAQ,WAAW,GAAG,IAAI;AAChD;;AAIJ,WAAO,QAAQ,QAAQ,OAAO;EAClC;AAEA,WAAS,iBAAc;AACnB,WACI,MAAM,QAAQ,UACd,WAAW,IAAI,QAAQ,WAAW,GAAG,CAAC,GACxC;AACE;;EAER;AACJ;;;AC3FA,sBAAqB;AAsBf,SAAU,QACZ,QAA8B;AAE9B,QAAM,IAAI,OAAO,CAAC;AAElB,QAAM,IAAI,OAAO,CAAC,IAAI;AAStB,MAAI,IAAI,KAAK,KAAK;AAAG,WAAO,gBAAAC,QAAS;AAGrC,MAAI,MAAM;AAAI,WAAO,CAAC,UAAU,SAAS;AACzC,MAAI,MAAM;AAAG,WAAO,CAAC,UAAU,UAAU;AAEzC,MAAI,MAAM;AAAG,WAAO,IAAI,IAAI,gBAAAA,QAAS,WAAW,CAAC,UAAU,SAAS;AAOpE,QAAM,OAAO,KAAK,IAAI,CAAC;AAEvB,QAAM,QAAS,IAAI,OAAQ,QAAQ;AAEnC,SAAO,IAAI,IACL,CAAC,UAAU,SAAS,KAAK,QAAQ,SAAS,OAC1C,CAAC,UAAU,SAAS,KAAK,QAAQ,SAAS;AACpD;;;AC5Bc,SAAP,SAA0B,SAAe;AAC5C,SAAO,QAAQC,OAAM,OAAO,CAAC;AACjC;;;ACfA,IAAMC,YAAW,SAAgB,WAAW;AAGrC,IAAM,SAAS,OAAO,QAAQ;AAAA;AAAA,EAEnC,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU;AAAA,IACR;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB;AAAA,IACA,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB;AAAA,IACA,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,EACF;AACF,CAAC;AASD,SAAS,MAAM,IAAI,MAAM;AACvB,SAAO,OAAO,IAAI,IAAI,KAAK,SAAS,WAAW,IAAI,EAAE,WAAW;AAClE;AAYA,SAAS,WAAW,OAAO,IAAI,IAAI,IAAI,OAAO;AAC5C,aAAW,OAAO,KAAK;AACvB,SAAO,MAAM,cAAc;AAC7B;AAYA,SAAS,YAAY,OAAO,IAAI,IAAI,IAAI,OAAO;AAC7C,aAAW,OAAO,KAAK;AACvB,SAAO,MAAM,cAAc;AAC7B;AAUA,SAAS,IAAI,OAAO,MAAM,IAAI,IAAI,OAAO;AACvC,QAAM,WAAW,MAAM;AAGvB,MAAI,CAAC,YAAY,SAAS,SAAS,YAAY;AAC7C,gBAAY,sBAAsB;AAAA,EACpC;AAEA,QAAM,WAAW,EAAC,MAAM,QAAQ,UAAU,OAAO,IAAI,IAAI,KAAK,WAAW,CAAC,EAAC;AAE3E,QAAM,aAAa;AAAA,IACjB,GAAG;AAAA;AAAA,IAEH,OAAO;AAAA;AAAA,IAEP,SAAS;AAAA;AAAA,IAET,KAAK;AAAA,IACL,YAAY,CAAC,IAAI;AAAA,IACjB,SAAS,CAAC;AAAA,IACV,WAAW;AAAA,EACb;AAEA,OAAK,YAAY,QAAQ;AAEzB,SAAO,WAAW,QAAQ,SAAS;AACrC;AAYA,SAAS,UAAU,OAAO,IAAI,IAAI,IAAI,OAAO;AAC3C,aAAW,OAAO,KAAK;AACvB,SACE,OAAO,MAAM,cAAc,YAC3B,MAAM,cAAc,MAAM,YAAY;AAE1C;AAYA,SAAS,WAAW,OAAO,IAAI,IAAI,IAAI,OAAO;AAC5C,aAAW,OAAO,KAAK;AACvB,SACE,OAAO,MAAM,cAAc,YAC3B,MAAM,cAAc,MAAM,YAAY;AAE1C;AAYA,SAAS,GAAG,OAAO,MAAM,IAAI,IAAI,OAAO;AACtC,QAAM,WAAW,MAAM;AAGvB,MAAI,CAAC,YAAY,SAAS,SAAS,YAAY;AAC7C,gBAAY,qBAAqB;AAAA,EACnC;AAGA,QAAM,aAAa;AAAA,IACjB,GAAG;AAAA;AAAA,IAEH,OAAO;AAAA;AAAA,IAEP,SAAS;AAAA;AAAA,IAET,KAAK;AAAA,IACL,YAAY,CAAC,IAAI;AAAA,IACjB,SAAS,CAAC;AAAA,IACV,WAAW;AAAA,EACb;AAEA,OAAK,YAAY,IAAI;AAErB,SAAO,WAAW,QAAQ,CAAC,MAAM;AACnC;AAYA,SAAS,IAAI,OAAO,MAAM,OAAOC,SAAQ,OAAO;AAC9C,SAAO,CAAC,GAAG,OAAO,MAAM,OAAOA,SAAQ,KAAK;AAC9C;AAYA,SAAS,SAAS,OAAO,IAAI,IAAI,IAAI,OAAO;AAC1C,QAAM,KAAK,kBAAkB,KAAK;AAClC,aAAW,OAAO,KAAK;AACvB,SAAO,OAAO,MAAM,cAAc,YAAY,GAAG,MAAM,SAAS;AAClE;AAYA,SAAS,aAAa,OAAO,IAAI,IAAI,IAAI,OAAO;AAC9C,QAAM,KAAK,kBAAkB,KAAK;AAClC,aAAW,OAAO,KAAK;AACvB,SACE,OAAO,MAAM,cAAc,YAC3B,OAAO,MAAM,cAAc,YAC3B,GAAG,MAAM,YAAY,MAAM,YAAY,CAAC;AAE5C;AAYA,SAAS,cAAc,OAAO,IAAI,IAAI,IAAI,OAAO;AAC/C,QAAM,KAAK,kBAAkB,KAAK;AAClC,aAAW,OAAO,KAAK;AACvB,SACE,OAAO,MAAM,cAAc,YAC3B,OAAO,MAAM,cAAc,YAC3B,GAAG,MAAM,YAAY,IAAI,MAAM,SAAS;AAE5C;AAYA,SAAS,UAAU,OAAO,IAAI,IAAI,IAAI,OAAO;AAC3C,QAAM,KAAK,kBAAkB,KAAK;AAClC,aAAW,OAAO,KAAK;AACvB,SAAO,OAAO,MAAM,cAAc,YAAY,GAAG,MAAM,SAAS;AAClE;AAYA,SAAS,UAAU,OAAO,IAAI,IAAI,IAAI,OAAO;AAC3C,aAAW,OAAO,KAAK;AACvB,SAAO,MAAM,cAAc;AAC7B;AAYA,SAAS,WAAW,OAAO,IAAI,IAAI,IAAI,OAAO;AAC5C,aAAW,OAAO,KAAK;AACvB,SAAO,MAAM,cAAc;AAC7B;AAWA,SAAS,KAAK,IAAI,MAAM,IAAIA,SAAQ;AAClC,SAAO,QAAQ,CAACA;AAClB;AAYA,SAAS,MAAM,IAAI,MAAM,IAAI,IAAI,OAAO;AACtC,SAAO,QAAQ,MAAM,WAAW,SAAS,IAAI;AAC/C;AAIA,SAAS,gBAAgB;AACvB,QAAM,IAAI,MAAM,yBAAyB;AAC3C;AAMA,SAAS,cAAc,OAAO;AAC5B,QAAM,IAAI,MAAM,8BAA8B,MAAM,OAAO,GAAG;AAChE;AAMA,SAAS,WAAW,OAAO,OAAO;AAChC,MAAI,MAAM,SAAS;AACjB,UAAM,IAAI,MAAM,kBAAkB,MAAM,OAAO,kBAAkB;AAAA,EACnE;AACF;AAMA,SAAS,kBAAkB,OAAO;AAGhC,MAAI,KAAK,MAAM;AAEf,MAAI,CAAC,IAAI;AACP,UAAM,QAAQ,MAAM;AACpB,OAAO,OAAO,qBAAqB;AAEnC,QAAI,MAAM,SAAS,WAAW;AAC5B,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,SAAKD,UAAS,MAAM,IAAI,OAAO,MAAM,CAAC;AAEtC,UAAM,YAAY;AAAA,EACpB;AAEA,SAAO;AACT;;;AC/WO,SAAS,KAAK,OAAO,MAAM,OAAOE,SAAQ,OAAO;AACtD,aAAW,QAAQ,MAAM,OAAO;AAE9B,QAAI,KAAK,SAAS,aAAa;AAC7B,UAAI,CAAC,UAAU,MAAM,IAAI,EAAG,QAAO;AAAA,IACrC,WAAW,KAAK,SAAS,MAAM;AAC7B,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC,WAAW,KAAK,SAAS,aAAa;AACpC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C,WAAW,KAAK,SAAS,eAAe;AACtC,UAAI,CAAC,OAAO,MAAM,MAAM,OAAOA,SAAQ,KAAK,EAAG,QAAO;AAAA,IACxD,WAAW,KAAK,SAAS,iBAAiB;AACxC,YAAM,IAAI,MAAM,0BAA0B,KAAK,OAAO,GAAG;AAAA,IAC3D,WAAW,KAAK,SAAS,WAAW;AAClC,UAAI,KAAK,SAAS,KAAK,KAAM,QAAO;AAAA,IACtC,OAAO;AAAA,IAEP;AAAA,EACF;AAEA,SAAO;AACT;;;ACVA,IAAMC,SAAQ,CAAC;AAQR,SAAS,KAAK,OAAO,MAAM;AAChC,MAAI,MAAM;AACR,IAAAC,KAAI,OAAO,CAAC,GAAG,MAAM,QAAW,QAAW,IAAI;AAAA,EACjD;AACF;AAaA,SAASA,KAAI,OAAO,cAAc,MAAM,OAAO,YAAY,MAAM;AAE/D,MAAI,aAAa;AAAA,IACf,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,EAClB;AAEA,MAAI,YAAY,MAAM,UAAU;AAKhC,MAAI,cAAc,eAAe,MAAM;AACrC,gBAAY,MAAM,UAAU,MAAM;AAAA,MAChC,CAAC,MACC,EAAE,eAAe,UAChB,EAAE,eAAe,OAAO,eAAe;AAAA,IAC5C;AAAA,EACF;AAEA,eAAa;AAAA,IACX;AAAA;AAAA,IAEA,QAAQ,cAAc,SAAS;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAIA,MAAI,OAAO,IAAI,KAAK,CAAC,MAAM,WAAW,EAAE,MAAM,OAAO,MAAM,QAAQ;AACjE,IAAAC,KAAI,OAAO,YAAY,MAAM,IAAI;AAAA,EACnC;AAEA,SAAO;AACT;AAWA,SAASA,KAAI,OAAO,MAAM,MAAM,MAAM;AACpC,QAAM,aAAa,QAAQ,KAAK,YAAY,KAAK,WAAW;AAE5D,MAAI;AACJ,MAAI,QAAQ;AAKZ,QAAM,QAAQ,EAAC,OAAO,GAAG,OAAO,oBAAI,IAAI,EAAC;AAKzC,QAAM,SAAS,EAAC,OAAO,GAAG,OAAO,oBAAI,IAAI,EAAC;AAE1C,SAAO,EAAE,QAAQ,KAAK,SAAS,QAAQ;AACrC,UAAM,OAAO,KAAK,SAAS,KAAK,CAAC;AAAA,EACnC;AAEA,UAAQ;AAER,SAAO,EAAE,QAAQ,KAAK,SAAS,QAAQ;AACrC,UAAM,QAAQ,KAAK,SAAS,KAAK;AAEjC,UAAM,OAAO,MAAM,KAAK,YAAY;AAEpC,UAAM,YAAY,OAAO;AACzB,UAAM,YAAY,OAAO,MAAM,IAAI,IAAI,KAAK;AAE5C,UAAM,YAAY,MAAM;AACxB,UAAM,YAAY,MAAM,MAAM,IAAI,IAAI;AAGtC,UAAM,aAAa,QAAQ,YAAY,WAAW;AAClD,UAAMC,QAAOF,KAAI,OAAO,YAAY,KAAK,SAAS,KAAK,GAAG,OAAO,MAAM,IAAI;AAC3E,kBAAc,QAAQE,MAAK,gBAAgBA,MAAK,eAAe;AAG/D,QAAI,MAAM,OAAO,MAAM,OAAO;AAC5B;AAAA,IACF;AAEA,UAAM,QAAQ,KAAK,SAAS,KAAK,CAAC;AAAA,EACpC;AACF;AAkBA,SAAS,eAAe,OAAO,OAAO,MAAM,OAAOC,SAAQ;AAEzD,QAAM,aAAa;AAAA,IACjB,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,EAClB;AACA,MAAI,gBAAgB;AAEpB,SAAO,EAAE,gBAAgB,MAAM,QAAQ;AACrC,UAAM,OAAO,MAAM,aAAa;AAGhC,QAAI,MAAM,OAAO,MAAM,OAAO;AAC5B;AAAA,IACF;AAKA,QAAI,MAAM,WAAW,KAAK,YAAY;AACpC,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AAGA,QAAI,KAAK,MAAM,MAAM,OAAOA,SAAQ,KAAK,GAAG;AAC1C,YAAM,OAAO,KAAK;AAGlB,UAAI,MAAM;AAER,cAAM,QACJ,KAAK,eAAe,MAChB,oBACA,KAAK,eAAe,MACpB,mBACA,KAAK,eAAe,MACpB,gBACA;AACN,YAAI,YAAY,OAAO,IAAI;AAAA,MAC7B,OAAO;AAEL,cAAM,QAAQ;AAEd,YAAI,CAAC,MAAM,QAAQ,SAAS,IAAI,GAAG;AACjC,gBAAM,QAAQ,KAAK,IAAI;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAGA,QAAI,KAAK,eAAe,QAAW;AACjC,UAAI,YAAY,cAAc,IAAI;AAAA,IACpC,WAES,KAAK,eAAe,KAAK;AAChC,UAAI,YAAY,kBAAkB,IAAI;AAAA,IACxC;AAAA,EAEF;AAEA,SAAO;AACT;AAWA,SAAS,QAAQ,MAAM,OAAO;AAC5B,SAAO,QAAQ,SAAS,KAAK,SAAS,KAAK,MAAM,SAAS,IACtD,CAAC,GAAG,MAAM,GAAG,KAAK,IAClB,QAAQ,KAAK,SAAS,IACtB,OACA,SAAS,MAAM,SAAS,IACxB,QACAJ;AACN;AASA,SAAS,IAAI,MAAM,OAAO,MAAM;AAC9B,QAAM,OAAO,KAAK,KAAK;AACvB,MAAI,MAAM;AACR,SAAK,KAAK,IAAI;AAAA,EAChB,OAAO;AACL,SAAK,KAAK,IAAI,CAAC,IAAI;AAAA,EACrB;AACF;AAYA,SAAS,MAAM,QAAQ,MAAM;AAG3B,QAAM,OAAO,KAAK,KAAK,YAAY;AACnC,QAAMK,UAAS,OAAO,MAAM,IAAI,IAAI,KAAK,KAAK;AAC9C,SAAO;AACP,SAAO,MAAM,IAAI,MAAMA,MAAK;AAC9B;;;ACvOO,SAAS,OAAO,UAAU,MAAM;AACrC,QAAM,QAAQ,YAAY,UAAU,IAAI;AACxC,QAAM,MAAM;AACZ,OAAK,OAAO,QAAQ,MAAS;AAC7B,SAAO,MAAM,QAAQ,CAAC;AACxB;AA8BA,SAAS,YAAY,UAAU,MAAM;AACnC,SAAO;AAAA;AAAA,IAEL,WAAWC,OAAM,QAAQ;AAAA,IACzB,SAAS,CAAC;AAAA,IACV,YAAY,OACR,OAAO,IAAI;AAAA,KAEV,KAAK,SAAS,cAAc,KAAK,SAAS,UACzC,KAAK,WACL,CAAC,IAAI,IACP,CAAC;AAAA,IACL,KAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA;AAAA,IAEP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,EACb;AACF;;;AC5GO,SAAS,gBAAgB,MAAM,WAAW;AAC7C,MAAI,CAAC,KAAK;AACN,SAAK,aAAa,CAAC;AACvB,MAAI,CAAC,KAAK,WAAW;AACjB,SAAK,WAAW,YAAY,CAAC;AACjC,MAAI,OAAO,KAAK,WAAW,cAAc;AACrC,SAAK,WAAW,YAAY,CAAC,KAAK,WAAW,SAAS;AAC1D,MAAI,OAAO,KAAK,WAAW,cAAc;AACrC,SAAK,WAAW,YAAY,CAAC,KAAK,WAAW,SAAS;AAC1D,MAAI,OAAO,KAAK,WAAW,cAAc;AACrC,SAAK,WAAW,YAAY,CAAC;AACjC,OAAK,WAAW,UAAU,KAAK,SAAS;AAC5C;;;ACZO,SAAS,QAAQ,MAAM;AAA9B,MAAAC,KAAA;AACI,QAAM,SAAO,MAAAA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAjB,mBAA6B,OAAM;AAChD,SAAO,KAAK,QAAQ,cAAc,EAAE;AACxC;;;ACGO,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlB,YAAY,UAAU,QAAQ,OAAO;AACnC,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,QAAI,OAAO;AACT,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AACF;AAGA,OAAO,UAAU,WAAW,CAAC;AAE7B,OAAO,UAAU,SAAS,CAAC;AAE3B,OAAO,UAAU,QAAQ;;;ACflB,SAAS,MAAM,aAAa,OAAO;AAExC,QAAM,WAAW,CAAC;AAElB,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,YAAY,QAAQ;AACnC,WAAO,OAAO,UAAU,YAAY,KAAK,EAAE,QAAQ;AACnD,WAAO,OAAO,QAAQ,YAAY,KAAK,EAAE,MAAM;AAAA,EACjD;AAEA,SAAO,IAAI,OAAO,UAAU,QAAQ,KAAK;AAC3C;;;ACrBO,SAASC,WAAU,OAAO;AAC/B,SAAO,MAAM,YAAY;AAC3B;;;ACNO,IAAM,OAAN,MAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,YAAY,UAAUC,YAAW;AAE/B,SAAK,WAAW;AAEhB,SAAK,YAAYA;AAAA,EACnB;AACF;AAGA,KAAK,UAAU,QAAQ;AACvB,KAAK,UAAU,UAAU;AACzB,KAAK,UAAU,aAAa;AAC5B,KAAK,UAAU,oBAAoB;AACnC,KAAK,UAAU,SAAS;AACxB,KAAK,UAAU,iBAAiB;AAChC,KAAK,UAAU,iBAAiB;AAChC,KAAK,UAAU,wBAAwB;AACvC,KAAK,UAAU,kBAAkB;AACjC,KAAK,UAAU,UAAU;;;ACxBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,SAAS;AAEN,IAAM,UAAU,UAAU;AAC1B,IAAM,aAAa,UAAU;AAC7B,IAAM,oBAAoB,UAAU;AACpC,IAAM,SAAS,UAAU;AACzB,IAAM,iBAAiB,UAAU;AACjC,IAAM,iBAAiB,UAAU;AACjC,IAAM,wBAAwB,UAAU;AAE/C,SAAS,YAAY;AACnB,SAAO,KAAK,EAAE;AAChB;;;ACPA,IAAM,SAAS,OAAO,KAAK,aAAK;AAEzB,IAAM,cAAN,cAA0B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,YAAY,UAAUC,YAAW,MAAM,OAAO;AAC5C,QAAI,QAAQ;AAEZ,UAAM,UAAUA,UAAS;AAEzB,SAAK,MAAM,SAAS,KAAK;AAEzB,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,cAAM,QAAQ,OAAO,KAAK;AAC1B,aAAK,MAAM,OAAO,KAAK,IAAI,OAAO,cAAM,KAAK,OAAO,cAAM,KAAK,CAAC;AAAA,MAClE;AAAA,IACF;AAAA,EACF;AACF;AAEA,YAAY,UAAU,UAAU;AAOhC,SAAS,KAAK,QAAQ,KAAK,OAAO;AAChC,MAAI,OAAO;AAET,WAAO,GAAG,IAAI;AAAA,EAChB;AACF;;;ACzBA,IAAMC,OAAM,CAAC,EAAE;AAMR,SAAS,OAAO,YAAY;AAEjC,QAAM,WAAW,CAAC;AAElB,QAAM,SAAS,CAAC;AAEhB,MAAI;AAEJ,OAAK,QAAQ,WAAW,YAAY;AAClC,QAAIA,KAAI,KAAK,WAAW,YAAY,IAAI,GAAG;AACzC,YAAM,QAAQ,WAAW,WAAW,IAAI;AACxC,YAAM,OAAO,IAAI;AAAA,QACf;AAAA,QACA,WAAW,UAAU,WAAW,cAAc,CAAC,GAAG,IAAI;AAAA,QACtD;AAAA,QACA,WAAW;AAAA,MACb;AAEA,UACE,WAAW,mBACX,WAAW,gBAAgB,SAAS,IAAI,GACxC;AACA,aAAK,kBAAkB;AAAA,MACzB;AAEA,eAAS,IAAI,IAAI;AAEjB,aAAOC,WAAU,IAAI,CAAC,IAAI;AAC1B,aAAOA,WAAU,KAAK,SAAS,CAAC,IAAI;AAAA,IACtC;AAAA,EACF;AAEA,SAAO,IAAI,OAAO,UAAU,QAAQ,WAAW,KAAK;AACtD;;;ACvDO,IAAM,QAAQ,OAAO;AAAA,EAC1B,OAAO;AAAA,EACP,UAAU,GAAG,MAAM;AACjB,WAAO,WAAW,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EAC9C;AAAA,EACA,YAAY;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACF,CAAC;;;ACdM,IAAM,MAAM,OAAO;AAAA,EACxB,OAAO;AAAA,EACP,UAAU,GAAG,MAAM;AACjB,WAAO,SAAS,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EAC5C;AAAA,EACA,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;AAC3D,CAAC;;;ACHM,SAAS,uBAAuB,YAAYC,YAAW;AAC5D,SAAOA,cAAa,aAAa,WAAWA,UAAS,IAAIA;AAC3D;;;ACAO,SAAS,yBAAyB,YAAY,UAAU;AAC7D,SAAO,uBAAuB,YAAY,SAAS,YAAY,CAAC;AAClE;;;ACNO,IAAM,QAAQ,OAAO;AAAA,EAC1B,OAAO;AAAA,EACP,YAAY,EAAC,YAAY,cAAa;AAAA,EACtC,WAAW;AAAA,EACX,YAAY,EAAC,OAAO,MAAM,YAAY,KAAI;AAC5C,CAAC;;;ACLM,IAAM,OAAO,OAAO;AAAA,EACzB,UAAU,GAAG,MAAM;AACjB,WAAO,SAAS,SAAS,OAAO,UAAU,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EACtE;AAAA,EACA,YAAY;AAAA,IACV,sBAAsB;AAAA,IACtB,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,EACR;AACF,CAAC;;;AC/CM,IAAMC,QAAO,OAAO;AAAA,EACzB,OAAO;AAAA,EACP,YAAY;AAAA,IACV,eAAe;AAAA,IACf,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AAAA,EACA,WAAW;AAAA,EACX,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;AAAA,EAC5D,YAAY;AAAA;AAAA,IAEV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,KAAK;AAAA,IACL,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,cAAc;AAAA,IACd,QAAQ,SAAS;AAAA,IACjB,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,SAAS;AAAA,IACT,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IACN,KAAK;AAAA,IACL,UAAU;AAAA,IACV,KAAK;AAAA,IACL,WAAW;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA,IACb,2BAA2B;AAAA,IAC3B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,KAAK;AAAA,IACL,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,0BAA0B;AAAA,IAC1B,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,MAAM;AAAA,IACN,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,IACN,oBAAoB;AAAA;AAAA;AAAA,IAIpB,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,YAAY;AAAA;AAAA,IACZ,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,aAAa;AAAA;AAAA,IACb,cAAc;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,aAAa;AAAA;AAAA,IACb,MAAM;AAAA;AAAA,IACN,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,UAAU;AAAA;AAAA,IACV,OAAO;AAAA;AAAA,IACP,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,OAAO;AAAA;AAAA,IACP,aAAa;AAAA;AAAA,IACb,QAAQ;AAAA;AAAA,IACR,YAAY;AAAA;AAAA,IACZ,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,cAAc;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,KAAK;AAAA;AAAA,IACL,aAAa;AAAA;AAAA,IACb,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA,IACR,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,WAAW;AAAA;AAAA,IACX,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA;AAAA,IAGR,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,yBAAyB;AAAA,IACzB,uBAAuB;AAAA,IACvB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,EAChB;AACF,CAAC;;;ACvTM,IAAMC,OAAM,OAAO;AAAA,EACxB,OAAO;AAAA,EACP,YAAY;AAAA,IACV,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA;AAAA,IAET,eAAe;AAAA,IACf,eAAe;AAAA,EACjB;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AAAA,IACV,OAAO;AAAA,IACP,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,eAAe;AAAA,IACf,SAAS;AAAA,IACT,WAAW;AAAA,IACX,eAAe;AAAA,IACf,eAAe;AAAA,IACf,aAAa;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,eAAe;AAAA,IACf,UAAU;AAAA,IACV,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,UAAU;AAAA,IACV,eAAe;AAAA,IACf,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,IACL,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,2BAA2B;AAAA,IAC3B,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,SAAS;AAAA,IACT,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,IAAI;AAAA,IACJ,aAAa;AAAA,IACb,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,WAAW;AAAA,IACX,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA;AAAA,IACX,YAAY;AAAA;AAAA,IACZ,UAAU;AAAA;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,KAAK;AAAA,IACL,OAAO;AAAA,IACP,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,qBAAqB;AAAA,IACrB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,IACL,KAAK;AAAA,IACL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,OAAO;AAAA,IACP,cAAc;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,sBAAsB;AAAA,IACtB,gBAAgB;AAAA,IAChB,UAAU;AAAA,IACV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,OAAO;AAAA,IACP,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,cAAc;AAAA,IACd,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,aAAa;AAAA,IACb,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,GAAG;AAAA,IACH,YAAY;AAAA,EACd;AACF,CAAC;;;AC9iBD,IAAM,QAAQ;AACd,IAAM,OAAO;AACb,IAAM,MAAM;AAOL,SAASC,MAAK,QAAQ,OAAO;AAClC,QAAM,SAASC,WAAU,KAAK;AAC9B,MAAI,OAAO;AACX,MAAI,OAAO;AAEX,MAAI,UAAU,OAAO,QAAQ;AAC3B,WAAO,OAAO,SAAS,OAAO,OAAO,MAAM,CAAC;AAAA,EAC9C;AAEA,MAAI,OAAO,SAAS,KAAK,OAAO,MAAM,GAAG,CAAC,MAAM,UAAU,MAAM,KAAK,KAAK,GAAG;AAE3E,QAAI,MAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAM,OAAO,MAAM,MAAM,CAAC,EAAE,QAAQ,MAAMC,UAAS;AACnD,aAAO,SAAS,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC;AAAA,IAC7D,OAAO;AAEL,YAAM,OAAO,MAAM,MAAM,CAAC;AAE1B,UAAI,CAAC,KAAK,KAAK,IAAI,GAAG;AACpB,YAAI,SAAS,KAAK,QAAQ,KAAK,KAAK;AAEpC,YAAI,OAAO,OAAO,CAAC,MAAM,KAAK;AAC5B,mBAAS,MAAM;AAAA,QACjB;AAEA,gBAAQ,SAAS;AAAA,MACnB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,IAAI,KAAK,MAAM,KAAK;AAC7B;AAMA,SAAS,MAAM,IAAI;AACjB,SAAO,MAAM,GAAG,YAAY;AAC9B;AAMA,SAASA,WAAU,IAAI;AACrB,SAAO,GAAG,OAAO,CAAC,EAAE,YAAY;AAClC;;;ACnDO,IAAMC,QAAO,MAAM,CAAC,KAAK,OAAO,OAAO,MAAMA,KAAQ,GAAG,MAAM;AAC9D,IAAMC,OAAM,MAAM,CAAC,KAAK,OAAO,OAAO,MAAMA,IAAO,GAAG,KAAK;;;ACyBlE,IAAM,cAAc,oBAAI,IAAI,CAAC,UAAU,QAAQ,SAAS,QAAQ,CAAC;AAEjE,IAAMC,OAAM,CAAC,EAAE;AAYR,SAASC,SAAQ,QAAQ,gBAAgB,eAAe;AAC7D,QAAM,SAAS,iBAAiBC,iBAAgB,aAAa;AA8B7D,WAASC,GAAE,UAAU,eAAe,UAAU;AAC5C,QAAI,QAAQ;AAEZ,QAAI;AAEJ,QAAI,aAAa,UAAa,aAAa,MAAM;AAC/C,aAAO,EAAC,MAAM,QAAQ,UAAU,CAAC,EAAC;AAElC,YAAM;AAAA;AAAA,QAA8B;AAAA;AACpC,eAAS,QAAQ,KAAK;AAAA,IACxB,OAAO;AACL,aAAO,cAAc,UAAU,cAAc;AAE7C,WAAK,UAAU,KAAK,QAAQ,YAAY;AACxC,UAAI,UAAUH,KAAI,KAAK,QAAQ,KAAK,OAAO,GAAG;AAC5C,aAAK,UAAU,OAAO,KAAK,OAAO;AAAA,MACpC;AAGA,UAAI,aAAa,YAAY,KAAK,OAAO,GAAG;AAE1C,YAAI;AAEJ,aAAK,OAAO,YAAY;AACtB,cAAIA,KAAI,KAAK,YAAY,GAAG,GAAG;AAC7B,YAAAI,aAAY,QAAQ,KAAK,YAAY,KAAK,WAAW,GAAG,CAAC;AAAA,UAC3D;AAAA,QACF;AAAA,MACF,OAAO;AACL,iBAAS,QAAQ,UAAU;AAAA,MAC7B;AAAA,IACF;AAGA,WAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,MAAAC,UAAS,KAAK,UAAU,SAAS,KAAK,CAAC;AAAA,IACzC;AAEA,QAAI,KAAK,SAAS,aAAa,KAAK,YAAY,YAAY;AAC1D,WAAK,UAAU,EAAC,MAAM,QAAQ,UAAU,KAAK,SAAQ;AACrD,WAAK,WAAW,CAAC;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAEA,SAAOF;AACT;AAYA,SAAS,aAAa,OAAO,MAAM;AACjC,MACE,UAAU,QACV,UAAU,UACV,OAAO,UAAU,YACjB,MAAM,QAAQ,KAAK,GACnB;AACA,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,WAAW,CAAC,MAAM,QAAQ,OAAO,MAAM,SAAS,UAAU;AACrE,WAAO;AAAA,EACT;AAEA,MAAI,cAAc,SAAS,MAAM,QAAQ,MAAM,QAAQ,GAAG;AACxD,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,UAAU;AACrB,WAAO,YAAY,IAAI,MAAM,KAAK,YAAY,CAAC;AAAA,EACjD;AAEA,SAAO,EAAE,WAAW;AACtB;AAcA,SAASC,aAAY,QAAQ,YAAY,KAAK,OAAO;AACnD,QAAM,OAAOE,MAAK,QAAQ,GAAG;AAC7B,MAAI,QAAQ;AAEZ,MAAI;AAGJ,MAAI,UAAU,UAAa,UAAU,KAAM;AAE3C,MAAI,OAAO,UAAU,UAAU;AAE7B,QAAI,OAAO,MAAM,KAAK,EAAG;AAEzB,aAAS;AAAA,EACX,WAES,OAAO,UAAU,WAAW;AACnC,aAAS;AAAA,EACX,WAES,OAAO,UAAU,UAAU;AAClC,QAAI,KAAK,gBAAgB;AACvB,eAASC,OAAO,KAAK;AAAA,IACvB,WAAW,KAAK,gBAAgB;AAC9B,eAAS,MAAO,KAAK;AAAA,IACvB,WAAW,KAAK,uBAAuB;AACrC,eAASA,OAAO,MAAO,KAAK,EAAE,KAAK,GAAG,CAAC;AAAA,IACzC,OAAO;AACL,eAASC,gBAAe,MAAM,KAAK,UAAU,KAAK;AAAA,IACpD;AAAA,EACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,aAAS,MAAM,OAAO;AAAA,EACxB,OAAO;AACL,aAAS,KAAK,aAAa,UAAUC,OAAM,KAAK,IAAI,OAAO,KAAK;AAAA,EAClE;AAEA,MAAI,MAAM,QAAQ,MAAM,GAAG;AAEzB,UAAM,cAAc,CAAC;AAErB,WAAO,EAAE,QAAQ,OAAO,QAAQ;AAE9B,YAAMC;AAAA;AAAA,QACJF,gBAAe,MAAM,KAAK,UAAU,OAAO,KAAK,CAAC;AAAA;AAEnD,kBAAY,KAAK,IAAIE;AAAA,IACvB;AAEA,aAAS;AAAA,EACX;AAGA,MAAI,KAAK,aAAa,eAAe,MAAM,QAAQ,WAAW,SAAS,GAAG;AAExE,UAAMA;AAAA;AAAA,MAAwC;AAAA;AAC9C,aAAS,WAAW,UAAU,OAAOA,MAAK;AAAA,EAC5C;AAEA,aAAW,KAAK,QAAQ,IAAI;AAC9B;AAUA,SAASL,UAAS,OAAO,OAAO;AAC9B,MAAI,QAAQ;AAEZ,MAAI,UAAU,UAAa,UAAU,MAAM;AAAA,EAE3C,WAAW,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AACjE,UAAM,KAAK,EAAC,MAAM,QAAQ,OAAO,OAAO,KAAK,EAAC,CAAC;AAAA,EACjD,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,WAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,MAAAA,UAAS,OAAO,MAAM,KAAK,CAAC;AAAA,IAC9B;AAAA,EACF,WAAW,OAAO,UAAU,YAAY,UAAU,OAAO;AACvD,QAAI,MAAM,SAAS,QAAQ;AACzB,MAAAA,UAAS,OAAO,MAAM,QAAQ;AAAA,IAChC,OAAO;AACL,YAAM,KAAK,KAAK;AAAA,IAClB;AAAA,EACF,OAAO;AACL,UAAM,IAAI,MAAM,2CAA2C,QAAQ,GAAG;AAAA,EACxE;AACF;AAcA,SAASG,gBAAe,MAAM,MAAM,OAAO;AACzC,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,KAAK,UAAU,SAAS,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,GAAG;AACxD,aAAO,OAAO,KAAK;AAAA,IACrB;AAEA,SACG,KAAK,WAAW,KAAK,uBACrB,UAAU,MAAMG,WAAU,KAAK,MAAMA,WAAU,IAAI,IACpD;AACA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAASF,OAAM,OAAO;AAEpB,QAAM,SAAS,CAAC;AAEhB,MAAI;AAEJ,OAAK,OAAO,OAAO;AACjB,QAAIT,KAAI,KAAK,OAAO,GAAG,GAAG;AACxB,aAAO,KAAK,CAAC,KAAK,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,IAC1C;AAAA,EACF;AAEA,SAAO,OAAO,KAAK,IAAI;AACzB;AAUA,SAASE,iBAAgB,QAAQ;AAE/B,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,WAAO,OAAO,KAAK,EAAE,YAAY,CAAC,IAAI,OAAO,KAAK;AAAA,EACpD;AAEA,SAAO;AACT;;;ACxVO,IAAMU,4BAA2B;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACTO,IAAMC,KAAIC,SAAQC,OAAM,KAAK;AAI7B,IAAMC,KAAIF,SAAQG,MAAK,KAAKC,yBAAwB;;;AClC3D,SAAS,oBAAoB,KAAK,SAAS;AACvC,SAAO;AAAA,sBACW,KAAK,UAAU,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAiEnB,KAAK,UAAU,GAAG,CAAC;AAAA;AAE7C;AACO,SAAS,4BAA4B,SAAS;AACjD,UAAQ,QAAQ,QAAQ,KAAK,CAAC,EAAE,IAAI,MAAM;AACtC,UAAM,OAAOC,GAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;AACnC,UAAM,UAAUA,GAAE,UAAU;AAAA,MACxB,MAAM;AAAA,MACN,WAAW,CAAC,0BAA0B;AAAA,MACtC,SAAS,oBAAoB,KAAK;AAAA,QAC9B,MAAM;AAAA,QACN,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,MACpB,CAAC;AAAA,IACL,GAAG,CAAC,IAAI,CAAC;AACT,WAAO;AAAA,EACX,CAAC;AACL;;;ACtFO,SAAS,cAAc,MAAM;AAChC,SAAO,CAAC,CAAC,QAAQ,KAAK,SAAS,aAAa,aAAa;AAC7D;;;ACAO,SAAS,kBAAkBC,SAAQ;AACtC,QAAM,cAAc,OAAO,kBAAkBA,OAAM;AACnD,SAAO,cAAc,WAAW,IAAI,cAAc;AACtD;;;ACFA,SAAS,cAAc,KAAK;AACxB,QAAM,QAAQ,IAAI,MAAM,UAAU;AAClC,SAAO,QAAQ,MAAM,SAAS,IAAI;AACtC;AACO,SAAS,yBAAyB;AACrC,SAAO,CAAC,YAAY;AAChB,UAAM,EAAE,YAAY,IAAI,IAAI;AAC5B,UAAM,cAAc,kBAAkB,UAAU;AAChD,QAAI,CAAC;AACD;AACJ,oBAAgB,YAAY,cAAc;AAC1C,UAAM,aAAa,cAAc,GAAG;AACpC,UAAM,mBAAmBC,GAAE,QAAQ;AAAA,MAC/B,eAAe;AAAA,MACf,WAAW,CAAC,mBAAmB;AAAA,IACnC,GAAG,IAAI,MAAM,UAAU,EAAE,KAAKA,GAAE,MAAM,CAAC,CAAC;AACxC,gBAAY,SAAS,KAAK,gBAAgB;AAAA,EAC9C;AACJ;;;ACpBO,SAAS,oBAAoB,SAAS;AACzC,SAAO,CAAC,YAAY;AAChB,UAAM,EAAE,YAAY,OAAO,WAAW,IAAI;AAC1C,QAAI,eAAe,UAAa,UAAU,QAAW;AACjD,cAAQ,KAAK;AAAA,QACT;AAAA,QACA;AAAA,MACJ,EAAE,KAAK,IAAI,CAAC;AACZ;AAAA,IACJ;AACA,UAAM,UAAUC,GAAE,OAAO;AAAA,MACrB,WAAW,CAAC,SAAS;AAAA,IACzB,CAAC;AACD,UAAM,YAAYA,GAAE,OAAO;AAAA,MACvB,WAAW,CAAC,cAAc;AAAA,IAC9B,GAAG,CAAC,YAAY,OAAO,CAAC;AACxB,eAAW,SAAS,OAAO,OAAO,GAAG,SAAS;AAC9C,eAAW,UAAU,QAAQ,QAAQ,SAAS;AAC1C,cAAQ,SAAS,KAAKA,GAAE,OAAO;AAAA,QAC3B,WAAW,CAAC,cAAc;AAAA,MAC9B,GAAG,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC;AAAA,IACzB;AAAA,EACJ;AACJ;;;ACrBO,SAAS,oBAAoB,SAAS;AACzC,QAAM,UAAU;AAAA,IACZ,SAAS;AAAA,MACL,SAAS,CAAC;AAAA,IACd;AAAA,EACJ;AACA,QAAM,WAAW,QAEZ,OAAO,CAAC,MAAM,OAAO,QAAQ,IAAI,QAAQ,MAAM,CAAC,MAAM,KAAK,EAC3D,IAAI,CAAC,WAAW;AACjB,QAAI,WAAW;AACX,aAAO,uBAAuB;AAClC,QAAI,WAAW;AACX,aAAO,oBAAoB,OAAO;AACtC,QAAI,WAAW;AACX,aAAO,4BAA4B,OAAO;AAAA,EAClD,CAAC;AACD,SAAO,CAAC,YAAY;AAChB,eAAW,WAAW,UAAU;AAC5B,iBAAW,QAAQ,OAAO;AAAA,IAC9B;AAAA,EACJ;AACJ;;;ACzBO,SAAS,WAAW,MAAM;AAC7B,SAAO,CAAC,CAAC,QAAQ,KAAK,SAAS;AACnC;;;A1EQA,IAAM,SAAS,QAAQ,EAClB,IAAI,aAAa,EAAE,UAAU,KAAK,CAAC;AACjC,SAAS,uBAAuB,SAAS;AAC5C,QAAM,cAAc,qBAAoB,mCAAS,YAAW,CAAC,CAAC;AAC9D,SAAO,CAAC,MAAM,OAAO,eAAe;AAChC,QAAI,CAAC,cAAc,IAAI,KAAK,KAAK,YAAY,SAAS,UAAU,QAAQ,eAAe;AACnF;AACJ,UAAM,aAAa;AACnB,UAAM,cAAc,kBAAkB,UAAU;AAChD,QAAI,CAAC;AACD;AACJ,UAAM,OAAO,QAAQ,WAAW;AAChC,QAAI,CAAC,QAAQ,CAAC,eAAAC,QAAM,UAAU,IAAI;AAC9B;AACJ,UAAM,WAAW,OAAO,QAAQ,WAAW;AAC3C,QAAI,CAAC,WAAW,QAAQ;AACpB;AACJ,UAAM,MAAM,SAAS;AACrB,UAAMC,QAAO,eAAAD,QAAM,UAAU,KAAK,eAAAA,QAAM,UAAU,IAAI,GAAG,IAAI;AAC7D,UAAM,OAAO,OAAO,MAAMC,KAAI;AAC9B,oBAAgB,YAAY,YAAY,IAAI,EAAE;AAC9C,gBAAY,WAAW,CAAC,GAAG,KAAK,QAAQ;AACxC,gBAAY;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;;;A2EvCO,SAAS,2BAA2B;AACvC,SAAO,CAAC,SAAS,cAAc,IAAI,KAAK,KAAK,YAAY;AAC7D;;;A7EEA,IAAM,cAAc,CAAC,YAAY;AAC7B,MAAI,WAAW,QAAQ,SAAS;AAC5B,UAAM,UAAU,QAAQ,QACnB,OAAO,CAAC,WAAW,CAAC,gBAAgB,SAAS,MAAM,CAAC;AACzD,eAAW,UAAU,SAAS;AAC1B,aAAO,mBAAmB,MAAM,UAAU,MAAM;AAAA,IACpD;AAAA,EACJ;AACA,SAAO,CAAC,SAAS,MAAM,MAAM,yBAAyB,GAAG,uBAAuB,OAAO,CAAC;AAC5F;AACA,IAAO,cAAQ;",
  "names": ["Prism", "_self", "element", "lang", "root", "parent", "s", "next", "count", "import_prismjs", "h", "value", "parse", "point", "document", "attribute", "position", "location", "point", "CODE_POINTS", "ERR", "count", "TokenType", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "errors", "base", "_a", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "isAsciiAlphaNumeric", "_a", "count", "location", "document", "element", "EntryType", "element", "entry", "document", "element", "location", "InsertionMode", "document", "html", "parser", "_a", "element", "location", "parent", "parse", "html", "parser", "parse", "document", "value", "self", "parser", "document", "type", "_a", "s", "merge", "base", "_a", "_a", "is", "next", "position", "count", "parseSelector", "_b", "__assign", "s", "_a", "parse", "parse", "number", "boolbase", "parse", "nthCheck", "parent", "parent", "empty", "one", "all", "nest", "parent", "count", "parse", "_a", "normalize", "attribute", "attribute", "own", "normalize", "attribute", "html", "svg", "find", "normalize", "camelcase", "html", "svg", "own", "createH", "createAdjustMap", "h", "addProperty", "addChild", "find", "parse", "parsePrimitive", "style", "value", "normalize", "svgCaseSensitiveTagNames", "h", "createH", "html", "s", "svg", "svgCaseSensitiveTagNames", "h", "parent", "h", "h", "Prism", "html"]
}
